C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE COMMAND_PROCESSING
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Release\command_processing.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\command_processing.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB DF(NDEBUG) WL(2) PR(.
                    -\DP8051_Keil_951\Release/command_processing.lst) CD OT(11,SPEED) OJ(.\DP8051_Keil_951\Release\command_processing.obj)

line level    source

*** MESSAGE C286 IN LINE 0 OF (null): license limits optimization to level 5
   1          // ----------------------------------------------------------------------------
   2          // Copyright (C)  qbrobotics. All rights reserved.
   3          // www.qbrobotics.com
   4          // ----------------------------------------------------------------------------
   5          
   6          
   7          /**
   8          * \file         command_processing.c
   9          *
  10          
  11          * \brief        Command processing functions.
  12          * \date         May 16, 2016
  13          * \author       qbrobotics
  14          * \copyright    (C)  qbrobotics. All rights reserved.
  15          */
  16          
  17          //=================================================================     includes
  18          #include <command_processing.h>
  19          #include <interruptions.h>
  20          #include <stdio.h>
  21          #include <utils.h>
  22          #include <IMU_functions.h>
  23          #include <globals.h>
  24          
  25          #include "commands.h"
  26          
  27          //================================================================     variables
  28          
  29          reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  30          
  31          //==============================================================================
  32          //                                                            RX DATA PROCESSING
  33          //==============================================================================
  34          //  This function checks for the availability of a data packet and process it:
  35          //      - Verify checksum;
  36          //      - Process commands;
  37          //==============================================================================
  38          
  39          void commProcess(){
  40   1      
  41   1          uint8 CYDATA rx_cmd;
  42   1      
  43   1          rx_cmd = g_rx.buffer[0];
  44   1      
  45   1      //==========================================================     verify checksum
  46   1      
  47   1          if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  48   2              // Wrong checksum
  49   2              g_rx.ready = 0;
  50   2              return;
  51   2          }
  52   1      
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 2   

  53   1      
  54   1          switch(rx_cmd) {
  55   2      
  56   2      //=============================================================     CMD_ACTIVATE
  57   2              case CMD_ACTIVATE:
  58   2                  cmd_activate();
  59   2                  break;
  60   2      
  61   2      //===========================================================     CMD_SET_INPUTS
  62   2      
  63   2              case CMD_SET_INPUTS:
  64   2                  cmd_set_inputs();
  65   2                  break;
  66   2      
  67   2      //=====================================================     CMD_GET_MEASUREMENTS
  68   2      
  69   2              case CMD_GET_MEASUREMENTS:
  70   2                  cmd_get_measurements();
  71   2                  break;
  72   2      
  73   2      //=========================================================     CMD_GET_CURRENTS
  74   2      
  75   2              case CMD_GET_CURRENTS:
  76   2                  cmd_get_currents();
  77   2                  break;
  78   2      
  79   2      
  80   2      //=========================================================     CMD_GET_EMG
  81   2      
  82   2              case CMD_GET_EMG:
  83   2                  cmd_get_emg();
  84   2                  break;
  85   2      
  86   2      //=============================================================     CMD_WATCHDOG
  87   2                  
  88   2              case CMD_SET_WATCHDOG:
  89   2                  cmd_set_watchdog();
  90   2                  break;
  91   2                  
  92   2      //=========================================================     CMD_GET_ACTIVATE
  93   2                  
  94   2              case CMD_GET_ACTIVATE:
  95   2                  cmd_get_activate();
  96   2                  break;
  97   2                  
  98   2      //=========================================================     CMD_SET_BAUDRATE
  99   2                  
 100   2              case CMD_SET_BAUDRATE:
 101   2                  cmd_set_baudrate();
 102   2                  break;  
 103   2                  
 104   2      //============================================================     CMD_GET_INPUT
 105   2      
 106   2              case CMD_GET_INPUTS:
 107   2                  cmd_get_inputs();
 108   2                  break;
 109   2      
 110   2      //=============================================================     CMD_GET_INFO
 111   2      
 112   2              case CMD_GET_INFO:
 113   2                  infoGet( *((uint16 *) &g_rx.buffer[1]));
 114   2                  break;
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 3   

 115   2      
 116   2      //============================================================     CMD_SET_PARAM
 117   2                  
 118   2              case CMD_SET_ZEROS:
 119   2                  setZeros();
 120   2                  break;
 121   2      
 122   2      //============================================================     CMD_GET_PARAM
 123   2                  
 124   2              case CMD_GET_PARAM_LIST:
 125   2                  get_param_list( *((uint16 *) &g_rx.buffer[1]));
 126   2                  break;
 127   2      
 128   2      //=================================================================     CMD_PING
 129   2                  
 130   2              case CMD_PING:
 131   2                  cmd_ping();
 132   2                  break;
 133   2      
 134   2      //=========================================================     CMD_STORE_PARAMS
 135   2                  
 136   2              case CMD_STORE_PARAMS:
 137   2                  cmd_store_params();
 138   2                  break;
 139   2      
 140   2      //=================================================     CMD_STORE_DEFAULT_PARAMS
 141   2      
 142   2              case CMD_STORE_DEFAULT_PARAMS:
 143   2                  if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 144   2                      sendAcknowledgment(ACK_OK);
 145   2                  else
 146   2                      sendAcknowledgment(ACK_ERROR);
 147   2                  break;
 148   2      
 149   2      //=======================================================     CMD_RESTORE_PARAMS
 150   2      
 151   2              case CMD_RESTORE_PARAMS:
 152   2                  if(memRestore())
 153   2                      sendAcknowledgment(ACK_OK);
 154   2                  else
 155   2                      sendAcknowledgment(ACK_ERROR);
 156   2                  break;
 157   2      
 158   2      //=============================================================     CMD_INIT_MEM
 159   2      
 160   2              case CMD_INIT_MEM:
 161   2                  if(memInit())
 162   2                      sendAcknowledgment(ACK_OK);
 163   2                  else
 164   2                      sendAcknowledgment(ACK_ERROR);
 165   2                  break;
 166   2      
 167   2      //===========================================================     CMD_BOOTLOADER
 168   2      
 169   2              case CMD_BOOTLOADER:
 170   2                  //Not sure if ACK_OK is correct, should check
 171   2                  sendAcknowledgment(ACK_OK);
 172   2                  CyDelay(1000);
 173   2                  FTDI_ENABLE_REG_Write(0x00);
 174   2                  CyDelay(1000);
 175   2                  Bootloadable_Load();
 176   2                  break;
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 4   

 177   2      
 178   2      //============================================================     CMD_CALIBRATE
 179   2      
 180   2              case CMD_CALIBRATE:
 181   2                  break;
 182   2        
 183   2      //============================================================     CMD_GET_N_IMU
 184   2      
 185   2              case CMD_GET_N_IMU:
 186   2                  cmd_get_n_imu();
 187   2                  break;
 188   2                  
 189   2      //========================================================     CMD_GET_MAG_PARAM
 190   2      
 191   2              case CMD_GET_MAG_PARAM:
 192   2                  cmd_get_mag_param();
 193   2                  break;   
 194   2                  
 195   2      //=====================================================     CMD_GET_IMU_READINGS
 196   2      
 197   2              case CMD_GET_IMU_READINGS:
 198   2                  cmd_get_imu_readings();
 199   2                  break;
 200   2                  
 201   2      //=========================================================     CMD_SET_IMU_MODE
 202   2      
 203   2              case CMD_SET_IMU_MODE:
 204   2                  cmd_set_imu_mode();
 205   2                  break;
 206   2                  
 207   2      //========================================================     CMD_GET_IMUS_MODE
 208   2      
 209   2              case CMD_GET_IMUS_MODE:
 210   2                  cmd_get_imus_mode();
 211   2                  break;  
 212   2                  
 213   2      //========================================================     CMD_GET_IMUS_SFS
 214   2      
 215   2              case CMD_GET_IMUS_SFS:
 216   2                  cmd_get_imus_sfs();
 217   2                  break;              
 218   2                  
 219   2      //=========================================================== ALL OTHER COMMANDS
 220   2              default:
 221   2                  break;
 222   2                  
 223   2          }
 224   1          
 225   1      }
 226          
 227          
 228          //==============================================================================
 229          //                                                                     INFO SEND
 230          //==============================================================================
 231          
 232          void infoSend(){
 233   1          unsigned char packet_string[1100];
 234   1          infoPrepare(packet_string);
 235   1          UART_RS485_PutString(packet_string);
 236   1      }
 237          
 238          
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 5   

 239          //==============================================================================
 240          //                                                              COMMAND GET INFO
 241          //==============================================================================
 242          
 243          void infoGet(uint16 info_type) {
 244   1          static unsigned char packet_string[1100];
 245   1      
 246   1          //==================================     choose info type and prepare string
 247   1      
 248   1          switch (info_type) {
 249   2              case INFO_ALL:
 250   2                  infoPrepare(packet_string);
 251   2                  UART_RS485_PutString(packet_string);
 252   2                  break;
 253   2      
 254   2              default:
 255   2                  break;
 256   2          }
 257   1      }
 258          
 259          //==============================================================================
 260          //                                                                     SET ZEROS
 261          //==============================================================================
 262          
 263          void setZeros()
 264          {
 265   1          //nothing to do and nothing to say
 266   1      }
 267          
 268          //==============================================================================
 269          //                                                            GET PARAMETER LIST
 270          //==============================================================================
 271          
 272          void get_param_list(uint16 index)
 273          {
 274   1          //Package to be sent variables
 275   1          uint8 packet_data[901] = "";
 276   1          uint16 packet_lenght = 901;
 277   1      
 278   1          //Auxiliary variables
 279   1          uint16 CYDATA i;
 280   1          int32 aux_int;
 281   1      
 282   1          //Parameters menu string definitions
 283   1          char id_str[15]             = "1 - Device ID:";
 284   1          char acc_unity_str[34]      = "2 - Accelerometers unity:";
 285   1          char gyro_unity_str[28]     = "3 - Gyroscopes unity:";
 286   1          char mag_unity_str[28]      = "4 - Magnetometers unity:";
 287   1          char acc_fs_str[39]         = "5 - Accelerometers full range:";
 288   1          char gyro_fs_str[42]        = "6 - Gyroscopes full range:";
 289   1      
 290   1          //Parameters menus
 291   1          char acc_unity_menu[21] = "0 -> G\n1 -> m/(s^2)\n";
 292   1          char gyro_unity_menu[23] = "0 -> rad/s\n1 -> deg/s\n";
 293   1          char acc_fs_menu[50] = "0 -> +/- 2G\n1 -> +/- 4G\n2 -> +/- 8G\n3 -> +/- 16G\n";
 294   1          char gyro_fs_menu[59] = "0 -> +/- 250 deg/s\n1 -> +/- 500 deg/s\n2 -> +/- 2000 deg/s\n";
 295   1      
 296   1          //Strings lenghts
 297   1          uint8 CYDATA id_str_len = strlen(id_str);
 298   1          uint8 CYDATA acc_unity_str_len = strlen(acc_unity_str);
 299   1          uint8 CYDATA gyro_unity_str_len = strlen(gyro_unity_str);
 300   1          uint8 CYDATA mag_unity_str_len = strlen(mag_unity_str);
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 6   

 301   1          uint8 CYDATA acc_fs_str_len = strlen(acc_fs_str);
 302   1          uint8 CYDATA gyro_fs_str_len = strlen(gyro_fs_str);
 303   1          uint8 CYDATA acc_unity_menu_len = strlen(acc_unity_menu);
 304   1          uint8 CYDATA gyro_unity_menu_len = strlen(gyro_unity_menu);
 305   1          uint8 CYDATA acc_fs_menu_len = strlen(acc_fs_menu);
 306   1          uint8 CYDATA gyro_fs_menu_len = strlen(gyro_fs_menu);
 307   1      
 308   1          packet_data[0] = CMD_GET_PARAM_LIST;
 309   1          packet_data[1] = NUM_OF_PARAMS;
 310   1      
 311   1          switch(index) {
 312   2              case 0:         //List of all parameters with relative types
 313   2                  /*-----------------ID-----------------*/
 314   2      
 315   2                  packet_data[2] = TYPE_UINT8;
 316   2                  packet_data[3] = 1;
 317   2                  packet_data[4] = c_mem.id;
 318   2                  for(i = id_str_len; i != 0; i--)
 319   2                      packet_data[5 + id_str_len - i] = id_str[id_str_len - i];
 320   2      
 321   2                  /*-------------ACC UNITY--------------*/
 322   2      
 323   2                  packet_data[52] = TYPE_FLAG;
 324   2                  packet_data[53] = 1;
 325   2                  packet_data[54] = c_mem.acc_unity;
 326   2                  switch(c_mem.acc_unity){
 327   3                      case 0:
 328   3                          strcat(acc_unity_str, " G\0");
 329   3                          acc_unity_str_len = 28;
 330   3                      break;
 331   3                      case 1:
 332   3                          strcat(acc_unity_str, " m/(s^2)\0");
 333   3                          acc_unity_str_len = 34;
 334   3                      break;
 335   3                  }
 336   2                  for(i = acc_unity_str_len; i != 0; i--)
 337   2                      packet_data[55 + acc_unity_str_len - i] = acc_unity_str[acc_unity_str_len - i];
 338   2                  //The following byte indicates the number of menus at the end of the packet to send
 339   2                  packet_data[55 + acc_unity_str_len] = 1;
 340   2                  
 341   2                  /*-------------GYRO UNITY-------------*/
 342   2      
 343   2                  packet_data[102] = TYPE_FLAG;
 344   2                  packet_data[103] = 1;
 345   2                  packet_data[104] = c_mem.gyro_unity;
 346   2                  switch(c_mem.gyro_unity){
 347   3                      case 0:
 348   3                          strcat(gyro_unity_str, " deg/s\0");
 349   3                          gyro_unity_str_len = 28;
 350   3                      break;
 351   3                      case 1:
 352   3                          strcat(gyro_unity_str, " rad/s\0");
 353   3                          gyro_unity_str_len = 28;
 354   3                      break;
 355   3                  }
 356   2                  for(i = gyro_unity_str_len; i != 0; i--)
 357   2                      packet_data[105 + gyro_unity_str_len - i] = gyro_unity_str[gyro_unity_str_len - i];
 358   2                  //The following byte indicates the number of menus at the end of the packet to send
 359   2                  packet_data[105 + gyro_unity_str_len] = 2;    
 360   2                      
 361   2                  /*-------------MAG UNITY--------------*/
 362   2      
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 7   

 363   2                  packet_data[152] = TYPE_FLAG;
 364   2                  packet_data[153] = 1;
 365   2                  packet_data[154] = c_mem.mag_unity;
 366   2                  switch(c_mem.mag_unity){
 367   3                      case 0:
 368   3                          strcat(mag_unity_str, " uT\0");
 369   3                          mag_unity_str_len = 28;
 370   3                      break;
 371   3                  }
 372   2                  for(i = mag_unity_str_len; i != 0; i--)
 373   2                      packet_data[155 + mag_unity_str_len - i] = mag_unity_str[mag_unity_str_len - i];
 374   2      
 375   2                  /*------------ACC FULL RANGE-------------*/
 376   2                  
 377   2                  packet_data[202] = TYPE_FLAG;
 378   2                  packet_data[203] = 1;
 379   2                  packet_data[204] = c_mem.acc_sf;
 380   2                  switch(c_mem.acc_sf){
 381   3                      case 0:
 382   3                          strcat(acc_fs_str, " +/- 2G\0");
 383   3                          acc_fs_str_len = 38;
 384   3                      break;
 385   3                      case 1:
 386   3                          strcat(acc_fs_str, " +/- 4G\0");
 387   3                          acc_fs_str_len = 38;
 388   3                      break;
 389   3                      case 2:
 390   3                          strcat(acc_fs_str, " +/- 8G\0");
 391   3                          acc_fs_str_len = 38;
 392   3                      break;
 393   3                      case 3:
 394   3                          strcat(acc_fs_str, " +/- 16G\0");
 395   3                          acc_fs_str_len = 39;
 396   3                      break;
 397   3                  }
 398   2                  for(i = acc_fs_str_len; i != 0; i--)
 399   2                      packet_data[205 + acc_fs_str_len - i] = acc_fs_str[acc_fs_str_len - i];
 400   2                  //The following byte indicates the number of menus at the end of the packet to send
 401   2                  packet_data[205 + acc_fs_str_len] = 3;   
 402   2                      
 403   2                  /*------------GYRO FULL RANGE-------------*/
 404   2                  
 405   2                  packet_data[252] = TYPE_FLAG;
 406   2                  packet_data[253] = 1;
 407   2                  packet_data[254] = c_mem.gyro_sf;
 408   2                  switch(c_mem.gyro_sf){
 409   3                      case 0:
 410   3                          strcat(gyro_fs_str, " +/- 250 deg/s\0");
 411   3                          gyro_fs_str_len = 41;
 412   3                      break;
 413   3                      case 1:
 414   3                          strcat(gyro_fs_str, " +/- 500 deg/s\0");
 415   3                          gyro_fs_str_len = 41;
 416   3                      break;
 417   3                      case 2:
 418   3                          strcat(gyro_fs_str, " +/- 2000 deg/s\0");
 419   3                          gyro_fs_str_len = 42;
 420   3                      break;
 421   3                  }
 422   2                  for(i = gyro_fs_str_len; i != 0; i--)
 423   2                      packet_data[255 + gyro_fs_str_len - i] = gyro_fs_str[gyro_fs_str_len - i];
 424   2                  //The following byte indicates the number of menus at the end of the packet to send
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 8   

 425   2                  packet_data[255 + gyro_fs_str_len] = 4;                
 426   2      
 427   2                  /*------------PARAMETERS MENU-----------*/
 428   2      
 429   2                  for(i = acc_unity_menu_len; i != 0; i--)
 430   2                      packet_data[302 + acc_unity_menu_len - i] = acc_unity_menu[acc_unity_menu_len - i];
 431   2                      
 432   2                  for(i = gyro_unity_menu_len; i != 0; i--)
 433   2                      packet_data[452 + gyro_unity_menu_len - i] = gyro_unity_menu[gyro_unity_menu_len - i];
 434   2                      
 435   2                  for(i = acc_fs_menu_len; i != 0; i--)
 436   2                      packet_data[602 + acc_fs_menu_len - i] = acc_fs_menu[acc_fs_menu_len - i];
 437   2                   
 438   2                  for(i = gyro_fs_menu_len; i != 0; i--)
 439   2                      packet_data[752 + gyro_fs_menu_len - i] = gyro_fs_menu[gyro_fs_menu_len - i];
 440   2      
 441   2                  packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 442   2                  commWrite(packet_data, packet_lenght);
 443   2                  UART_RS485_ClearTxBuffer();
 444   2              break;
 445   2      
 446   2      //===================================================================     set_id
 447   2              case 1:         //ID - uint8
 448   2                  g_mem.id = g_rx.buffer[3];
 449   2              break;
 450   2              
 451   2      //=========================================================     set_acc_unity
 452   2              case 2:         //Acc unity - uint8
 453   2                  g_mem.acc_unity = g_rx.buffer[3];
 454   2              break;
 455   2      
 456   2      //=========================================================     set_gyro_unity
 457   2              case 3:         //Gyro unity - uint8
 458   2                  g_mem.gyro_unity = g_rx.buffer[3];
 459   2              break;
 460   2                  
 461   2      //=========================================================     set_mag_unity
 462   2              case 4:         //Mag unity - uint8
 463   2                  g_mem.mag_unity = g_rx.buffer[3];
 464   2                  
 465   2                  g_mem.mag_unity = 0;    // Further use (only uT measures at the moment)
 466   2              break;
 467   2                  
 468   2      //=========================================================     set_acc_sf
 469   2              case 5:         //Acc Full Range Scale - uint8
 470   2                  g_mem.acc_sf = g_rx.buffer[3];
 471   2                  
 472   2                  ImusReset();
 473   2              break; 
 474   2      
 475   2      //=========================================================     set_gyro_sf
 476   2              case 6:         //Gyro Full Range Scale - uint8
 477   2                  g_mem.gyro_sf = g_rx.buffer[3];
 478   2                  
 479   2                  ImusReset();
 480   2              break; 
 481   2                  
 482   2          }
 483   1      }
*** WARNING C280 IN LINE 280 OF .\command_processing.c: 'aux_int': unreferenced local variable
 484          
 485          
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 9   

 486          //==============================================================================
 487          //                                                           PREPARE DEVICE INFO
 488          //==============================================================================
 489          
 490          void infoPrepare(unsigned char *info_string)
 491          {
 492   1          int i;
 493   1          if(c_mem.id != 250){                //To avoid dummy board ping
 494   2              unsigned char str[100];
 495   2              strcpy(info_string, "");
 496   2              strcat(info_string, "\r\n");
 497   2              strcat(info_string, "Firmware version: ");
 498   2              strcat(info_string, VERSION);
 499   2              strcat(info_string, "\r\n\r\n");
 500   2      
 501   2              strcat(info_string, "DEVICE INFO\r\n");
 502   2              sprintf(str, "ID: %d\r\n", (int) c_mem.id);
 503   2              strcat(info_string, str);
 504   2           
 505   2              sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 506   2              strcat(info_string, str);
 507   2              
 508   2              strcat(info_string, "\r\n");
 509   2              
 510   2              strcat(info_string, "DEVICE PARAMETERS\r\n");
 511   2              strcat(info_string, "Accelerometers unity: ");
 512   2              switch(c_mem.acc_unity){
 513   3                  case 0:
 514   3                      strcat(info_string, "G\r\n");
 515   3                      break;
 516   3                  case 1:
 517   3                      strcat(info_string, "m/(s^2)\r\n");
 518   3                      break;
 519   3              }
 520   2              
 521   2              strcat(info_string, "Gyroscopes unity: ");
 522   2              switch(c_mem.gyro_unity){
 523   3                  case 0:
 524   3                      strcat(info_string, "deg/s\r\n");
 525   3                      break;
 526   3                  case 1:
 527   3                      strcat(info_string, "rad/s\r\n");
 528   3                      break;
 529   3              }
 530   2              
 531   2              strcat(info_string, "Magnetometers unity: ");
 532   2              switch(c_mem.mag_unity){
 533   3                  case 0:
 534   3                      strcat(info_string, "uT\r\n");
 535   3                      break;
 536   3              }
 537   2              
 538   2              strcat(info_string, "Accelerometers full range: ");
 539   2              switch(c_mem.acc_sf){
 540   3                  case 0:
 541   3                      strcat(info_string, "+/- 2G\r\n");
 542   3                  break;
 543   3                  case 1:
 544   3                      strcat(info_string, "+/- 4G\r\n");
 545   3                  break;
 546   3                  case 2:
 547   3                      strcat(info_string, "+/- 8G\r\n");
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 10  

 548   3                  break;
 549   3                  case 3:
 550   3                      strcat(info_string, "+/- 16G\r\n");
 551   3                  break;
 552   3              }
 553   2              
 554   2              strcat(info_string, "Gyroscopes full range: ");
 555   2              switch(c_mem.gyro_sf){
 556   3                  case 0:
 557   3                      strcat(info_string, "+/- 250 deg/s\r\n");
 558   3                  break;
 559   3                  case 1:
 560   3                      strcat(info_string, "+/- 500 deg/s\r\n");
 561   3                  break;
 562   3                  case 2:
 563   3                      strcat(info_string, "+/- 2000 deg/s\r\n");
 564   3                  break;
 565   3              }
 566   2              strcat(info_string, "\r\n");
 567   2              
 568   2              strcat(info_string, "IMUs CONFIGURATION\r\n");
 569   2              for (i=0; i<N_IMU_Connected; i++){
 570   3                  sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 571   3                  strcat(info_string, str);
 572   3                  
 573   3                  sprintf(str, "\tAccelerometers: ");
 574   3                  if ((IMU_conf[IMU_connected[i]][0]))
 575   3                      strcat(str, "YES\r\n");
 576   3                  else
 577   3                      strcat(str, "NO\r\n"); 
 578   3                  strcat(str, "\tGyroscopes: ");
 579   3                  if ((IMU_conf[IMU_connected[i]][1]))
 580   3                      strcat(str, "YES\r\n");
 581   3                  else
 582   3                      strcat(str, "NO\r\n"); 
 583   3                  strcat(str, "\tMagnetometers: ");
 584   3                  if ((IMU_conf[IMU_connected[i]][2]))
 585   3                      strcat(str, "YES\r\n");
 586   3                  else
 587   3                      strcat(str, "NO\r\n"); 
 588   3                  
 589   3                  strcat(info_string, str);
 590   3              }       
 591   2              
 592   2              strcat(info_string, "\r\n");
 593   2                  
 594   2              strcat(info_string, "SENSORS INFO\r\n");
 595   2              for (i=0; i<N_IMU_Connected; i++){
 596   3                  sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 597   3                  strcat(info_string, str);
 598   3                  
 599   3                  if ((IMU_conf[IMU_connected[i]][0])){
 600   4                      sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i].ac
             -cel_value[1],(int16) g_imu[i].accel_value[2]);
 601   4                      strcat(info_string, str);
 602   4                  }
 603   3      
 604   3                  if ((IMU_conf[IMU_connected[i]][1])){
 605   4                      sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i].gy
             -ro_value[1],(int16) g_imu[i].gyro_value[2]);
 606   4                      strcat(info_string, str);
 607   4                  }
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 11  

 608   3      
 609   3                  if ((IMU_conf[IMU_connected[i]][2])){
 610   4                      sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].mag_
             -value[1],(int16) g_imu[i].mag_value[2]);
 611   4                      strcat(info_string, str);
 612   4                  }
 613   3              
 614   3              }
 615   2                         
 616   2              strcat(info_string, "\r\n");
 617   2          }
 618   1      }
 619          
 620          //==============================================================================
 621          //                                                      WRITE FUNCTION FOR RS485
 622          //==============================================================================
 623          
 624          void commWrite(uint8 *packet_data, const uint16 packet_lenght)
 625          {
 626   1          uint16 CYDATA index;
 627   1      
 628   1          // frame - start
 629   1          UART_RS485_PutChar(':');
 630   1          UART_RS485_PutChar(':');
 631   1          
 632   1          // frame - ID
 633   1          UART_RS485_PutChar(g_mem.id);
 634   1          
 635   1          // frame - length
 636   1          UART_RS485_PutChar((uint8)packet_lenght);
 637   1          
 638   1          // frame - packet data
 639   1          for(index = 0; index < packet_lenght; ++index)
 640   1              UART_RS485_PutChar(packet_data[index]);
 641   1          
 642   1          index = 0;
 643   1      
 644   1          while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 645   1      
 646   1          RS485_CTS_Write(1);
 647   1          RS485_CTS_Write(0);
 648   1      }
 649          
 650          
 651          //==============================================================================
 652          //                                                             CHECKSUM FUNCTION
 653          //==============================================================================
 654          
 655          // Performs a XOR byte by byte on the entire vector
 656          
 657          uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 658   1          
 659   1          uint8 CYDATA i;
 660   1          uint8 CYDATA checksum = 0x00;
 661   1          
 662   1          for(i = 0; i < data_length; ++i)
 663   1             checksum ^= data_array[i];
 664   1        
 665   1          return checksum;
 666   1      }
 667          
 668          //==============================================================================
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 12  

 669          //                                                       ACKNOWLEDGMENT FUNCTION
 670          //==============================================================================
 671          
 672          void sendAcknowledgment(const uint8 value) {
 673   1          int packet_lenght = 2;
 674   1          uint8 packet_data[2];
 675   1      
 676   1          packet_data[0] = value;
 677   1          packet_data[1] = value;
 678   1      
 679   1          commWrite(packet_data, packet_lenght);
 680   1      }
 681          
 682          //==============================================================================
 683          //                                                                  STORE MEMORY
 684          //==============================================================================
 685          
 686          /**
 687          * This function stores current memory settings on the eeprom with the specified
 688          * displacement
 689          **/
 690          
 691          uint8 memStore(int displacement)
 692          {
 693   1          int i;  // iterator
 694   1          uint8 writeStatus;
 695   1          int pages;
 696   1          uint8 ret_val = 1;
 697   1      
 698   1          // Disable Interrupt
 699   1          ISR_RS485_RX_Disable();
 700   1      
 701   1      
 702   1          // Retrieve temperature for better writing performance
 703   1          CySetTemp();
 704   1      
 705   1          memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 706   1      
 707   1          pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 708   1      
 709   1          for(i = 0; i < pages; ++i) {
 710   2              writeStatus = EEPROM_Write(&g_mem.flag + 16 * i, i + displacement);
 711   2              if(writeStatus != CYRET_SUCCESS) {
 712   3                  ret_val = 0;
 713   3                  break;
 714   3              }
 715   2          }
 716   1      
 717   1          memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 718   1      
 719   1          // Re-Enable Interrupt
 720   1          ISR_RS485_RX_Enable();
 721   1      
 722   1          return ret_val;
 723   1      }
 724          
 725          
 726          //==============================================================================
 727          //                                                                 RECALL MEMORY
 728          //==============================================================================
 729          
 730          /**
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 13  

 731          * This function loads user settings from the eeprom.
 732          **/
 733          
 734          void memRecall()
 735          {
 736   1          uint16 i;
 737   1      
 738   1          for (i = 0; i < sizeof(g_mem); i++) {
 739   2              ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 740   2          }
 741   1      
 742   1          //check for initialization
 743   1          if (g_mem.flag == FALSE) {
 744   2              memRestore();
 745   2          } else {
 746   2              memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 747   2          }
 748   1      }
 749          
 750          
 751          //==============================================================================
 752          //                                                                RESTORE MEMORY
 753          //==============================================================================
 754          
 755          /**
 756          * This function loads default settings from the eeprom.
 757          **/
 758          
 759          uint8 memRestore() {
 760   1          uint16 i;
 761   1      
 762   1          for (i = 0; i < sizeof(g_mem); i++) {
 763   2              ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 764   2          }
 765   1      
 766   1          //check for initialization
 767   1          if (g_mem.flag == FALSE) {
 768   2              return memInit();
 769   2          } else {
 770   2              return memStore(0);
 771   2          }
 772   1      }
 773          
 774          //==============================================================================
 775          //                                                                   MEMORY INIT
 776          //==============================================================================
 777          
 778          /**
 779          * This function initialize memory when eeprom is compromised.
 780          **/
 781          
 782          uint8 memInit()
 783          {
 784   1          uint8 i;
 785   1      
 786   1          //initialize memory settings
 787   1          g_mem.id            = 1;
 788   1      
 789   1       
 790   1          g_mem.acc_unity     = 0;
 791   1          
 792   1          g_mem.gyro_unity    = 0;
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 14  

 793   1          
 794   1          g_mem.mag_unity     = 0;
 795   1          
 796   1          // set the initialized flag to show EEPROM has been populated
 797   1          g_mem.flag = TRUE;
 798   1          
 799   1          //write that configuration to EEPROM
 800   1          return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 801   1      }
*** WARNING C280 IN LINE 784 OF .\command_processing.c: 'i': unreferenced local variable
 802          
 803          //==============================================================================
 804          //                                                    ROUTINE INTERRUPT FUNCTION
 805          //==============================================================================
 806          /**
 807          * Bunch of functions used on request from UART communication
 808          **/
 809          
 810          void cmd_get_measurements(){
 811   1         //nothing to do and nothing to say 
 812   1      }
 813          
 814          void cmd_set_inputs(){
 815   1         //nothing to do and nothing to say
 816   1      }
 817          
 818          void cmd_activate(){
 819   1          //nothing to do and nothing to say
 820   1      }
 821          
 822          void cmd_get_activate(){
 823   1          //nothing to do and nothing to say
 824   1      }
 825          
 826          void cmd_get_curr_and_meas(){
 827   1          //nothing to do and nothing to say   
 828   1      }
 829          
 830          void cmd_get_currents(){
 831   1          //nothing to do and nothing to say
 832   1      }
 833          
 834          void cmd_set_baudrate(){
 835   1          
 836   1          // Set BaudRate
 837   1          c_mem.baud_rate = g_rx.buffer[1];
 838   1          
 839   1          switch(g_rx.buffer[1]){
 840   2              case 13:
 841   2                  CLOCK_UART_SetDividerValue(13);
 842   2                  break;
 843   2              default:
 844   2                  CLOCK_UART_SetDividerValue(3);
 845   2          }
 846   1      }
 847          
 848          void cmd_ping(){
 849   1      
 850   1          uint8 packet_data[2];
 851   1      
 852   1          // Header
 853   1          packet_data[0] = CMD_PING;
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 15  

 854   1          
 855   1          // Load Payload
 856   1          packet_data[1] = CMD_PING;
 857   1      
 858   1          // Send Package to uart
 859   1          commWrite(packet_data, 2);
 860   1      }
 861          
 862          void cmd_set_watchdog(){
 863   1            
 864   1          if (g_rx.buffer[1] <= 0){
 865   2              // Deactivate Watchdog
 866   2              WATCHDOG_ENABLER_Write(1); 
 867   2              g_mem.watchdog_period = 0;   
 868   2          }
 869   1          else{
 870   2              // Activate Watchdog        
 871   2              if (g_rx.buffer[1] > MAX_WATCHDOG_TIMER)
 872   2                  g_rx.buffer[1] = MAX_WATCHDOG_TIMER;
 873   2                  
 874   2              // Period * Time_CLK = WDT
 875   2              // Period = WTD / Time_CLK =     (WTD    )  / ( ( 1 / Freq_CLK ) )
 876   2              // Set request watchdog period - (WTD * 2)  * (250 / 1024        )
 877   2              g_mem.watchdog_period = (uint8) (((uint32) g_rx.buffer[1] * 2 * 250 ) >> 10);   
 878   2              WATCHDOG_COUNTER_WritePeriod(g_mem.watchdog_period); 
 879   2              WATCHDOG_ENABLER_Write(0); 
 880   2          }
 881   1      }
 882          
 883          void cmd_get_inputs(){
 884   1          //nothing to do and nothing to say
 885   1      }
 886          
 887          void cmd_store_params(){
 888   1         
 889   1          if(memStore(0))
 890   1              sendAcknowledgment(ACK_OK);
 891   1          else
 892   1              sendAcknowledgment(ACK_ERROR);
 893   1      }
 894          
 895          void cmd_get_emg(){
 896   1          //nothing to do and nothing to say
 897   1      }
 898          
 899          void cmd_get_n_imu(){
 900   1          //Get number of IMUs connected to board
 901   1          
 902   1          uint8 packet_data[3];
 903   1      
 904   1          // Header        
 905   1          packet_data[0] = CMD_GET_N_IMU;
 906   1          
 907   1          // Fill payload
 908   1          packet_data[1] = (uint8) N_IMU_Connected;
 909   1          
 910   1          // Calculate checksum
 911   1          packet_data[2] = LCRChecksum(packet_data, 2);
 912   1          
 913   1          // Send package to UART
 914   1          commWrite(packet_data, 3);
 915   1      }
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 16  

 916          
 917          
 918          void cmd_get_mag_param(){
 919   1          
 920   1          // Retrieve a summary of what we are reading from all imus
 921   1          uint8 CYDATA k_imu = 0;
 922   1          uint8 flags;
 923   1          uint8 sz = 1 + 4*N_IMU_Connected + 1;
 924   1          
 925   1          // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
 926   1          uint8 packet_data[50];
 927   1      
 928   1          //Header package 
 929   1          packet_data[0] = CMD_GET_MAG_PARAM;
 930   1      
 931   1          for (k_imu=0; k_imu < N_IMU_Connected; k_imu++) 
 932   1          {   
 933   2                  packet_data[1 + 4*k_imu]     = (uint8) IMU_connected[k_imu];                // IMU id
 934   2              packet_data[1 + 4*k_imu + 1] = (uint8) MagCal[IMU_connected[k_imu]][0];     // IMU MagCal X
 935   2              packet_data[1 + 4*k_imu + 2] = (uint8) MagCal[IMU_connected[k_imu]][1];     // IMU MagCal Y
 936   2              packet_data[1 + 4*k_imu + 3] = (uint8) MagCal[IMU_connected[k_imu]][2];     // IMU MagCal X
 937   2              }
 938   1      
 939   1          // Calculate Checksum and send message to UART 
 940   1          packet_data[sz-1] = LCRChecksum (packet_data, sz-1);
 941   1          commWrite(packet_data, sz);
 942   1          
 943   1      }
*** WARNING C280 IN LINE 922 OF .\command_processing.c: 'flags': unreferenced local variable
 944          
 945          void cmd_get_imu_readings(){
 946   1          //Retrieve accelerometers, gyroscopes and magnetometers readings
 947   1          
 948   1          // Packet to send is handled by isr_imu interrupt routine (in this way you work with consistent data a
             -nd no other imu interrupt disturbs data sending)
 949   1          imu_send_flag = 1;
 950   1      }
 951          
 952          void cmd_set_imu_mode(){
 953   1          uint8 k_imu = 0;
 954   1          
 955   1          // Set sensors to read for each IMU
 956   1          uint8 id = (uint8) g_rx.buffer[1];
 957   1          uint8 flags = (uint8) g_rx.buffer[2];
 958   1          
 959   1          IMU_conf[id][0] = (flags & 0x04) >> 2;
 960   1          IMU_conf[id][1] = (flags & 0x02) >> 1;
 961   1          IMU_conf[id][2] = flags & 0x01;
 962   1          
 963   1          imus_data_size = 1; //header
 964   1          
 965   1          for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++)
 966   1          {
 967   2              single_imu_size[IMU_connected[k_imu]] = 1 + 6*IMU_conf[IMU_connected[k_imu]][0] + 6*IMU_conf[IMU_c
             -onnected[k_imu]][1] + 6*IMU_conf[IMU_connected[k_imu]][2] + 1;
 968   2              imus_data_size = imus_data_size + single_imu_size[IMU_connected[k_imu]];
 969   2          }
 970   1          imus_data_size = imus_data_size + 1;    //checksum
 971   1      }
 972          
 973          void cmd_get_imus_mode(){
 974   1          // Retrieve a summary of what we are reading from all imus
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 17  

 975   1          uint8 CYDATA k_imu = 0;
 976   1          uint8 flags;
 977   1          uint8 sz = 1 + 2*N_IMU_Connected + 1;
 978   1          
 979   1          // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
 980   1          uint8 packet_data[50];
 981   1      
 982   1          //Header package 
 983   1          packet_data[0] = CMD_GET_IMUS_MODE;
 984   1      
 985   1          for (k_imu=0; k_imu < N_IMU_Connected; k_imu++) 
 986   1          {   
 987   2                  packet_data[1 + 2*k_imu] = (uint8) IMU_connected[k_imu];        // IMU id
 988   2              packet_data[1 + 2*k_imu + 1] = (uint8) ((IMU_conf[IMU_connected[k_imu]][0]<<2) | (IMU_conf[IMU_con
             -nected[k_imu]][1]<<1) | (IMU_conf[IMU_connected[k_imu]][2]));      // IMU reading flags
 989   2              }
 990   1      
 991   1          // Calculate Checksum and send message to UART 
 992   1          packet_data[sz-1] = LCRChecksum (packet_data, sz-1);
 993   1          commWrite(packet_data, sz);
 994   1      
 995   1      }
*** WARNING C280 IN LINE 976 OF .\command_processing.c: 'flags': unreferenced local variable
 996          
 997          void cmd_get_imus_sfs(){
 998   1          // Retrieve a summary of ACC, GYRO and MAG scale factors and unities
 999   1          uint8 packet_data[50];
1000   1          uint8 sz = 1 + (6 * sizeof(float)) + 1;
1001   1          
1002   1          float acc_sf_par = 0.0;
1003   1          float gyro_sf_par = 0.0;
1004   1          float mag_sf_par = 0.0;
1005   1          
1006   1          acc_sf_par = ACC_SF * (float)rateAcc;   // Obtain SF for g
1007   1          switch (g_mem.acc_unity) {
1008   2              case 0:     // leave SF as is
1009   2                  break;
1010   2              case 1:
1011   2                  acc_sf_par = acc_sf_par * G_TO_MS2; // for m/(s^2) measures
1012   2                  break;
1013   2              default:
1014   2                  break;
1015   2          }
1016   1          
1017   1          gyro_sf_par = GYRO_SF * (float)rateGyro;     // Obtain SF for deg/s
1018   1          switch (g_mem.gyro_unity) {
1019   2              case 0:     // leave SF as is
1020   2                  break;
1021   2              case 1:
1022   2                  gyro_sf_par = gyro_sf_par * DEG_TO_RAD;   // for rad/s measures
1023   2                  break;
1024   2              default:
1025   2                  break;
1026   2          }
1027   1          
1028   1          mag_sf_par = MAG_SF;
1029   1          switch (g_mem.mag_unity) {      // further uses (only uT measures at the moment)
1030   2              default:
1031   2                  break;
1032   2          }
1033   1          
1034   1          packet_data[0] = CMD_GET_IMUS_SFS;
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 18  

1035   1          
1036   1          // Scale factors
1037   1          *((float *) ( packet_data + 1 )) = (float) acc_sf_par;      // SF to g
1038   1          *((float *) ( packet_data + 5 )) = (float) gyro_sf_par;     // SF to deg/s
1039   1          *((float *) ( packet_data + 9 )) = (float) mag_sf_par;      // SF to uT
1040   1          
1041   1          // Unities
1042   1          *((float *) ( packet_data + 13 )) = (float) g_mem.acc_unity;    // 0 -> g, 1 -> m/(s^2)
1043   1          *((float *) ( packet_data + 17 )) = (float) g_mem.gyro_unity;   // 0 -> deg/s, 1 -> rad/s
1044   1          *((float *) ( packet_data + 21 )) = (float) g_mem.mag_unity;    // 0 -> uT
1045   1          
1046   1          // Calculate Checksum and send message to UART 
1047   1          packet_data[sz-1] = LCRChecksum (packet_data, sz-1);
1048   1          commWrite(packet_data, sz);
1049   1          
1050   1      }
1051          /* [] END OF FILE */
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 19  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION commProcess (BEGIN)
                                           ; SOURCE LINE # 39
                                           ; SOURCE LINE # 43
0000 900000      E     MOV     DPTR,#g_rx
0003 E0                MOVX    A,@DPTR
0004 F500        R     MOV     rx_cmd,A
                                           ; SOURCE LINE # 47
0006 7B01              MOV     R3,#01H
0008 7A00        E     MOV     R2,#HIGH g_rx
000A 7900        E     MOV     R1,#LOW g_rx
000C 900000      E     MOV     DPTR,#g_rx+080H
000F E0                MOVX    A,@DPTR
0010 A3                INC     DPTR
0011 E0                MOVX    A,@DPTR
0012 14                DEC     A
0013 FD                MOV     R5,A
0014 120000      R     LCALL   _LCRChecksum
0017 900000      E     MOV     DPTR,#g_rx+080H
001A E0                MOVX    A,@DPTR
001B FC                MOV     R4,A
001C A3                INC     DPTR
001D E0                MOVX    A,@DPTR
001E 2400        E     ADD     A,#LOW g_rx+0FFFFH
0020 F582              MOV     DPL,A
0022 7400        E     MOV     A,#HIGH g_rx+0FFFFH
0024 3C                ADDC    A,R4
0025 F583              MOV     DPH,A
0027 E0                MOVX    A,@DPTR
0028 B50703            CJNE    A,AR7,?C0002
002B D3                SETB    C
002C 8001              SJMP    ?C0003
002E         ?C0002:
002E C3                CLR     C
002F         ?C0003:
002F 4006              JC      ?C0001
                                           ; SOURCE LINE # 49
0031 E4                CLR     A
0032 900000      E     MOV     DPTR,#g_rx+084H
0035 F0                MOVX    @DPTR,A
0036 22                RET     
                                           ; SOURCE LINE # 51
0037         ?C0001:
                                           ; SOURCE LINE # 54
0037 E500        R     MOV     A,rx_cmd
0039 120000      E     LCALL   ?C?CCASE
003C 0000        R     DW      ?C0018
003E 00                DB      00H
003F 0000        R     DW      ?C0016
0041 01                DB      01H
0042 0000        R     DW      ?C0019
0044 03                DB      03H
0045 0000        R     DW      ?C0020
0047 04                DB      04H
0048 0000        R     DW      ?C0023
004A 05                DB      05H
004B 0000        R     DW      ?C0015
004D 06                DB      06H
004E 0000        R     DW      ?C0029
0050 09                DB      09H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 20  

0051 0000        R     DW      ?C0026
0053 0A                DB      0AH
0054 0000        R     DW      ?C0017
0056 0C                DB      0CH
0057 0000        R     DW      ?C0006
0059 80                DB      080H
005A 0000        R     DW      ?C0012
005C 81                DB      081H
005D 0000        R     DW      ?C0007
005F 82                DB      082H
0060 0000        R     DW      ?C0014
0062 83                DB      083H
0063 0000        R     DW      ?C0008
0065 84                DB      084H
0066 0000        R     DW      ?C0009
0068 85                DB      085H
0069 0000        R     DW      ?C0010
006B 88                DB      088H
006C 0000        R     DW      ?C0011
006E 8A                DB      08AH
006F 0000        R     DW      ?C0013
0071 8B                DB      08BH
0072 0000        R     DW      ?C0031
0074 93                DB      093H
0075 0000        R     DW      ?C0032
0077 94                DB      094H
0078 0000        R     DW      ?C0033
007A 95                DB      095H
007B 0000        R     DW      ?C0034
007D 96                DB      096H
007E 0000        R     DW      ?C0035
0080 97                DB      097H
0081 0000        R     DW      ?C0036
0083 98                DB      098H
0084 0000              DW      00H
0086 0000        R     DW      ?C0004
                                           ; SOURCE LINE # 57
0088         ?C0006:
                                           ; SOURCE LINE # 58
0088 120000      R     LCALL   cmd_activate
                                           ; SOURCE LINE # 59
008B 22                RET     
                                           ; SOURCE LINE # 63
008C         ?C0007:
                                           ; SOURCE LINE # 64
008C 120000      R     LCALL   cmd_set_inputs
                                           ; SOURCE LINE # 65
008F 22                RET     
                                           ; SOURCE LINE # 69
0090         ?C0008:
                                           ; SOURCE LINE # 70
0090 120000      R     LCALL   cmd_get_measurements
                                           ; SOURCE LINE # 71
0093 22                RET     
                                           ; SOURCE LINE # 75
0094         ?C0009:
                                           ; SOURCE LINE # 76
0094 120000      R     LCALL   cmd_get_currents
                                           ; SOURCE LINE # 77
0097 22                RET     
                                           ; SOURCE LINE # 82
0098         ?C0010:
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 21  

                                           ; SOURCE LINE # 83
0098 120000      R     LCALL   cmd_get_emg
                                           ; SOURCE LINE # 84
009B 22                RET     
                                           ; SOURCE LINE # 88
009C         ?C0011:
                                           ; SOURCE LINE # 89
009C 120000      R     LCALL   cmd_set_watchdog
                                           ; SOURCE LINE # 90
009F 22                RET     
                                           ; SOURCE LINE # 94
00A0         ?C0012:
                                           ; SOURCE LINE # 95
00A0 120000      R     LCALL   cmd_get_activate
                                           ; SOURCE LINE # 96
00A3 22                RET     
                                           ; SOURCE LINE # 100
00A4         ?C0013:
                                           ; SOURCE LINE # 101
00A4 120000      R     LCALL   cmd_set_baudrate
                                           ; SOURCE LINE # 102
00A7 22                RET     
                                           ; SOURCE LINE # 106
00A8         ?C0014:
                                           ; SOURCE LINE # 107
00A8 120000      R     LCALL   cmd_get_inputs
                                           ; SOURCE LINE # 108
00AB 22                RET     
                                           ; SOURCE LINE # 112
00AC         ?C0015:
                                           ; SOURCE LINE # 113
00AC 900000      E     MOV     DPTR,#g_rx+01H
00AF E0                MOVX    A,@DPTR
00B0 FE                MOV     R6,A
00B1 A3                INC     DPTR
00B2 E0                MOVX    A,@DPTR
00B3 FF                MOV     R7,A
00B4 120000      R     LCALL   _infoGet
                                           ; SOURCE LINE # 114
00B7 22                RET     
                                           ; SOURCE LINE # 118
00B8         ?C0016:
                                           ; SOURCE LINE # 119
00B8 120000      R     LCALL   setZeros
                                           ; SOURCE LINE # 120
00BB 22                RET     
                                           ; SOURCE LINE # 124
00BC         ?C0017:
                                           ; SOURCE LINE # 125
00BC 900000      E     MOV     DPTR,#g_rx+01H
00BF E0                MOVX    A,@DPTR
00C0 FE                MOV     R6,A
00C1 A3                INC     DPTR
00C2 E0                MOVX    A,@DPTR
00C3 FF                MOV     R7,A
00C4 120000      R     LCALL   _get_param_list
                                           ; SOURCE LINE # 126
00C7 22                RET     
                                           ; SOURCE LINE # 130
00C8         ?C0018:
                                           ; SOURCE LINE # 131
00C8 120000      R     LCALL   cmd_ping
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 22  

                                           ; SOURCE LINE # 132
00CB 22                RET     
                                           ; SOURCE LINE # 136
00CC         ?C0019:
                                           ; SOURCE LINE # 137
00CC 120000      R     LCALL   cmd_store_params
                                           ; SOURCE LINE # 138
00CF 22                RET     
                                           ; SOURCE LINE # 142
00D0         ?C0020:
                                           ; SOURCE LINE # 143
00D0 7F08              MOV     R7,#08H
00D2 7E00              MOV     R6,#00H
00D4 120000      R     LCALL   _memStore
00D7 EF                MOV     A,R7
00D8 6006              JZ      ?C0021
                                           ; SOURCE LINE # 144
00DA 7F01              MOV     R7,#01H
00DC 120000      R     LCALL   _sendAcknowledgment
00DF 22                RET     
00E0         ?C0021:
                                           ; SOURCE LINE # 146
00E0 E4                CLR     A
00E1 FF                MOV     R7,A
00E2 120000      R     LCALL   _sendAcknowledgment
                                           ; SOURCE LINE # 147
00E5 22                RET     
                                           ; SOURCE LINE # 151
00E6         ?C0023:
                                           ; SOURCE LINE # 152
00E6 120000      R     LCALL   memRestore
00E9 EF                MOV     A,R7
00EA 6006              JZ      ?C0024
                                           ; SOURCE LINE # 153
00EC 7F01              MOV     R7,#01H
00EE 120000      R     LCALL   _sendAcknowledgment
00F1 22                RET     
00F2         ?C0024:
                                           ; SOURCE LINE # 155
00F2 E4                CLR     A
00F3 FF                MOV     R7,A
00F4 120000      R     LCALL   _sendAcknowledgment
                                           ; SOURCE LINE # 156
00F7 22                RET     
                                           ; SOURCE LINE # 160
00F8         ?C0026:
                                           ; SOURCE LINE # 161
00F8 120000      R     LCALL   memInit
00FB EF                MOV     A,R7
00FC 6006              JZ      ?C0027
                                           ; SOURCE LINE # 162
00FE 7F01              MOV     R7,#01H
0100 120000      R     LCALL   _sendAcknowledgment
0103 22                RET     
0104         ?C0027:
                                           ; SOURCE LINE # 164
0104 E4                CLR     A
0105 FF                MOV     R7,A
0106 120000      R     LCALL   _sendAcknowledgment
                                           ; SOURCE LINE # 165
0109 22                RET     
                                           ; SOURCE LINE # 169
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 23  

010A         ?C0029:
                                           ; SOURCE LINE # 171
010A 7F01              MOV     R7,#01H
010C 120000      R     LCALL   _sendAcknowledgment
                                           ; SOURCE LINE # 172
010F E4                CLR     A
0110 7FE8              MOV     R7,#0E8H
0112 7E03              MOV     R6,#03H
0114 FD                MOV     R5,A
0115 FC                MOV     R4,A
0116 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 173
0119 E4                CLR     A
011A FF                MOV     R7,A
011B 120000      E     LCALL   _FTDI_ENABLE_REG_Write
                                           ; SOURCE LINE # 174
011E E4                CLR     A
011F 7FE8              MOV     R7,#0E8H
0121 7E03              MOV     R6,#03H
0123 FD                MOV     R5,A
0124 FC                MOV     R4,A
0125 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 175
0128 120000      E     LCALL   Bootloadable_Load
                                           ; SOURCE LINE # 176
012B 22                RET     
                                           ; SOURCE LINE # 180
                                           ; SOURCE LINE # 181
                                           ; SOURCE LINE # 185
012C         ?C0031:
                                           ; SOURCE LINE # 186
012C 120000      R     LCALL   cmd_get_n_imu
                                           ; SOURCE LINE # 187
012F 22                RET     
                                           ; SOURCE LINE # 191
0130         ?C0032:
                                           ; SOURCE LINE # 192
0130 120000      R     LCALL   cmd_get_mag_param
                                           ; SOURCE LINE # 193
0133 22                RET     
                                           ; SOURCE LINE # 197
0134         ?C0033:
                                           ; SOURCE LINE # 198
0134 120000      R     LCALL   cmd_get_imu_readings
                                           ; SOURCE LINE # 199
0137 22                RET     
                                           ; SOURCE LINE # 203
0138         ?C0034:
                                           ; SOURCE LINE # 204
0138 120000      R     LCALL   cmd_set_imu_mode
                                           ; SOURCE LINE # 205
013B 22                RET     
                                           ; SOURCE LINE # 209
013C         ?C0035:
                                           ; SOURCE LINE # 210
013C 120000      R     LCALL   cmd_get_imus_mode
                                           ; SOURCE LINE # 211
013F 22                RET     
                                           ; SOURCE LINE # 215
0140         ?C0036:
                                           ; SOURCE LINE # 216
0140 120000      R     LCALL   cmd_get_imus_sfs
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 24  

                                           ; SOURCE LINE # 217
                                           ; SOURCE LINE # 220
                                           ; SOURCE LINE # 221
                                           ; SOURCE LINE # 223
                                           ; SOURCE LINE # 225
0143         ?C0004:
0143 22                RET     
             ; FUNCTION commProcess (END)

             ; FUNCTION infoSend (BEGIN)
                                           ; SOURCE LINE # 232
                                           ; SOURCE LINE # 234
0000 7B01              MOV     R3,#01H
0002 7A00        R     MOV     R2,#HIGH packet_string
0004 7900        R     MOV     R1,#LOW packet_string
0006 120000      R     LCALL   _infoPrepare
                                           ; SOURCE LINE # 235
0009 7B01              MOV     R3,#01H
000B 7A00        R     MOV     R2,#HIGH packet_string
000D 7900        R     MOV     R1,#LOW packet_string
000F 120000      E     LCALL   _UART_RS485_PutString
                                           ; SOURCE LINE # 236
0012 22                RET     
             ; FUNCTION infoSend (END)

             ; FUNCTION _infoGet (BEGIN)
                                           ; SOURCE LINE # 243
;---- Variable 'info_type' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 248
0000 EF                MOV     A,R7
0001 7015              JNZ     ?C0042
0003 EE                MOV     A,R6
0004 7012              JNZ     ?C0042
                                           ; SOURCE LINE # 249
0006         ?C0040:
                                           ; SOURCE LINE # 250
0006 7B01              MOV     R3,#01H
0008 7A00        R     MOV     R2,#HIGH packet_string
000A 7900        R     MOV     R1,#LOW packet_string
000C 120000      R     LCALL   _infoPrepare
                                           ; SOURCE LINE # 251
000F 7B01              MOV     R3,#01H
0011 7A00        R     MOV     R2,#HIGH packet_string
0013 7900        R     MOV     R1,#LOW packet_string
0015 120000      E     LCALL   _UART_RS485_PutString
                                           ; SOURCE LINE # 252
                                           ; SOURCE LINE # 254
                                           ; SOURCE LINE # 255
                                           ; SOURCE LINE # 256
                                           ; SOURCE LINE # 257
0018         ?C0042:
0018 22                RET     
             ; FUNCTION _infoGet (END)

             ; FUNCTION setZeros (BEGIN)
                                           ; SOURCE LINE # 263
                                           ; SOURCE LINE # 264
                                           ; SOURCE LINE # 266
0000 22                RET     
             ; FUNCTION setZeros (END)

             ; FUNCTION _get_param_list (BEGIN)
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 25  

                                           ; SOURCE LINE # 272
0000 900000      R     MOV     DPTR,#index
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 273
                                           ; SOURCE LINE # 275
0008 7800        R     MOV     R0,#LOW packet_data
000A 7C00        R     MOV     R4,#HIGH packet_data
000C 7D01              MOV     R5,#01H
000E 7BFF              MOV     R3,#0FFH
0010 7A00        R     MOV     R2,#HIGH _?ix1000
0012 7900        R     MOV     R1,#LOW _?ix1000
0014 7E03              MOV     R6,#03H
0016 7F85              MOV     R7,#085H
0018 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 276
001B 900000      R     MOV     DPTR,#packet_lenght
001E 7403              MOV     A,#03H
0020 F0                MOVX    @DPTR,A
0021 A3                INC     DPTR
0022 7485              MOV     A,#085H
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 283
0025 7800        R     MOV     R0,#LOW id_str
0027 7C00        R     MOV     R4,#HIGH id_str
0029 7D01              MOV     R5,#01H
002B 7BFF              MOV     R3,#0FFH
002D 7A00        R     MOV     R2,#HIGH _?ix1001
002F 7900        R     MOV     R1,#LOW _?ix1001
0031 7E00              MOV     R6,#00H
0033 7F0F              MOV     R7,#0FH
0035 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 284
0038 7800        R     MOV     R0,#LOW acc_unity_str
003A 7C00        R     MOV     R4,#HIGH acc_unity_str
003C 7D01              MOV     R5,#01H
003E 7BFF              MOV     R3,#0FFH
0040 7A00        R     MOV     R2,#HIGH _?ix1002
0042 7900        R     MOV     R1,#LOW _?ix1002
0044 7E00              MOV     R6,#00H
0046 7F22              MOV     R7,#022H
0048 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 285
004B 7800        R     MOV     R0,#LOW gyro_unity_str
004D 7C00        R     MOV     R4,#HIGH gyro_unity_str
004F 7D01              MOV     R5,#01H
0051 7BFF              MOV     R3,#0FFH
0053 7A00        R     MOV     R2,#HIGH _?ix1003
0055 7900        R     MOV     R1,#LOW _?ix1003
0057 7E00              MOV     R6,#00H
0059 7F1C              MOV     R7,#01CH
005B 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 286
005E 7800        R     MOV     R0,#LOW mag_unity_str
0060 7C00        R     MOV     R4,#HIGH mag_unity_str
0062 7D01              MOV     R5,#01H
0064 7BFF              MOV     R3,#0FFH
0066 7A00        R     MOV     R2,#HIGH _?ix1004
0068 7900        R     MOV     R1,#LOW _?ix1004
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 26  

006A 7E00              MOV     R6,#00H
006C 7F1C              MOV     R7,#01CH
006E 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 287
0071 7800        R     MOV     R0,#LOW acc_fs_str
0073 7C00        R     MOV     R4,#HIGH acc_fs_str
0075 7D01              MOV     R5,#01H
0077 7BFF              MOV     R3,#0FFH
0079 7A00        R     MOV     R2,#HIGH _?ix1005
007B 7900        R     MOV     R1,#LOW _?ix1005
007D 7E00              MOV     R6,#00H
007F 7F27              MOV     R7,#027H
0081 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 288
0084 7800        R     MOV     R0,#LOW gyro_fs_str
0086 7C00        R     MOV     R4,#HIGH gyro_fs_str
0088 7D01              MOV     R5,#01H
008A 7BFF              MOV     R3,#0FFH
008C 7A00        R     MOV     R2,#HIGH _?ix1006
008E 7900        R     MOV     R1,#LOW _?ix1006
0090 7E00              MOV     R6,#00H
0092 7F2A              MOV     R7,#02AH
0094 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 291
0097 7800        R     MOV     R0,#LOW acc_unity_menu
0099 7C00        R     MOV     R4,#HIGH acc_unity_menu
009B 7D01              MOV     R5,#01H
009D 7BFF              MOV     R3,#0FFH
009F 7A00        R     MOV     R2,#HIGH _?ix1007
00A1 7900        R     MOV     R1,#LOW _?ix1007
00A3 7E00              MOV     R6,#00H
00A5 7F15              MOV     R7,#015H
00A7 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 292
00AA 7800        R     MOV     R0,#LOW gyro_unity_menu
00AC 7C00        R     MOV     R4,#HIGH gyro_unity_menu
00AE 7D01              MOV     R5,#01H
00B0 7BFF              MOV     R3,#0FFH
00B2 7A00        R     MOV     R2,#HIGH _?ix1008
00B4 7900        R     MOV     R1,#LOW _?ix1008
00B6 7E00              MOV     R6,#00H
00B8 7F17              MOV     R7,#017H
00BA 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 293
00BD 7800        R     MOV     R0,#LOW acc_fs_menu
00BF 7C00        R     MOV     R4,#HIGH acc_fs_menu
00C1 7D01              MOV     R5,#01H
00C3 7BFF              MOV     R3,#0FFH
00C5 7A00        R     MOV     R2,#HIGH _?ix1009
00C7 7900        R     MOV     R1,#LOW _?ix1009
00C9 7E00              MOV     R6,#00H
00CB 7F32              MOV     R7,#032H
00CD 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 294
00D0 7800        R     MOV     R0,#LOW gyro_fs_menu
00D2 7C00        R     MOV     R4,#HIGH gyro_fs_menu
00D4 7D01              MOV     R5,#01H
00D6 7BFF              MOV     R3,#0FFH
00D8 7A00        R     MOV     R2,#HIGH _?ix1010
00DA 7900        R     MOV     R1,#LOW _?ix1010
00DC 7E00              MOV     R6,#00H
00DE 7F3B              MOV     R7,#03BH
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 27  

00E0 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 297
00E3 7B01              MOV     R3,#01H
00E5 7A00        R     MOV     R2,#HIGH id_str
00E7 7900        R     MOV     R1,#LOW id_str
00E9 120000      E     LCALL   _strlen
00EC 8F00        R     MOV     id_str_len,R7
                                           ; SOURCE LINE # 298
00EE 7B01              MOV     R3,#01H
00F0 7A00        R     MOV     R2,#HIGH acc_unity_str
00F2 7900        R     MOV     R1,#LOW acc_unity_str
00F4 120000      E     LCALL   _strlen
00F7 8F00        R     MOV     acc_unity_str_len,R7
                                           ; SOURCE LINE # 299
00F9 7B01              MOV     R3,#01H
00FB 7A00        R     MOV     R2,#HIGH gyro_unity_str
00FD 7900        R     MOV     R1,#LOW gyro_unity_str
00FF 120000      E     LCALL   _strlen
0102 8F00        R     MOV     gyro_unity_str_len,R7
                                           ; SOURCE LINE # 300
0104 7B01              MOV     R3,#01H
0106 7A00        R     MOV     R2,#HIGH mag_unity_str
0108 7900        R     MOV     R1,#LOW mag_unity_str
010A 120000      E     LCALL   _strlen
010D 8F00        R     MOV     mag_unity_str_len,R7
                                           ; SOURCE LINE # 301
010F 7B01              MOV     R3,#01H
0111 7A00        R     MOV     R2,#HIGH acc_fs_str
0113 7900        R     MOV     R1,#LOW acc_fs_str
0115 120000      E     LCALL   _strlen
0118 8F00        R     MOV     acc_fs_str_len,R7
                                           ; SOURCE LINE # 302
011A 7B01              MOV     R3,#01H
011C 7A00        R     MOV     R2,#HIGH gyro_fs_str
011E 7900        R     MOV     R1,#LOW gyro_fs_str
0120 120000      E     LCALL   _strlen
0123 8F00        R     MOV     gyro_fs_str_len,R7
                                           ; SOURCE LINE # 303
0125 7B01              MOV     R3,#01H
0127 7A00        R     MOV     R2,#HIGH acc_unity_menu
0129 7900        R     MOV     R1,#LOW acc_unity_menu
012B 120000      E     LCALL   _strlen
012E 8F00        R     MOV     acc_unity_menu_len,R7
                                           ; SOURCE LINE # 304
0130 7B01              MOV     R3,#01H
0132 7A00        R     MOV     R2,#HIGH gyro_unity_menu
0134 7900        R     MOV     R1,#LOW gyro_unity_menu
0136 120000      E     LCALL   _strlen
0139 8F00        R     MOV     gyro_unity_menu_len,R7
                                           ; SOURCE LINE # 305
013B 7B01              MOV     R3,#01H
013D 7A00        R     MOV     R2,#HIGH acc_fs_menu
013F 7900        R     MOV     R1,#LOW acc_fs_menu
0141 120000      E     LCALL   _strlen
0144 8F00        R     MOV     acc_fs_menu_len,R7
                                           ; SOURCE LINE # 306
0146 7B01              MOV     R3,#01H
0148 7A00        R     MOV     R2,#HIGH gyro_fs_menu
014A 7900        R     MOV     R1,#LOW gyro_fs_menu
014C 120000      E     LCALL   _strlen
014F 8F00        R     MOV     gyro_fs_menu_len,R7
                                           ; SOURCE LINE # 308
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 28  

0151 900000      R     MOV     DPTR,#packet_data
0154 740C              MOV     A,#0CH
0156 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 309
0157 A3                INC     DPTR
0158 7406              MOV     A,#06H
015A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 311
015B 900000      R     MOV     DPTR,#index
015E E0                MOVX    A,@DPTR
015F FE                MOV     R6,A
0160 A3                INC     DPTR
0161 E0                MOVX    A,@DPTR
0162 FF                MOV     R7,A
0163 EE                MOV     A,R6
0164 6003              JZ      $ + 5H
0166 020000      R     LJMP    ?C0099
0169 EF                MOV     A,R7
016A B40700            CJNE    A,#07H,?C0210
016D         ?C0210:
016D 4003              JC      $ + 5H
016F 020000      R     LJMP    ?C0099
0172 900000      R     MOV     DPTR,#?C0211
0175 F8                MOV     R0,A
0176 28                ADD     A,R0
0177 28                ADD     A,R0
0178 73                JMP     @A+DPTR
0179         ?C0211:
0179 020000      R     LJMP    ?C0045
017C 020000      R     LJMP    ?C0093
017F 020000      R     LJMP    ?C0094
0182 020000      R     LJMP    ?C0095
0185 020000      R     LJMP    ?C0096
0188 020000      R     LJMP    ?C0097
018B 020000      R     LJMP    ?C0098
                                           ; SOURCE LINE # 312
018E         ?C0045:
                                           ; SOURCE LINE # 315
018E 900000      R     MOV     DPTR,#packet_data+02H
0191 7402              MOV     A,#02H
0193 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 316
0194 A3                INC     DPTR
0195 14                DEC     A
0196 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 317
0197 900000      E     MOV     DPTR,#c_mem+01H
019A E0                MOVX    A,@DPTR
019B 900000      R     MOV     DPTR,#packet_data+04H
019E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 318
019F 750000      R     MOV     i,#00H
01A2 850000      R     MOV     i+01H,id_str_len
01A5         ?C0046:
01A5 E500        R     MOV     A,i+01H
01A7 4500        R     ORL     A,i
01A9 602C              JZ      ?C0047
                                           ; SOURCE LINE # 319
01AB C3                CLR     C
01AC E500        R     MOV     A,id_str_len
01AE 9500        R     SUBB    A,i+01H
01B0 FF                MOV     R7,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 29  

01B1 E4                CLR     A
01B2 9500        R     SUBB    A,i
01B4 FE                MOV     R6,A
01B5 7400        R     MOV     A,#LOW id_str
01B7 2F                ADD     A,R7
01B8 F582              MOV     DPL,A
01BA 7400        R     MOV     A,#HIGH id_str
01BC 3E                ADDC    A,R6
01BD F583              MOV     DPH,A
01BF E0                MOVX    A,@DPTR
01C0 FD                MOV     R5,A
01C1 7400        R     MOV     A,#LOW packet_data+05H
01C3 2F                ADD     A,R7
01C4 F582              MOV     DPL,A
01C6 7400        R     MOV     A,#HIGH packet_data+05H
01C8 3E                ADDC    A,R6
01C9 F583              MOV     DPH,A
01CB ED                MOV     A,R5
01CC F0                MOVX    @DPTR,A
01CD E500        R     MOV     A,i+01H
01CF 1500        R     DEC     i+01H
01D1 7002              JNZ     ?C0212
01D3 1500        R     DEC     i
01D5         ?C0212:
01D5 80CE              SJMP    ?C0046
01D7         ?C0047:
                                           ; SOURCE LINE # 323
01D7 E4                CLR     A
01D8 900000      R     MOV     DPTR,#packet_data+034H
01DB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 324
01DC A3                INC     DPTR
01DD 04                INC     A
01DE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 325
01DF 900000      E     MOV     DPTR,#c_mem+04H
01E2 E0                MOVX    A,@DPTR
01E3 900000      R     MOV     DPTR,#packet_data+036H
01E6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 326
01E7 14                DEC     A
01E8 601F              JZ      ?C0051
01EA 04                INC     A
01EB 7036              JNZ     ?C0049
                                           ; SOURCE LINE # 327
01ED         ?C0050:
                                           ; SOURCE LINE # 328
01ED 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
01F0 74FF              MOV     A,#0FFH
01F2 F0                MOVX    @DPTR,A
01F3 A3                INC     DPTR
01F4 7400        R     MOV     A,#HIGH ?SC_0
01F6 F0                MOVX    @DPTR,A
01F7 A3                INC     DPTR
01F8 7400        R     MOV     A,#LOW ?SC_0
01FA F0                MOVX    @DPTR,A
01FB 7B01              MOV     R3,#01H
01FD 7A00        R     MOV     R2,#HIGH acc_unity_str
01FF 7900        R     MOV     R1,#LOW acc_unity_str
0201 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 329
0204 75001C      R     MOV     acc_unity_str_len,#01CH
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 30  

                                           ; SOURCE LINE # 330
0207 801A              SJMP    ?C0049
                                           ; SOURCE LINE # 331
0209         ?C0051:
                                           ; SOURCE LINE # 332
0209 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
020C 74FF              MOV     A,#0FFH
020E F0                MOVX    @DPTR,A
020F A3                INC     DPTR
0210 7400        R     MOV     A,#HIGH ?SC_4
0212 F0                MOVX    @DPTR,A
0213 A3                INC     DPTR
0214 7400        R     MOV     A,#LOW ?SC_4
0216 F0                MOVX    @DPTR,A
0217 7B01              MOV     R3,#01H
0219 7A00        R     MOV     R2,#HIGH acc_unity_str
021B 7900        R     MOV     R1,#LOW acc_unity_str
021D 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 333
0220 750022      R     MOV     acc_unity_str_len,#022H
                                           ; SOURCE LINE # 334
                                           ; SOURCE LINE # 335
0223         ?C0049:
                                           ; SOURCE LINE # 336
0223 750000      R     MOV     i,#00H
0226 850000      R     MOV     i+01H,acc_unity_str_len
0229         ?C0052:
0229 E500        R     MOV     A,i+01H
022B 4500        R     ORL     A,i
022D 602C              JZ      ?C0053
                                           ; SOURCE LINE # 337
022F C3                CLR     C
0230 E500        R     MOV     A,acc_unity_str_len
0232 9500        R     SUBB    A,i+01H
0234 FF                MOV     R7,A
0235 E4                CLR     A
0236 9500        R     SUBB    A,i
0238 FE                MOV     R6,A
0239 7400        R     MOV     A,#LOW acc_unity_str
023B 2F                ADD     A,R7
023C F582              MOV     DPL,A
023E 7400        R     MOV     A,#HIGH acc_unity_str
0240 3E                ADDC    A,R6
0241 F583              MOV     DPH,A
0243 E0                MOVX    A,@DPTR
0244 FD                MOV     R5,A
0245 7400        R     MOV     A,#LOW packet_data+037H
0247 2F                ADD     A,R7
0248 F582              MOV     DPL,A
024A 7400        R     MOV     A,#HIGH packet_data+037H
024C 3E                ADDC    A,R6
024D F583              MOV     DPH,A
024F ED                MOV     A,R5
0250 F0                MOVX    @DPTR,A
0251 E500        R     MOV     A,i+01H
0253 1500        R     DEC     i+01H
0255 7002              JNZ     ?C0213
0257 1500        R     DEC     i
0259         ?C0213:
0259 80CE              SJMP    ?C0052
025B         ?C0053:
                                           ; SOURCE LINE # 339
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 31  

025B 7400        R     MOV     A,#LOW packet_data+037H
025D 2500        R     ADD     A,acc_unity_str_len
025F F582              MOV     DPL,A
0261 E4                CLR     A
0262 3400        R     ADDC    A,#HIGH packet_data+037H
0264 F583              MOV     DPH,A
0266 7401              MOV     A,#01H
0268 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 343
0269 E4                CLR     A
026A 900000      R     MOV     DPTR,#packet_data+066H
026D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 344
026E A3                INC     DPTR
026F 04                INC     A
0270 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 345
0271 900000      E     MOV     DPTR,#c_mem+05H
0274 E0                MOVX    A,@DPTR
0275 900000      R     MOV     DPTR,#packet_data+068H
0278 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 346
0279 14                DEC     A
027A 601F              JZ      ?C0057
027C 04                INC     A
027D 7036              JNZ     ?C0055
                                           ; SOURCE LINE # 347
027F         ?C0056:
                                           ; SOURCE LINE # 348
027F 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0282 74FF              MOV     A,#0FFH
0284 F0                MOVX    @DPTR,A
0285 A3                INC     DPTR
0286 7400        R     MOV     A,#HIGH ?SC_14
0288 F0                MOVX    @DPTR,A
0289 A3                INC     DPTR
028A 7400        R     MOV     A,#LOW ?SC_14
028C F0                MOVX    @DPTR,A
028D 7B01              MOV     R3,#01H
028F 7A00        R     MOV     R2,#HIGH gyro_unity_str
0291 7900        R     MOV     R1,#LOW gyro_unity_str
0293 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 349
0296 75001C      R     MOV     gyro_unity_str_len,#01CH
                                           ; SOURCE LINE # 350
0299 801A              SJMP    ?C0055
                                           ; SOURCE LINE # 351
029B         ?C0057:
                                           ; SOURCE LINE # 352
029B 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
029E 74FF              MOV     A,#0FFH
02A0 F0                MOVX    @DPTR,A
02A1 A3                INC     DPTR
02A2 7400        R     MOV     A,#HIGH ?SC_22
02A4 F0                MOVX    @DPTR,A
02A5 A3                INC     DPTR
02A6 7400        R     MOV     A,#LOW ?SC_22
02A8 F0                MOVX    @DPTR,A
02A9 7B01              MOV     R3,#01H
02AB 7A00        R     MOV     R2,#HIGH gyro_unity_str
02AD 7900        R     MOV     R1,#LOW gyro_unity_str
02AF 120000      E     LCALL   _strcat
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 32  

                                           ; SOURCE LINE # 353
02B2 75001C      R     MOV     gyro_unity_str_len,#01CH
                                           ; SOURCE LINE # 354
                                           ; SOURCE LINE # 355
02B5         ?C0055:
                                           ; SOURCE LINE # 356
02B5 750000      R     MOV     i,#00H
02B8 850000      R     MOV     i+01H,gyro_unity_str_len
02BB         ?C0058:
02BB E500        R     MOV     A,i+01H
02BD 4500        R     ORL     A,i
02BF 602C              JZ      ?C0059
                                           ; SOURCE LINE # 357
02C1 C3                CLR     C
02C2 E500        R     MOV     A,gyro_unity_str_len
02C4 9500        R     SUBB    A,i+01H
02C6 FF                MOV     R7,A
02C7 E4                CLR     A
02C8 9500        R     SUBB    A,i
02CA FE                MOV     R6,A
02CB 7400        R     MOV     A,#LOW gyro_unity_str
02CD 2F                ADD     A,R7
02CE F582              MOV     DPL,A
02D0 7400        R     MOV     A,#HIGH gyro_unity_str
02D2 3E                ADDC    A,R6
02D3 F583              MOV     DPH,A
02D5 E0                MOVX    A,@DPTR
02D6 FD                MOV     R5,A
02D7 7400        R     MOV     A,#LOW packet_data+069H
02D9 2F                ADD     A,R7
02DA F582              MOV     DPL,A
02DC 7400        R     MOV     A,#HIGH packet_data+069H
02DE 3E                ADDC    A,R6
02DF F583              MOV     DPH,A
02E1 ED                MOV     A,R5
02E2 F0                MOVX    @DPTR,A
02E3 E500        R     MOV     A,i+01H
02E5 1500        R     DEC     i+01H
02E7 7002              JNZ     ?C0214
02E9 1500        R     DEC     i
02EB         ?C0214:
02EB 80CE              SJMP    ?C0058
02ED         ?C0059:
                                           ; SOURCE LINE # 359
02ED 7400        R     MOV     A,#LOW packet_data+069H
02EF 2500        R     ADD     A,gyro_unity_str_len
02F1 F582              MOV     DPL,A
02F3 E4                CLR     A
02F4 3400        R     ADDC    A,#HIGH packet_data+069H
02F6 F583              MOV     DPH,A
02F8 7402              MOV     A,#02H
02FA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 363
02FB E4                CLR     A
02FC 900000      R     MOV     DPTR,#packet_data+098H
02FF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 364
0300 A3                INC     DPTR
0301 04                INC     A
0302 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 365
0303 900000      E     MOV     DPTR,#c_mem+06H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 33  

0306 E0                MOVX    A,@DPTR
0307 900000      R     MOV     DPTR,#packet_data+09AH
030A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 366
030B 701A              JNZ     ?C0061
                                           ; SOURCE LINE # 367
030D         ?C0062:
                                           ; SOURCE LINE # 368
030D 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0310 74FF              MOV     A,#0FFH
0312 F0                MOVX    @DPTR,A
0313 A3                INC     DPTR
0314 7400        R     MOV     A,#HIGH ?SC_30
0316 F0                MOVX    @DPTR,A
0317 A3                INC     DPTR
0318 7400        R     MOV     A,#LOW ?SC_30
031A F0                MOVX    @DPTR,A
031B 7B01              MOV     R3,#01H
031D 7A00        R     MOV     R2,#HIGH mag_unity_str
031F 7900        R     MOV     R1,#LOW mag_unity_str
0321 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 369
0324 75001C      R     MOV     mag_unity_str_len,#01CH
                                           ; SOURCE LINE # 370
                                           ; SOURCE LINE # 371
0327         ?C0061:
                                           ; SOURCE LINE # 372
0327 750000      R     MOV     i,#00H
032A 850000      R     MOV     i+01H,mag_unity_str_len
032D         ?C0063:
032D E500        R     MOV     A,i+01H
032F 4500        R     ORL     A,i
0331 602C              JZ      ?C0064
                                           ; SOURCE LINE # 373
0333 C3                CLR     C
0334 E500        R     MOV     A,mag_unity_str_len
0336 9500        R     SUBB    A,i+01H
0338 FF                MOV     R7,A
0339 E4                CLR     A
033A 9500        R     SUBB    A,i
033C FE                MOV     R6,A
033D 7400        R     MOV     A,#LOW mag_unity_str
033F 2F                ADD     A,R7
0340 F582              MOV     DPL,A
0342 7400        R     MOV     A,#HIGH mag_unity_str
0344 3E                ADDC    A,R6
0345 F583              MOV     DPH,A
0347 E0                MOVX    A,@DPTR
0348 FD                MOV     R5,A
0349 7400        R     MOV     A,#LOW packet_data+09BH
034B 2F                ADD     A,R7
034C F582              MOV     DPL,A
034E 7400        R     MOV     A,#HIGH packet_data+09BH
0350 3E                ADDC    A,R6
0351 F583              MOV     DPH,A
0353 ED                MOV     A,R5
0354 F0                MOVX    @DPTR,A
0355 E500        R     MOV     A,i+01H
0357 1500        R     DEC     i+01H
0359 7002              JNZ     ?C0215
035B 1500        R     DEC     i
035D         ?C0215:
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 34  

035D 80CE              SJMP    ?C0063
035F         ?C0064:
                                           ; SOURCE LINE # 377
035F E4                CLR     A
0360 900000      R     MOV     DPTR,#packet_data+0CAH
0363 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 378
0364 A3                INC     DPTR
0365 04                INC     A
0366 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 379
0367 900000      E     MOV     DPTR,#c_mem+07H
036A E0                MOVX    A,@DPTR
036B 900000      R     MOV     DPTR,#packet_data+0CCH
036E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 380
036F 14                DEC     A
0370 6026              JZ      ?C0068
0372 14                DEC     A
0373 603F              JZ      ?C0069
0375 14                DEC     A
0376 6058              JZ      ?C0070
0378 2403              ADD     A,#03H
037A 706E              JNZ     ?C0066
                                           ; SOURCE LINE # 381
037C         ?C0067:
                                           ; SOURCE LINE # 382
037C 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
037F 74FF              MOV     A,#0FFH
0381 F0                MOVX    @DPTR,A
0382 A3                INC     DPTR
0383 7400        R     MOV     A,#HIGH ?SC_35
0385 F0                MOVX    @DPTR,A
0386 A3                INC     DPTR
0387 7400        R     MOV     A,#LOW ?SC_35
0389 F0                MOVX    @DPTR,A
038A 7B01              MOV     R3,#01H
038C 7A00        R     MOV     R2,#HIGH acc_fs_str
038E 7900        R     MOV     R1,#LOW acc_fs_str
0390 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 383
0393 750026      R     MOV     acc_fs_str_len,#026H
                                           ; SOURCE LINE # 384
0396 8052              SJMP    ?C0066
                                           ; SOURCE LINE # 385
0398         ?C0068:
                                           ; SOURCE LINE # 386
0398 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
039B 74FF              MOV     A,#0FFH
039D F0                MOVX    @DPTR,A
039E A3                INC     DPTR
039F 7400        R     MOV     A,#HIGH ?SC_44
03A1 F0                MOVX    @DPTR,A
03A2 A3                INC     DPTR
03A3 7400        R     MOV     A,#LOW ?SC_44
03A5 F0                MOVX    @DPTR,A
03A6 7B01              MOV     R3,#01H
03A8 7A00        R     MOV     R2,#HIGH acc_fs_str
03AA 7900        R     MOV     R1,#LOW acc_fs_str
03AC 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 387
03AF 750026      R     MOV     acc_fs_str_len,#026H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 35  

                                           ; SOURCE LINE # 388
03B2 8036              SJMP    ?C0066
                                           ; SOURCE LINE # 389
03B4         ?C0069:
                                           ; SOURCE LINE # 390
03B4 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
03B7 74FF              MOV     A,#0FFH
03B9 F0                MOVX    @DPTR,A
03BA A3                INC     DPTR
03BB 7400        R     MOV     A,#HIGH ?SC_53
03BD F0                MOVX    @DPTR,A
03BE A3                INC     DPTR
03BF 7400        R     MOV     A,#LOW ?SC_53
03C1 F0                MOVX    @DPTR,A
03C2 7B01              MOV     R3,#01H
03C4 7A00        R     MOV     R2,#HIGH acc_fs_str
03C6 7900        R     MOV     R1,#LOW acc_fs_str
03C8 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 391
03CB 750026      R     MOV     acc_fs_str_len,#026H
                                           ; SOURCE LINE # 392
03CE 801A              SJMP    ?C0066
                                           ; SOURCE LINE # 393
03D0         ?C0070:
                                           ; SOURCE LINE # 394
03D0 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
03D3 74FF              MOV     A,#0FFH
03D5 F0                MOVX    @DPTR,A
03D6 A3                INC     DPTR
03D7 7400        R     MOV     A,#HIGH ?SC_62
03D9 F0                MOVX    @DPTR,A
03DA A3                INC     DPTR
03DB 7400        R     MOV     A,#LOW ?SC_62
03DD F0                MOVX    @DPTR,A
03DE 7B01              MOV     R3,#01H
03E0 7A00        R     MOV     R2,#HIGH acc_fs_str
03E2 7900        R     MOV     R1,#LOW acc_fs_str
03E4 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 395
03E7 750027      R     MOV     acc_fs_str_len,#027H
                                           ; SOURCE LINE # 396
                                           ; SOURCE LINE # 397
03EA         ?C0066:
                                           ; SOURCE LINE # 398
03EA 750000      R     MOV     i,#00H
03ED 850000      R     MOV     i+01H,acc_fs_str_len
03F0         ?C0071:
03F0 E500        R     MOV     A,i+01H
03F2 4500        R     ORL     A,i
03F4 602C              JZ      ?C0072
                                           ; SOURCE LINE # 399
03F6 C3                CLR     C
03F7 E500        R     MOV     A,acc_fs_str_len
03F9 9500        R     SUBB    A,i+01H
03FB FF                MOV     R7,A
03FC E4                CLR     A
03FD 9500        R     SUBB    A,i
03FF FE                MOV     R6,A
0400 7400        R     MOV     A,#LOW acc_fs_str
0402 2F                ADD     A,R7
0403 F582              MOV     DPL,A
0405 7400        R     MOV     A,#HIGH acc_fs_str
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 36  

0407 3E                ADDC    A,R6
0408 F583              MOV     DPH,A
040A E0                MOVX    A,@DPTR
040B FD                MOV     R5,A
040C 7400        R     MOV     A,#LOW packet_data+0CDH
040E 2F                ADD     A,R7
040F F582              MOV     DPL,A
0411 7400        R     MOV     A,#HIGH packet_data+0CDH
0413 3E                ADDC    A,R6
0414 F583              MOV     DPH,A
0416 ED                MOV     A,R5
0417 F0                MOVX    @DPTR,A
0418 E500        R     MOV     A,i+01H
041A 1500        R     DEC     i+01H
041C 7002              JNZ     ?C0216
041E 1500        R     DEC     i
0420         ?C0216:
0420 80CE              SJMP    ?C0071
0422         ?C0072:
                                           ; SOURCE LINE # 401
0422 7400        R     MOV     A,#LOW packet_data+0CDH
0424 2500        R     ADD     A,acc_fs_str_len
0426 F582              MOV     DPL,A
0428 E4                CLR     A
0429 3400        R     ADDC    A,#HIGH packet_data+0CDH
042B F583              MOV     DPH,A
042D 7403              MOV     A,#03H
042F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 405
0430 E4                CLR     A
0431 900000      R     MOV     DPTR,#packet_data+0FCH
0434 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 406
0435 A3                INC     DPTR
0436 04                INC     A
0437 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 407
0438 900000      E     MOV     DPTR,#c_mem+08H
043B E0                MOVX    A,@DPTR
043C 900000      R     MOV     DPTR,#packet_data+0FEH
043F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 408
0440 14                DEC     A
0441 6023              JZ      ?C0076
0443 14                DEC     A
0444 603C              JZ      ?C0077
0446 2402              ADD     A,#02H
0448 7052              JNZ     ?C0074
                                           ; SOURCE LINE # 409
044A         ?C0075:
                                           ; SOURCE LINE # 410
044A 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
044D 74FF              MOV     A,#0FFH
044F F0                MOVX    @DPTR,A
0450 A3                INC     DPTR
0451 7400        R     MOV     A,#HIGH ?SC_72
0453 F0                MOVX    @DPTR,A
0454 A3                INC     DPTR
0455 7400        R     MOV     A,#LOW ?SC_72
0457 F0                MOVX    @DPTR,A
0458 7B01              MOV     R3,#01H
045A 7A00        R     MOV     R2,#HIGH gyro_fs_str
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 37  

045C 7900        R     MOV     R1,#LOW gyro_fs_str
045E 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 411
0461 750029      R     MOV     gyro_fs_str_len,#029H
                                           ; SOURCE LINE # 412
0464 8036              SJMP    ?C0074
                                           ; SOURCE LINE # 413
0466         ?C0076:
                                           ; SOURCE LINE # 414
0466 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0469 74FF              MOV     A,#0FFH
046B F0                MOVX    @DPTR,A
046C A3                INC     DPTR
046D 7400        R     MOV     A,#HIGH ?SC_88
046F F0                MOVX    @DPTR,A
0470 A3                INC     DPTR
0471 7400        R     MOV     A,#LOW ?SC_88
0473 F0                MOVX    @DPTR,A
0474 7B01              MOV     R3,#01H
0476 7A00        R     MOV     R2,#HIGH gyro_fs_str
0478 7900        R     MOV     R1,#LOW gyro_fs_str
047A 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 415
047D 750029      R     MOV     gyro_fs_str_len,#029H
                                           ; SOURCE LINE # 416
0480 801A              SJMP    ?C0074
                                           ; SOURCE LINE # 417
0482         ?C0077:
                                           ; SOURCE LINE # 418
0482 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0485 74FF              MOV     A,#0FFH
0487 F0                MOVX    @DPTR,A
0488 A3                INC     DPTR
0489 7400        R     MOV     A,#HIGH ?SC_104
048B F0                MOVX    @DPTR,A
048C A3                INC     DPTR
048D 7400        R     MOV     A,#LOW ?SC_104
048F F0                MOVX    @DPTR,A
0490 7B01              MOV     R3,#01H
0492 7A00        R     MOV     R2,#HIGH gyro_fs_str
0494 7900        R     MOV     R1,#LOW gyro_fs_str
0496 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 419
0499 75002A      R     MOV     gyro_fs_str_len,#02AH
                                           ; SOURCE LINE # 420
                                           ; SOURCE LINE # 421
049C         ?C0074:
                                           ; SOURCE LINE # 422
049C 750000      R     MOV     i,#00H
049F 850000      R     MOV     i+01H,gyro_fs_str_len
04A2         ?C0078:
04A2 E500        R     MOV     A,i+01H
04A4 4500        R     ORL     A,i
04A6 602C              JZ      ?C0079
                                           ; SOURCE LINE # 423
04A8 C3                CLR     C
04A9 E500        R     MOV     A,gyro_fs_str_len
04AB 9500        R     SUBB    A,i+01H
04AD FF                MOV     R7,A
04AE E4                CLR     A
04AF 9500        R     SUBB    A,i
04B1 FE                MOV     R6,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 38  

04B2 7400        R     MOV     A,#LOW gyro_fs_str
04B4 2F                ADD     A,R7
04B5 F582              MOV     DPL,A
04B7 7400        R     MOV     A,#HIGH gyro_fs_str
04B9 3E                ADDC    A,R6
04BA F583              MOV     DPH,A
04BC E0                MOVX    A,@DPTR
04BD FD                MOV     R5,A
04BE 7400        R     MOV     A,#LOW packet_data+0FFH
04C0 2F                ADD     A,R7
04C1 F582              MOV     DPL,A
04C3 7400        R     MOV     A,#HIGH packet_data+0FFH
04C5 3E                ADDC    A,R6
04C6 F583              MOV     DPH,A
04C8 ED                MOV     A,R5
04C9 F0                MOVX    @DPTR,A
04CA E500        R     MOV     A,i+01H
04CC 1500        R     DEC     i+01H
04CE 7002              JNZ     ?C0217
04D0 1500        R     DEC     i
04D2         ?C0217:
04D2 80CE              SJMP    ?C0078
04D4         ?C0079:
                                           ; SOURCE LINE # 425
04D4 7400        R     MOV     A,#LOW packet_data+0FFH
04D6 2500        R     ADD     A,gyro_fs_str_len
04D8 F582              MOV     DPL,A
04DA E4                CLR     A
04DB 3400        R     ADDC    A,#HIGH packet_data+0FFH
04DD F583              MOV     DPH,A
04DF 7404              MOV     A,#04H
04E1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 429
04E2 750000      R     MOV     i,#00H
04E5 850000      R     MOV     i+01H,acc_unity_menu_len
04E8         ?C0081:
04E8 E500        R     MOV     A,i+01H
04EA 4500        R     ORL     A,i
04EC 602C              JZ      ?C0082
                                           ; SOURCE LINE # 430
04EE C3                CLR     C
04EF E500        R     MOV     A,acc_unity_menu_len
04F1 9500        R     SUBB    A,i+01H
04F3 FF                MOV     R7,A
04F4 E4                CLR     A
04F5 9500        R     SUBB    A,i
04F7 FE                MOV     R6,A
04F8 7400        R     MOV     A,#LOW acc_unity_menu
04FA 2F                ADD     A,R7
04FB F582              MOV     DPL,A
04FD 7400        R     MOV     A,#HIGH acc_unity_menu
04FF 3E                ADDC    A,R6
0500 F583              MOV     DPH,A
0502 E0                MOVX    A,@DPTR
0503 FD                MOV     R5,A
0504 7400        R     MOV     A,#LOW packet_data+012EH
0506 2F                ADD     A,R7
0507 F582              MOV     DPL,A
0509 7400        R     MOV     A,#HIGH packet_data+012EH
050B 3E                ADDC    A,R6
050C F583              MOV     DPH,A
050E ED                MOV     A,R5
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 39  

050F F0                MOVX    @DPTR,A
0510 E500        R     MOV     A,i+01H
0512 1500        R     DEC     i+01H
0514 7002              JNZ     ?C0218
0516 1500        R     DEC     i
0518         ?C0218:
0518 80CE              SJMP    ?C0081
051A         ?C0082:
                                           ; SOURCE LINE # 432
051A 750000      R     MOV     i,#00H
051D 850000      R     MOV     i+01H,gyro_unity_menu_len
0520         ?C0084:
0520 E500        R     MOV     A,i+01H
0522 4500        R     ORL     A,i
0524 602C              JZ      ?C0085
                                           ; SOURCE LINE # 433
0526 C3                CLR     C
0527 E500        R     MOV     A,gyro_unity_menu_len
0529 9500        R     SUBB    A,i+01H
052B FF                MOV     R7,A
052C E4                CLR     A
052D 9500        R     SUBB    A,i
052F FE                MOV     R6,A
0530 7400        R     MOV     A,#LOW gyro_unity_menu
0532 2F                ADD     A,R7
0533 F582              MOV     DPL,A
0535 7400        R     MOV     A,#HIGH gyro_unity_menu
0537 3E                ADDC    A,R6
0538 F583              MOV     DPH,A
053A E0                MOVX    A,@DPTR
053B FD                MOV     R5,A
053C 7400        R     MOV     A,#LOW packet_data+01C4H
053E 2F                ADD     A,R7
053F F582              MOV     DPL,A
0541 7400        R     MOV     A,#HIGH packet_data+01C4H
0543 3E                ADDC    A,R6
0544 F583              MOV     DPH,A
0546 ED                MOV     A,R5
0547 F0                MOVX    @DPTR,A
0548 E500        R     MOV     A,i+01H
054A 1500        R     DEC     i+01H
054C 7002              JNZ     ?C0219
054E 1500        R     DEC     i
0550         ?C0219:
0550 80CE              SJMP    ?C0084
0552         ?C0085:
                                           ; SOURCE LINE # 435
0552 750000      R     MOV     i,#00H
0555 850000      R     MOV     i+01H,acc_fs_menu_len
0558         ?C0087:
0558 E500        R     MOV     A,i+01H
055A 4500        R     ORL     A,i
055C 602C              JZ      ?C0088
                                           ; SOURCE LINE # 436
055E C3                CLR     C
055F E500        R     MOV     A,acc_fs_menu_len
0561 9500        R     SUBB    A,i+01H
0563 FF                MOV     R7,A
0564 E4                CLR     A
0565 9500        R     SUBB    A,i
0567 FE                MOV     R6,A
0568 7400        R     MOV     A,#LOW acc_fs_menu
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 40  

056A 2F                ADD     A,R7
056B F582              MOV     DPL,A
056D 7400        R     MOV     A,#HIGH acc_fs_menu
056F 3E                ADDC    A,R6
0570 F583              MOV     DPH,A
0572 E0                MOVX    A,@DPTR
0573 FD                MOV     R5,A
0574 7400        R     MOV     A,#LOW packet_data+025AH
0576 2F                ADD     A,R7
0577 F582              MOV     DPL,A
0579 7400        R     MOV     A,#HIGH packet_data+025AH
057B 3E                ADDC    A,R6
057C F583              MOV     DPH,A
057E ED                MOV     A,R5
057F F0                MOVX    @DPTR,A
0580 E500        R     MOV     A,i+01H
0582 1500        R     DEC     i+01H
0584 7002              JNZ     ?C0220
0586 1500        R     DEC     i
0588         ?C0220:
0588 80CE              SJMP    ?C0087
058A         ?C0088:
                                           ; SOURCE LINE # 438
058A 750000      R     MOV     i,#00H
058D 850000      R     MOV     i+01H,gyro_fs_menu_len
0590         ?C0090:
0590 E500        R     MOV     A,i+01H
0592 4500        R     ORL     A,i
0594 602C              JZ      ?C0091
                                           ; SOURCE LINE # 439
0596 C3                CLR     C
0597 E500        R     MOV     A,gyro_fs_menu_len
0599 9500        R     SUBB    A,i+01H
059B FF                MOV     R7,A
059C E4                CLR     A
059D 9500        R     SUBB    A,i
059F FE                MOV     R6,A
05A0 7400        R     MOV     A,#LOW gyro_fs_menu
05A2 2F                ADD     A,R7
05A3 F582              MOV     DPL,A
05A5 7400        R     MOV     A,#HIGH gyro_fs_menu
05A7 3E                ADDC    A,R6
05A8 F583              MOV     DPH,A
05AA E0                MOVX    A,@DPTR
05AB FD                MOV     R5,A
05AC 7400        R     MOV     A,#LOW packet_data+02F0H
05AE 2F                ADD     A,R7
05AF F582              MOV     DPL,A
05B1 7400        R     MOV     A,#HIGH packet_data+02F0H
05B3 3E                ADDC    A,R6
05B4 F583              MOV     DPH,A
05B6 ED                MOV     A,R5
05B7 F0                MOVX    @DPTR,A
05B8 E500        R     MOV     A,i+01H
05BA 1500        R     DEC     i+01H
05BC 7002              JNZ     ?C0221
05BE 1500        R     DEC     i
05C0         ?C0221:
05C0 80CE              SJMP    ?C0090
05C2         ?C0091:
                                           ; SOURCE LINE # 441
05C2 7B01              MOV     R3,#01H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 41  

05C4 7A00        R     MOV     R2,#HIGH packet_data
05C6 7900        R     MOV     R1,#LOW packet_data
05C8 900000      R     MOV     DPTR,#packet_lenght
05CB E0                MOVX    A,@DPTR
05CC A3                INC     DPTR
05CD E0                MOVX    A,@DPTR
05CE 14                DEC     A
05CF FD                MOV     R5,A
05D0 120000      R     LCALL   _LCRChecksum
05D3 900000      R     MOV     DPTR,#packet_lenght
05D6 E0                MOVX    A,@DPTR
05D7 FC                MOV     R4,A
05D8 A3                INC     DPTR
05D9 E0                MOVX    A,@DPTR
05DA FD                MOV     R5,A
05DB 2400        R     ADD     A,#LOW packet_data+0FFFFH
05DD F582              MOV     DPL,A
05DF 7400        R     MOV     A,#HIGH packet_data+0FFFFH
05E1 3C                ADDC    A,R4
05E2 F583              MOV     DPH,A
05E4 EF                MOV     A,R7
05E5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 442
05E6 7B01              MOV     R3,#01H
05E8 7A00        R     MOV     R2,#HIGH packet_data
05EA 7900        R     MOV     R1,#LOW packet_data
05EC 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 443
05EF 120000      E     LCALL   UART_RS485_ClearTxBuffer
                                           ; SOURCE LINE # 444
05F2 22                RET     
                                           ; SOURCE LINE # 447
05F3         ?C0093:
                                           ; SOURCE LINE # 448
05F3 900000      E     MOV     DPTR,#g_rx+03H
05F6 E0                MOVX    A,@DPTR
05F7 900000      E     MOV     DPTR,#g_mem+01H
05FA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 449
05FB 22                RET     
                                           ; SOURCE LINE # 452
05FC         ?C0094:
                                           ; SOURCE LINE # 453
05FC 900000      E     MOV     DPTR,#g_rx+03H
05FF E0                MOVX    A,@DPTR
0600 900000      E     MOV     DPTR,#g_mem+04H
0603 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 454
0604 22                RET     
                                           ; SOURCE LINE # 457
0605         ?C0095:
                                           ; SOURCE LINE # 458
0605 900000      E     MOV     DPTR,#g_rx+03H
0608 E0                MOVX    A,@DPTR
0609 900000      E     MOV     DPTR,#g_mem+05H
060C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 459
060D 22                RET     
                                           ; SOURCE LINE # 462
060E         ?C0096:
                                           ; SOURCE LINE # 463
060E 900000      E     MOV     DPTR,#g_rx+03H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 42  

0611 E0                MOVX    A,@DPTR
0612 900000      E     MOV     DPTR,#g_mem+06H
0615 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 465
0616 E4                CLR     A
0617 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 466
0618 22                RET     
                                           ; SOURCE LINE # 469
0619         ?C0097:
                                           ; SOURCE LINE # 470
0619 900000      E     MOV     DPTR,#g_rx+03H
061C E0                MOVX    A,@DPTR
061D 900000      E     MOV     DPTR,#g_mem+07H
0620 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 472
0621 120000      E     LCALL   ImusReset
                                           ; SOURCE LINE # 473
0624 22                RET     
                                           ; SOURCE LINE # 476
0625         ?C0098:
                                           ; SOURCE LINE # 477
0625 900000      E     MOV     DPTR,#g_rx+03H
0628 E0                MOVX    A,@DPTR
0629 900000      E     MOV     DPTR,#g_mem+08H
062C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 479
062D 120000      E     LCALL   ImusReset
                                           ; SOURCE LINE # 480
                                           ; SOURCE LINE # 482
                                           ; SOURCE LINE # 483
0630         ?C0099:
0630 22                RET     
             ; FUNCTION _get_param_list (END)

             ; FUNCTION _infoPrepare (BEGIN)
                                           ; SOURCE LINE # 490
0000 900000      R     MOV     DPTR,#info_string
0003 EB                MOV     A,R3
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EA                MOV     A,R2
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 E9                MOV     A,R1
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 491
                                           ; SOURCE LINE # 493
000B 900000      E     MOV     DPTR,#c_mem+01H
000E E0                MOVX    A,@DPTR
000F 64FA              XRL     A,#0FAH
0011 7003              JNZ     $ + 5H
0013 020000      R     LJMP    ?C0133
                                           ; SOURCE LINE # 495
0016 900000      R     MOV     DPTR,#info_string
0019 E0                MOVX    A,@DPTR
001A FB                MOV     R3,A
001B A3                INC     DPTR
001C E0                MOVX    A,@DPTR
001D FA                MOV     R2,A
001E A3                INC     DPTR
001F E0                MOVX    A,@DPTR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 43  

0020 F8                MOV     R0,A
0021 AC02              MOV     R4,AR2
0023 AD03              MOV     R5,AR3
0025 7BFF              MOV     R3,#0FFH
0027 7A00        R     MOV     R2,#HIGH ?SC_121
0029 7900        R     MOV     R1,#LOW ?SC_121
002B 120000      E     LCALL   ?C?STRCPYAMD
                                           ; SOURCE LINE # 496
002E 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0031 74FF              MOV     A,#0FFH
0033 F0                MOVX    @DPTR,A
0034 A3                INC     DPTR
0035 7400        R     MOV     A,#HIGH ?SC_122
0037 F0                MOVX    @DPTR,A
0038 A3                INC     DPTR
0039 7400        R     MOV     A,#LOW ?SC_122
003B F0                MOVX    @DPTR,A
003C 900000      R     MOV     DPTR,#info_string
003F E0                MOVX    A,@DPTR
0040 FB                MOV     R3,A
0041 A3                INC     DPTR
0042 E0                MOVX    A,@DPTR
0043 FA                MOV     R2,A
0044 A3                INC     DPTR
0045 E0                MOVX    A,@DPTR
0046 F9                MOV     R1,A
0047 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 497
004A 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
004D 74FF              MOV     A,#0FFH
004F F0                MOVX    @DPTR,A
0050 A3                INC     DPTR
0051 7400        R     MOV     A,#HIGH ?SC_125
0053 F0                MOVX    @DPTR,A
0054 A3                INC     DPTR
0055 7400        R     MOV     A,#LOW ?SC_125
0057 F0                MOVX    @DPTR,A
0058 900000      R     MOV     DPTR,#info_string
005B E0                MOVX    A,@DPTR
005C FB                MOV     R3,A
005D A3                INC     DPTR
005E E0                MOVX    A,@DPTR
005F FA                MOV     R2,A
0060 A3                INC     DPTR
0061 E0                MOVX    A,@DPTR
0062 F9                MOV     R1,A
0063 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 498
0066 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0069 74FF              MOV     A,#0FFH
006B F0                MOVX    @DPTR,A
006C A3                INC     DPTR
006D 7400        R     MOV     A,#HIGH ?SC_144
006F F0                MOVX    @DPTR,A
0070 A3                INC     DPTR
0071 7400        R     MOV     A,#LOW ?SC_144
0073 F0                MOVX    @DPTR,A
0074 900000      R     MOV     DPTR,#info_string
0077 E0                MOVX    A,@DPTR
0078 FB                MOV     R3,A
0079 A3                INC     DPTR
007A E0                MOVX    A,@DPTR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 44  

007B FA                MOV     R2,A
007C A3                INC     DPTR
007D E0                MOVX    A,@DPTR
007E F9                MOV     R1,A
007F 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 499
0082 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0085 74FF              MOV     A,#0FFH
0087 F0                MOVX    @DPTR,A
0088 A3                INC     DPTR
0089 7400        R     MOV     A,#HIGH ?SC_160
008B F0                MOVX    @DPTR,A
008C A3                INC     DPTR
008D 7400        R     MOV     A,#LOW ?SC_160
008F F0                MOVX    @DPTR,A
0090 900000      R     MOV     DPTR,#info_string
0093 E0                MOVX    A,@DPTR
0094 FB                MOV     R3,A
0095 A3                INC     DPTR
0096 E0                MOVX    A,@DPTR
0097 FA                MOV     R2,A
0098 A3                INC     DPTR
0099 E0                MOVX    A,@DPTR
009A F9                MOV     R1,A
009B 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 501
009E 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
00A1 74FF              MOV     A,#0FFH
00A3 F0                MOVX    @DPTR,A
00A4 A3                INC     DPTR
00A5 7400        R     MOV     A,#HIGH ?SC_165
00A7 F0                MOVX    @DPTR,A
00A8 A3                INC     DPTR
00A9 7400        R     MOV     A,#LOW ?SC_165
00AB F0                MOVX    @DPTR,A
00AC 900000      R     MOV     DPTR,#info_string
00AF E0                MOVX    A,@DPTR
00B0 FB                MOV     R3,A
00B1 A3                INC     DPTR
00B2 E0                MOVX    A,@DPTR
00B3 FA                MOV     R2,A
00B4 A3                INC     DPTR
00B5 E0                MOVX    A,@DPTR
00B6 F9                MOV     R1,A
00B7 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 502
00BA 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
00BD 74FF              MOV     A,#0FFH
00BF F0                MOVX    @DPTR,A
00C0 A3                INC     DPTR
00C1 7400        R     MOV     A,#HIGH ?SC_179
00C3 F0                MOVX    @DPTR,A
00C4 A3                INC     DPTR
00C5 7400        R     MOV     A,#LOW ?SC_179
00C7 F0                MOVX    @DPTR,A
00C8 900000      E     MOV     DPTR,#c_mem+01H
00CB E0                MOVX    A,@DPTR
00CC FF                MOV     R7,A
00CD 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
00D0 E4                CLR     A
00D1 F0                MOVX    @DPTR,A
00D2 A3                INC     DPTR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 45  

00D3 EF                MOV     A,R7
00D4 F0                MOVX    @DPTR,A
00D5 7B01              MOV     R3,#01H
00D7 7A00        R     MOV     R2,#HIGH str
00D9 7900        R     MOV     R1,#LOW str
00DB 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 503
00DE 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
00E1 7401              MOV     A,#01H
00E3 F0                MOVX    @DPTR,A
00E4 A3                INC     DPTR
00E5 7400        R     MOV     A,#HIGH str
00E7 F0                MOVX    @DPTR,A
00E8 A3                INC     DPTR
00E9 7400        R     MOV     A,#LOW str
00EB F0                MOVX    @DPTR,A
00EC 900000      R     MOV     DPTR,#info_string
00EF E0                MOVX    A,@DPTR
00F0 FB                MOV     R3,A
00F1 A3                INC     DPTR
00F2 E0                MOVX    A,@DPTR
00F3 FA                MOV     R2,A
00F4 A3                INC     DPTR
00F5 E0                MOVX    A,@DPTR
00F6 F9                MOV     R1,A
00F7 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 505
00FA 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
00FD 74FF              MOV     A,#0FFH
00FF F0                MOVX    @DPTR,A
0100 A3                INC     DPTR
0101 7400        R     MOV     A,#HIGH ?SC_188
0103 F0                MOVX    @DPTR,A
0104 A3                INC     DPTR
0105 7400        R     MOV     A,#LOW ?SC_188
0107 F0                MOVX    @DPTR,A
0108 900000      E     MOV     DPTR,#N_IMU_Connected
010B E0                MOVX    A,@DPTR
010C FF                MOV     R7,A
010D 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0110 E4                CLR     A
0111 F0                MOVX    @DPTR,A
0112 A3                INC     DPTR
0113 EF                MOV     A,R7
0114 F0                MOVX    @DPTR,A
0115 7B01              MOV     R3,#01H
0117 7A00        R     MOV     R2,#HIGH str
0119 7900        R     MOV     R1,#LOW str
011B 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 506
011E 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0121 7401              MOV     A,#01H
0123 F0                MOVX    @DPTR,A
0124 A3                INC     DPTR
0125 7400        R     MOV     A,#HIGH str
0127 F0                MOVX    @DPTR,A
0128 A3                INC     DPTR
0129 7400        R     MOV     A,#LOW str
012B F0                MOVX    @DPTR,A
012C 900000      R     MOV     DPTR,#info_string
012F E0                MOVX    A,@DPTR
0130 FB                MOV     R3,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 46  

0131 A3                INC     DPTR
0132 E0                MOVX    A,@DPTR
0133 FA                MOV     R2,A
0134 A3                INC     DPTR
0135 E0                MOVX    A,@DPTR
0136 F9                MOV     R1,A
0137 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 508
013A 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
013D 74FF              MOV     A,#0FFH
013F F0                MOVX    @DPTR,A
0140 A3                INC     DPTR
0141 7400        R     MOV     A,#HIGH ?SC_122
0143 F0                MOVX    @DPTR,A
0144 A3                INC     DPTR
0145 7400        R     MOV     A,#LOW ?SC_122
0147 F0                MOVX    @DPTR,A
0148 900000      R     MOV     DPTR,#info_string
014B E0                MOVX    A,@DPTR
014C FB                MOV     R3,A
014D A3                INC     DPTR
014E E0                MOVX    A,@DPTR
014F FA                MOV     R2,A
0150 A3                INC     DPTR
0151 E0                MOVX    A,@DPTR
0152 F9                MOV     R1,A
0153 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 510
0156 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0159 74FF              MOV     A,#0FFH
015B F0                MOVX    @DPTR,A
015C A3                INC     DPTR
015D 7400        R     MOV     A,#HIGH ?SC_208
015F F0                MOVX    @DPTR,A
0160 A3                INC     DPTR
0161 7400        R     MOV     A,#LOW ?SC_208
0163 F0                MOVX    @DPTR,A
0164 900000      R     MOV     DPTR,#info_string
0167 E0                MOVX    A,@DPTR
0168 FB                MOV     R3,A
0169 A3                INC     DPTR
016A E0                MOVX    A,@DPTR
016B FA                MOV     R2,A
016C A3                INC     DPTR
016D E0                MOVX    A,@DPTR
016E F9                MOV     R1,A
016F 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 511
0172 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0175 74FF              MOV     A,#0FFH
0177 F0                MOVX    @DPTR,A
0178 A3                INC     DPTR
0179 7400        R     MOV     A,#HIGH ?SC_228
017B F0                MOVX    @DPTR,A
017C A3                INC     DPTR
017D 7400        R     MOV     A,#LOW ?SC_228
017F F0                MOVX    @DPTR,A
0180 900000      R     MOV     DPTR,#info_string
0183 E0                MOVX    A,@DPTR
0184 FB                MOV     R3,A
0185 A3                INC     DPTR
0186 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 47  

0187 FA                MOV     R2,A
0188 A3                INC     DPTR
0189 E0                MOVX    A,@DPTR
018A F9                MOV     R1,A
018B 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 512
018E 900000      E     MOV     DPTR,#c_mem+04H
0191 E0                MOVX    A,@DPTR
0192 14                DEC     A
0193 6021              JZ      ?C0103
0195 04                INC     A
0196 703A              JNZ     ?C0101
                                           ; SOURCE LINE # 513
0198         ?C0102:
                                           ; SOURCE LINE # 514
0198 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
019B 74FF              MOV     A,#0FFH
019D F0                MOVX    @DPTR,A
019E A3                INC     DPTR
019F 7400        R     MOV     A,#HIGH ?SC_251
01A1 F0                MOVX    @DPTR,A
01A2 A3                INC     DPTR
01A3 7400        R     MOV     A,#LOW ?SC_251
01A5 F0                MOVX    @DPTR,A
01A6 900000      R     MOV     DPTR,#info_string
01A9 E0                MOVX    A,@DPTR
01AA FB                MOV     R3,A
01AB A3                INC     DPTR
01AC E0                MOVX    A,@DPTR
01AD FA                MOV     R2,A
01AE A3                INC     DPTR
01AF E0                MOVX    A,@DPTR
01B0 F9                MOV     R1,A
01B1 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 515
01B4 801C              SJMP    ?C0101
                                           ; SOURCE LINE # 516
01B6         ?C0103:
                                           ; SOURCE LINE # 517
01B6 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
01B9 74FF              MOV     A,#0FFH
01BB F0                MOVX    @DPTR,A
01BC A3                INC     DPTR
01BD 7400        R     MOV     A,#HIGH ?SC_255
01BF F0                MOVX    @DPTR,A
01C0 A3                INC     DPTR
01C1 7400        R     MOV     A,#LOW ?SC_255
01C3 F0                MOVX    @DPTR,A
01C4 900000      R     MOV     DPTR,#info_string
01C7 E0                MOVX    A,@DPTR
01C8 FB                MOV     R3,A
01C9 A3                INC     DPTR
01CA E0                MOVX    A,@DPTR
01CB FA                MOV     R2,A
01CC A3                INC     DPTR
01CD E0                MOVX    A,@DPTR
01CE F9                MOV     R1,A
01CF 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 518
                                           ; SOURCE LINE # 519
01D2         ?C0101:
                                           ; SOURCE LINE # 521
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 48  

01D2 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
01D5 74FF              MOV     A,#0FFH
01D7 F0                MOVX    @DPTR,A
01D8 A3                INC     DPTR
01D9 7400        R     MOV     A,#HIGH ?SC_265
01DB F0                MOVX    @DPTR,A
01DC A3                INC     DPTR
01DD 7400        R     MOV     A,#LOW ?SC_265
01DF F0                MOVX    @DPTR,A
01E0 900000      R     MOV     DPTR,#info_string
01E3 E0                MOVX    A,@DPTR
01E4 FB                MOV     R3,A
01E5 A3                INC     DPTR
01E6 E0                MOVX    A,@DPTR
01E7 FA                MOV     R2,A
01E8 A3                INC     DPTR
01E9 E0                MOVX    A,@DPTR
01EA F9                MOV     R1,A
01EB 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 522
01EE 900000      E     MOV     DPTR,#c_mem+05H
01F1 E0                MOVX    A,@DPTR
01F2 14                DEC     A
01F3 6021              JZ      ?C0106
01F5 04                INC     A
01F6 703A              JNZ     ?C0104
                                           ; SOURCE LINE # 523
01F8         ?C0105:
                                           ; SOURCE LINE # 524
01F8 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
01FB 74FF              MOV     A,#0FFH
01FD F0                MOVX    @DPTR,A
01FE A3                INC     DPTR
01FF 7400        R     MOV     A,#HIGH ?SC_284
0201 F0                MOVX    @DPTR,A
0202 A3                INC     DPTR
0203 7400        R     MOV     A,#LOW ?SC_284
0205 F0                MOVX    @DPTR,A
0206 900000      R     MOV     DPTR,#info_string
0209 E0                MOVX    A,@DPTR
020A FB                MOV     R3,A
020B A3                INC     DPTR
020C E0                MOVX    A,@DPTR
020D FA                MOV     R2,A
020E A3                INC     DPTR
020F E0                MOVX    A,@DPTR
0210 F9                MOV     R1,A
0211 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 525
0214 801C              SJMP    ?C0104
                                           ; SOURCE LINE # 526
0216         ?C0106:
                                           ; SOURCE LINE # 527
0216 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0219 74FF              MOV     A,#0FFH
021B F0                MOVX    @DPTR,A
021C A3                INC     DPTR
021D 7400        R     MOV     A,#HIGH ?SC_292
021F F0                MOVX    @DPTR,A
0220 A3                INC     DPTR
0221 7400        R     MOV     A,#LOW ?SC_292
0223 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 49  

0224 900000      R     MOV     DPTR,#info_string
0227 E0                MOVX    A,@DPTR
0228 FB                MOV     R3,A
0229 A3                INC     DPTR
022A E0                MOVX    A,@DPTR
022B FA                MOV     R2,A
022C A3                INC     DPTR
022D E0                MOVX    A,@DPTR
022E F9                MOV     R1,A
022F 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 528
                                           ; SOURCE LINE # 529
0232         ?C0104:
                                           ; SOURCE LINE # 531
0232 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0235 74FF              MOV     A,#0FFH
0237 F0                MOVX    @DPTR,A
0238 A3                INC     DPTR
0239 7400        R     MOV     A,#HIGH ?SC_300
023B F0                MOVX    @DPTR,A
023C A3                INC     DPTR
023D 7400        R     MOV     A,#LOW ?SC_300
023F F0                MOVX    @DPTR,A
0240 900000      R     MOV     DPTR,#info_string
0243 E0                MOVX    A,@DPTR
0244 FB                MOV     R3,A
0245 A3                INC     DPTR
0246 E0                MOVX    A,@DPTR
0247 FA                MOV     R2,A
0248 A3                INC     DPTR
0249 E0                MOVX    A,@DPTR
024A F9                MOV     R1,A
024B 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 532
024E 900000      E     MOV     DPTR,#c_mem+06H
0251 E0                MOVX    A,@DPTR
0252 701C              JNZ     ?C0107
                                           ; SOURCE LINE # 533
0254         ?C0108:
                                           ; SOURCE LINE # 534
0254 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0257 74FF              MOV     A,#0FFH
0259 F0                MOVX    @DPTR,A
025A A3                INC     DPTR
025B 7400        R     MOV     A,#HIGH ?SC_322
025D F0                MOVX    @DPTR,A
025E A3                INC     DPTR
025F 7400        R     MOV     A,#LOW ?SC_322
0261 F0                MOVX    @DPTR,A
0262 900000      R     MOV     DPTR,#info_string
0265 E0                MOVX    A,@DPTR
0266 FB                MOV     R3,A
0267 A3                INC     DPTR
0268 E0                MOVX    A,@DPTR
0269 FA                MOV     R2,A
026A A3                INC     DPTR
026B E0                MOVX    A,@DPTR
026C F9                MOV     R1,A
026D 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 535
                                           ; SOURCE LINE # 536
0270         ?C0107:
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 50  

                                           ; SOURCE LINE # 538
0270 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0273 74FF              MOV     A,#0FFH
0275 F0                MOVX    @DPTR,A
0276 A3                INC     DPTR
0277 7400        R     MOV     A,#HIGH ?SC_327
0279 F0                MOVX    @DPTR,A
027A A3                INC     DPTR
027B 7400        R     MOV     A,#LOW ?SC_327
027D F0                MOVX    @DPTR,A
027E 900000      R     MOV     DPTR,#info_string
0281 E0                MOVX    A,@DPTR
0282 FB                MOV     R3,A
0283 A3                INC     DPTR
0284 E0                MOVX    A,@DPTR
0285 FA                MOV     R2,A
0286 A3                INC     DPTR
0287 E0                MOVX    A,@DPTR
0288 F9                MOV     R1,A
0289 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 539
028C 900000      E     MOV     DPTR,#c_mem+07H
028F E0                MOVX    A,@DPTR
0290 14                DEC     A
0291 6028              JZ      ?C0111
0293 14                DEC     A
0294 6043              JZ      ?C0112
0296 14                DEC     A
0297 605E              JZ      ?C0113
0299 2403              ADD     A,#03H
029B 7076              JNZ     ?C0109
                                           ; SOURCE LINE # 540
029D         ?C0110:
                                           ; SOURCE LINE # 541
029D 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
02A0 74FF              MOV     A,#0FFH
02A2 F0                MOVX    @DPTR,A
02A3 A3                INC     DPTR
02A4 7400        R     MOV     A,#HIGH ?SC_355
02A6 F0                MOVX    @DPTR,A
02A7 A3                INC     DPTR
02A8 7400        R     MOV     A,#LOW ?SC_355
02AA F0                MOVX    @DPTR,A
02AB 900000      R     MOV     DPTR,#info_string
02AE E0                MOVX    A,@DPTR
02AF FB                MOV     R3,A
02B0 A3                INC     DPTR
02B1 E0                MOVX    A,@DPTR
02B2 FA                MOV     R2,A
02B3 A3                INC     DPTR
02B4 E0                MOVX    A,@DPTR
02B5 F9                MOV     R1,A
02B6 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 542
02B9 8058              SJMP    ?C0109
                                           ; SOURCE LINE # 543
02BB         ?C0111:
                                           ; SOURCE LINE # 544
02BB 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
02BE 74FF              MOV     A,#0FFH
02C0 F0                MOVX    @DPTR,A
02C1 A3                INC     DPTR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 51  

02C2 7400        R     MOV     A,#HIGH ?SC_364
02C4 F0                MOVX    @DPTR,A
02C5 A3                INC     DPTR
02C6 7400        R     MOV     A,#LOW ?SC_364
02C8 F0                MOVX    @DPTR,A
02C9 900000      R     MOV     DPTR,#info_string
02CC E0                MOVX    A,@DPTR
02CD FB                MOV     R3,A
02CE A3                INC     DPTR
02CF E0                MOVX    A,@DPTR
02D0 FA                MOV     R2,A
02D1 A3                INC     DPTR
02D2 E0                MOVX    A,@DPTR
02D3 F9                MOV     R1,A
02D4 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 545
02D7 803A              SJMP    ?C0109
                                           ; SOURCE LINE # 546
02D9         ?C0112:
                                           ; SOURCE LINE # 547
02D9 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
02DC 74FF              MOV     A,#0FFH
02DE F0                MOVX    @DPTR,A
02DF A3                INC     DPTR
02E0 7400        R     MOV     A,#HIGH ?SC_373
02E2 F0                MOVX    @DPTR,A
02E3 A3                INC     DPTR
02E4 7400        R     MOV     A,#LOW ?SC_373
02E6 F0                MOVX    @DPTR,A
02E7 900000      R     MOV     DPTR,#info_string
02EA E0                MOVX    A,@DPTR
02EB FB                MOV     R3,A
02EC A3                INC     DPTR
02ED E0                MOVX    A,@DPTR
02EE FA                MOV     R2,A
02EF A3                INC     DPTR
02F0 E0                MOVX    A,@DPTR
02F1 F9                MOV     R1,A
02F2 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 548
02F5 801C              SJMP    ?C0109
                                           ; SOURCE LINE # 549
02F7         ?C0113:
                                           ; SOURCE LINE # 550
02F7 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
02FA 74FF              MOV     A,#0FFH
02FC F0                MOVX    @DPTR,A
02FD A3                INC     DPTR
02FE 7400        R     MOV     A,#HIGH ?SC_382
0300 F0                MOVX    @DPTR,A
0301 A3                INC     DPTR
0302 7400        R     MOV     A,#LOW ?SC_382
0304 F0                MOVX    @DPTR,A
0305 900000      R     MOV     DPTR,#info_string
0308 E0                MOVX    A,@DPTR
0309 FB                MOV     R3,A
030A A3                INC     DPTR
030B E0                MOVX    A,@DPTR
030C FA                MOV     R2,A
030D A3                INC     DPTR
030E E0                MOVX    A,@DPTR
030F F9                MOV     R1,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 52  

0310 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 551
                                           ; SOURCE LINE # 552
0313         ?C0109:
                                           ; SOURCE LINE # 554
0313 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0316 74FF              MOV     A,#0FFH
0318 F0                MOVX    @DPTR,A
0319 A3                INC     DPTR
031A 7400        R     MOV     A,#HIGH ?SC_392
031C F0                MOVX    @DPTR,A
031D A3                INC     DPTR
031E 7400        R     MOV     A,#LOW ?SC_392
0320 F0                MOVX    @DPTR,A
0321 900000      R     MOV     DPTR,#info_string
0324 E0                MOVX    A,@DPTR
0325 FB                MOV     R3,A
0326 A3                INC     DPTR
0327 E0                MOVX    A,@DPTR
0328 FA                MOV     R2,A
0329 A3                INC     DPTR
032A E0                MOVX    A,@DPTR
032B F9                MOV     R1,A
032C 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 555
032F 900000      E     MOV     DPTR,#c_mem+08H
0332 E0                MOVX    A,@DPTR
0333 14                DEC     A
0334 6025              JZ      ?C0116
0336 14                DEC     A
0337 6040              JZ      ?C0117
0339 2402              ADD     A,#02H
033B 7058              JNZ     ?C0114
                                           ; SOURCE LINE # 556
033D         ?C0115:
                                           ; SOURCE LINE # 557
033D 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0340 74FF              MOV     A,#0FFH
0342 F0                MOVX    @DPTR,A
0343 A3                INC     DPTR
0344 7400        R     MOV     A,#HIGH ?SC_416
0346 F0                MOVX    @DPTR,A
0347 A3                INC     DPTR
0348 7400        R     MOV     A,#LOW ?SC_416
034A F0                MOVX    @DPTR,A
034B 900000      R     MOV     DPTR,#info_string
034E E0                MOVX    A,@DPTR
034F FB                MOV     R3,A
0350 A3                INC     DPTR
0351 E0                MOVX    A,@DPTR
0352 FA                MOV     R2,A
0353 A3                INC     DPTR
0354 E0                MOVX    A,@DPTR
0355 F9                MOV     R1,A
0356 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 558
0359 803A              SJMP    ?C0114
                                           ; SOURCE LINE # 559
035B         ?C0116:
                                           ; SOURCE LINE # 560
035B 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
035E 74FF              MOV     A,#0FFH
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 53  

0360 F0                MOVX    @DPTR,A
0361 A3                INC     DPTR
0362 7400        R     MOV     A,#HIGH ?SC_432
0364 F0                MOVX    @DPTR,A
0365 A3                INC     DPTR
0366 7400        R     MOV     A,#LOW ?SC_432
0368 F0                MOVX    @DPTR,A
0369 900000      R     MOV     DPTR,#info_string
036C E0                MOVX    A,@DPTR
036D FB                MOV     R3,A
036E A3                INC     DPTR
036F E0                MOVX    A,@DPTR
0370 FA                MOV     R2,A
0371 A3                INC     DPTR
0372 E0                MOVX    A,@DPTR
0373 F9                MOV     R1,A
0374 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 561
0377 801C              SJMP    ?C0114
                                           ; SOURCE LINE # 562
0379         ?C0117:
                                           ; SOURCE LINE # 563
0379 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
037C 74FF              MOV     A,#0FFH
037E F0                MOVX    @DPTR,A
037F A3                INC     DPTR
0380 7400        R     MOV     A,#HIGH ?SC_448
0382 F0                MOVX    @DPTR,A
0383 A3                INC     DPTR
0384 7400        R     MOV     A,#LOW ?SC_448
0386 F0                MOVX    @DPTR,A
0387 900000      R     MOV     DPTR,#info_string
038A E0                MOVX    A,@DPTR
038B FB                MOV     R3,A
038C A3                INC     DPTR
038D E0                MOVX    A,@DPTR
038E FA                MOV     R2,A
038F A3                INC     DPTR
0390 E0                MOVX    A,@DPTR
0391 F9                MOV     R1,A
0392 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 564
                                           ; SOURCE LINE # 565
0395         ?C0114:
                                           ; SOURCE LINE # 566
0395 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0398 74FF              MOV     A,#0FFH
039A F0                MOVX    @DPTR,A
039B A3                INC     DPTR
039C 7400        R     MOV     A,#HIGH ?SC_122
039E F0                MOVX    @DPTR,A
039F A3                INC     DPTR
03A0 7400        R     MOV     A,#LOW ?SC_122
03A2 F0                MOVX    @DPTR,A
03A3 900000      R     MOV     DPTR,#info_string
03A6 E0                MOVX    A,@DPTR
03A7 FB                MOV     R3,A
03A8 A3                INC     DPTR
03A9 E0                MOVX    A,@DPTR
03AA FA                MOV     R2,A
03AB A3                INC     DPTR
03AC E0                MOVX    A,@DPTR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 54  

03AD F9                MOV     R1,A
03AE 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 568
03B1 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
03B4 74FF              MOV     A,#0FFH
03B6 F0                MOVX    @DPTR,A
03B7 A3                INC     DPTR
03B8 7400        R     MOV     A,#HIGH ?SC_465
03BA F0                MOVX    @DPTR,A
03BB A3                INC     DPTR
03BC 7400        R     MOV     A,#LOW ?SC_465
03BE F0                MOVX    @DPTR,A
03BF 900000      R     MOV     DPTR,#info_string
03C2 E0                MOVX    A,@DPTR
03C3 FB                MOV     R3,A
03C4 A3                INC     DPTR
03C5 E0                MOVX    A,@DPTR
03C6 FA                MOV     R2,A
03C7 A3                INC     DPTR
03C8 E0                MOVX    A,@DPTR
03C9 F9                MOV     R1,A
03CA 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 569
03CD E4                CLR     A
03CE 900000      R     MOV     DPTR,#i
03D1 F0                MOVX    @DPTR,A
03D2 A3                INC     DPTR
03D3 F0                MOVX    @DPTR,A
03D4         ?C0118:
03D4 900000      E     MOV     DPTR,#N_IMU_Connected
03D7 E0                MOVX    A,@DPTR
03D8 FF                MOV     R7,A
03D9 C3                CLR     C
03DA 900000      R     MOV     DPTR,#i+01H
03DD E0                MOVX    A,@DPTR
03DE 9F                SUBB    A,R7
03DF 7480              MOV     A,#080H
03E1 F8                MOV     R0,A
03E2 900000      R     MOV     DPTR,#i
03E5 E0                MOVX    A,@DPTR
03E6 6480              XRL     A,#080H
03E8 98                SUBB    A,R0
03E9 4003              JC      $ + 5H
03EB 020000      R     LJMP    ?C0119
                                           ; SOURCE LINE # 570
03EE 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
03F1 74FF              MOV     A,#0FFH
03F3 F0                MOVX    @DPTR,A
03F4 A3                INC     DPTR
03F5 7400        R     MOV     A,#HIGH ?SC_486
03F7 F0                MOVX    @DPTR,A
03F8 A3                INC     DPTR
03F9 7400        R     MOV     A,#LOW ?SC_486
03FB F0                MOVX    @DPTR,A
03FC 900000      R     MOV     DPTR,#i
03FF E0                MOVX    A,@DPTR
0400 FE                MOV     R6,A
0401 A3                INC     DPTR
0402 E0                MOVX    A,@DPTR
0403 FF                MOV     R7,A
0404 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0407 EE                MOV     A,R6
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 55  

0408 F0                MOVX    @DPTR,A
0409 A3                INC     DPTR
040A EF                MOV     A,R7
040B F0                MOVX    @DPTR,A
040C 2400        E     ADD     A,#LOW IMU_connected
040E F582              MOV     DPL,A
0410 7400        E     MOV     A,#HIGH IMU_connected
0412 3E                ADDC    A,R6
0413 F583              MOV     DPH,A
0415 E0                MOVX    A,@DPTR
0416 FF                MOV     R7,A
0417 900000      E     MOV     DPTR,#?_sprintf?BYTE+08H
041A E4                CLR     A
041B F0                MOVX    @DPTR,A
041C A3                INC     DPTR
041D EF                MOV     A,R7
041E F0                MOVX    @DPTR,A
041F 7B01              MOV     R3,#01H
0421 7A00        R     MOV     R2,#HIGH str
0423 7900        R     MOV     R1,#LOW str
0425 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 571
0428 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
042B 7401              MOV     A,#01H
042D F0                MOVX    @DPTR,A
042E A3                INC     DPTR
042F 7400        R     MOV     A,#HIGH str
0431 F0                MOVX    @DPTR,A
0432 A3                INC     DPTR
0433 7400        R     MOV     A,#LOW str
0435 F0                MOVX    @DPTR,A
0436 900000      R     MOV     DPTR,#info_string
0439 E0                MOVX    A,@DPTR
043A FB                MOV     R3,A
043B A3                INC     DPTR
043C E0                MOVX    A,@DPTR
043D FA                MOV     R2,A
043E A3                INC     DPTR
043F E0                MOVX    A,@DPTR
0440 F9                MOV     R1,A
0441 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 573
0444 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0447 74FF              MOV     A,#0FFH
0449 F0                MOVX    @DPTR,A
044A A3                INC     DPTR
044B 7400        R     MOV     A,#HIGH ?SC_505
044D F0                MOVX    @DPTR,A
044E A3                INC     DPTR
044F 7400        R     MOV     A,#LOW ?SC_505
0451 F0                MOVX    @DPTR,A
0452 7B01              MOV     R3,#01H
0454 7A00        R     MOV     R2,#HIGH str
0456 7900        R     MOV     R1,#LOW str
0458 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 574
045B 900000      R     MOV     DPTR,#i
045E E0                MOVX    A,@DPTR
045F FE                MOV     R6,A
0460 A3                INC     DPTR
0461 E0                MOVX    A,@DPTR
0462 2400        E     ADD     A,#LOW IMU_connected
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 56  

0464 F582              MOV     DPL,A
0466 7400        E     MOV     A,#HIGH IMU_connected
0468 3E                ADDC    A,R6
0469 F583              MOV     DPH,A
046B E0                MOVX    A,@DPTR
046C 75F003            MOV     B,#03H
046F A4                MUL     AB
0470 2400        E     ADD     A,#LOW IMU_conf
0472 F582              MOV     DPL,A
0474 E4                CLR     A
0475 3400        E     ADDC    A,#HIGH IMU_conf
0477 F583              MOV     DPH,A
0479 E0                MOVX    A,@DPTR
047A 6019              JZ      ?C0121
                                           ; SOURCE LINE # 575
047C 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
047F 74FF              MOV     A,#0FFH
0481 F0                MOVX    @DPTR,A
0482 A3                INC     DPTR
0483 7400        R     MOV     A,#HIGH ?SC_523
0485 F0                MOVX    @DPTR,A
0486 A3                INC     DPTR
0487 7400        R     MOV     A,#LOW ?SC_523
0489 F0                MOVX    @DPTR,A
048A 7B01              MOV     R3,#01H
048C 7A00        R     MOV     R2,#HIGH str
048E 7900        R     MOV     R1,#LOW str
0490 120000      E     LCALL   _strcat
0493 8017              SJMP    ?C0122
0495         ?C0121:
                                           ; SOURCE LINE # 577
0495 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0498 74FF              MOV     A,#0FFH
049A F0                MOVX    @DPTR,A
049B A3                INC     DPTR
049C 7400        R     MOV     A,#HIGH ?SC_529
049E F0                MOVX    @DPTR,A
049F A3                INC     DPTR
04A0 7400        R     MOV     A,#LOW ?SC_529
04A2 F0                MOVX    @DPTR,A
04A3 7B01              MOV     R3,#01H
04A5 7A00        R     MOV     R2,#HIGH str
04A7 7900        R     MOV     R1,#LOW str
04A9 120000      E     LCALL   _strcat
04AC         ?C0122:
                                           ; SOURCE LINE # 578
04AC 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
04AF 74FF              MOV     A,#0FFH
04B1 F0                MOVX    @DPTR,A
04B2 A3                INC     DPTR
04B3 7400        R     MOV     A,#HIGH ?SC_534
04B5 F0                MOVX    @DPTR,A
04B6 A3                INC     DPTR
04B7 7400        R     MOV     A,#LOW ?SC_534
04B9 F0                MOVX    @DPTR,A
04BA 7B01              MOV     R3,#01H
04BC 7A00        R     MOV     R2,#HIGH str
04BE 7900        R     MOV     R1,#LOW str
04C0 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 579
04C3 900000      R     MOV     DPTR,#i
04C6 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 57  

04C7 FE                MOV     R6,A
04C8 A3                INC     DPTR
04C9 E0                MOVX    A,@DPTR
04CA 2400        E     ADD     A,#LOW IMU_connected
04CC F582              MOV     DPL,A
04CE 7400        E     MOV     A,#HIGH IMU_connected
04D0 3E                ADDC    A,R6
04D1 F583              MOV     DPH,A
04D3 E0                MOVX    A,@DPTR
04D4 75F003            MOV     B,#03H
04D7 A4                MUL     AB
04D8 2400        E     ADD     A,#LOW IMU_conf+01H
04DA F582              MOV     DPL,A
04DC E4                CLR     A
04DD 3400        E     ADDC    A,#HIGH IMU_conf+01H
04DF F583              MOV     DPH,A
04E1 E0                MOVX    A,@DPTR
04E2 6019              JZ      ?C0123
                                           ; SOURCE LINE # 580
04E4 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
04E7 74FF              MOV     A,#0FFH
04E9 F0                MOVX    @DPTR,A
04EA A3                INC     DPTR
04EB 7400        R     MOV     A,#HIGH ?SC_523
04ED F0                MOVX    @DPTR,A
04EE A3                INC     DPTR
04EF 7400        R     MOV     A,#LOW ?SC_523
04F1 F0                MOVX    @DPTR,A
04F2 7B01              MOV     R3,#01H
04F4 7A00        R     MOV     R2,#HIGH str
04F6 7900        R     MOV     R1,#LOW str
04F8 120000      E     LCALL   _strcat
04FB 8017              SJMP    ?C0124
04FD         ?C0123:
                                           ; SOURCE LINE # 582
04FD 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0500 74FF              MOV     A,#0FFH
0502 F0                MOVX    @DPTR,A
0503 A3                INC     DPTR
0504 7400        R     MOV     A,#HIGH ?SC_529
0506 F0                MOVX    @DPTR,A
0507 A3                INC     DPTR
0508 7400        R     MOV     A,#LOW ?SC_529
050A F0                MOVX    @DPTR,A
050B 7B01              MOV     R3,#01H
050D 7A00        R     MOV     R2,#HIGH str
050F 7900        R     MOV     R1,#LOW str
0511 120000      E     LCALL   _strcat
0514         ?C0124:
                                           ; SOURCE LINE # 583
0514 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0517 74FF              MOV     A,#0FFH
0519 F0                MOVX    @DPTR,A
051A A3                INC     DPTR
051B 7400        R     MOV     A,#HIGH ?SC_548
051D F0                MOVX    @DPTR,A
051E A3                INC     DPTR
051F 7400        R     MOV     A,#LOW ?SC_548
0521 F0                MOVX    @DPTR,A
0522 7B01              MOV     R3,#01H
0524 7A00        R     MOV     R2,#HIGH str
0526 7900        R     MOV     R1,#LOW str
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 58  

0528 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 584
052B 900000      R     MOV     DPTR,#i
052E E0                MOVX    A,@DPTR
052F FE                MOV     R6,A
0530 A3                INC     DPTR
0531 E0                MOVX    A,@DPTR
0532 2400        E     ADD     A,#LOW IMU_connected
0534 F582              MOV     DPL,A
0536 7400        E     MOV     A,#HIGH IMU_connected
0538 3E                ADDC    A,R6
0539 F583              MOV     DPH,A
053B E0                MOVX    A,@DPTR
053C 75F003            MOV     B,#03H
053F A4                MUL     AB
0540 2400        E     ADD     A,#LOW IMU_conf+02H
0542 F582              MOV     DPL,A
0544 E4                CLR     A
0545 3400        E     ADDC    A,#HIGH IMU_conf+02H
0547 F583              MOV     DPH,A
0549 E0                MOVX    A,@DPTR
054A 6019              JZ      ?C0125
                                           ; SOURCE LINE # 585
054C 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
054F 74FF              MOV     A,#0FFH
0551 F0                MOVX    @DPTR,A
0552 A3                INC     DPTR
0553 7400        R     MOV     A,#HIGH ?SC_523
0555 F0                MOVX    @DPTR,A
0556 A3                INC     DPTR
0557 7400        R     MOV     A,#LOW ?SC_523
0559 F0                MOVX    @DPTR,A
055A 7B01              MOV     R3,#01H
055C 7A00        R     MOV     R2,#HIGH str
055E 7900        R     MOV     R1,#LOW str
0560 120000      E     LCALL   _strcat
0563 8017              SJMP    ?C0126
0565         ?C0125:
                                           ; SOURCE LINE # 587
0565 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
0568 74FF              MOV     A,#0FFH
056A F0                MOVX    @DPTR,A
056B A3                INC     DPTR
056C 7400        R     MOV     A,#HIGH ?SC_529
056E F0                MOVX    @DPTR,A
056F A3                INC     DPTR
0570 7400        R     MOV     A,#LOW ?SC_529
0572 F0                MOVX    @DPTR,A
0573 7B01              MOV     R3,#01H
0575 7A00        R     MOV     R2,#HIGH str
0577 7900        R     MOV     R1,#LOW str
0579 120000      E     LCALL   _strcat
057C         ?C0126:
                                           ; SOURCE LINE # 589
057C 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
057F 7401              MOV     A,#01H
0581 F0                MOVX    @DPTR,A
0582 A3                INC     DPTR
0583 7400        R     MOV     A,#HIGH str
0585 F0                MOVX    @DPTR,A
0586 A3                INC     DPTR
0587 7400        R     MOV     A,#LOW str
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 59  

0589 F0                MOVX    @DPTR,A
058A 900000      R     MOV     DPTR,#info_string
058D E0                MOVX    A,@DPTR
058E FB                MOV     R3,A
058F A3                INC     DPTR
0590 E0                MOVX    A,@DPTR
0591 FA                MOV     R2,A
0592 A3                INC     DPTR
0593 E0                MOVX    A,@DPTR
0594 F9                MOV     R1,A
0595 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 590
0598 900000      R     MOV     DPTR,#i+01H
059B E0                MOVX    A,@DPTR
059C 04                INC     A
059D F0                MOVX    @DPTR,A
059E 7006              JNZ     ?C0222
05A0 900000      R     MOV     DPTR,#i
05A3 E0                MOVX    A,@DPTR
05A4 04                INC     A
05A5 F0                MOVX    @DPTR,A
05A6         ?C0222:
05A6 020000      R     LJMP    ?C0118
05A9         ?C0119:
                                           ; SOURCE LINE # 592
05A9 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
05AC 74FF              MOV     A,#0FFH
05AE F0                MOVX    @DPTR,A
05AF A3                INC     DPTR
05B0 7400        R     MOV     A,#HIGH ?SC_122
05B2 F0                MOVX    @DPTR,A
05B3 A3                INC     DPTR
05B4 7400        R     MOV     A,#LOW ?SC_122
05B6 F0                MOVX    @DPTR,A
05B7 900000      R     MOV     DPTR,#info_string
05BA E0                MOVX    A,@DPTR
05BB FB                MOV     R3,A
05BC A3                INC     DPTR
05BD E0                MOVX    A,@DPTR
05BE FA                MOV     R2,A
05BF A3                INC     DPTR
05C0 E0                MOVX    A,@DPTR
05C1 F9                MOV     R1,A
05C2 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 594
05C5 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
05C8 74FF              MOV     A,#0FFH
05CA F0                MOVX    @DPTR,A
05CB A3                INC     DPTR
05CC 7400        R     MOV     A,#HIGH ?SC_565
05CE F0                MOVX    @DPTR,A
05CF A3                INC     DPTR
05D0 7400        R     MOV     A,#LOW ?SC_565
05D2 F0                MOVX    @DPTR,A
05D3 900000      R     MOV     DPTR,#info_string
05D6 E0                MOVX    A,@DPTR
05D7 FB                MOV     R3,A
05D8 A3                INC     DPTR
05D9 E0                MOVX    A,@DPTR
05DA FA                MOV     R2,A
05DB A3                INC     DPTR
05DC E0                MOVX    A,@DPTR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 60  

05DD F9                MOV     R1,A
05DE 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 595
05E1 E4                CLR     A
05E2 900000      R     MOV     DPTR,#i
05E5 F0                MOVX    @DPTR,A
05E6 A3                INC     DPTR
05E7 F0                MOVX    @DPTR,A
05E8         ?C0127:
05E8 900000      E     MOV     DPTR,#N_IMU_Connected
05EB E0                MOVX    A,@DPTR
05EC FF                MOV     R7,A
05ED C3                CLR     C
05EE 900000      R     MOV     DPTR,#i+01H
05F1 E0                MOVX    A,@DPTR
05F2 9F                SUBB    A,R7
05F3 7480              MOV     A,#080H
05F5 F8                MOV     R0,A
05F6 900000      R     MOV     DPTR,#i
05F9 E0                MOVX    A,@DPTR
05FA 6480              XRL     A,#080H
05FC 98                SUBB    A,R0
05FD 4003              JC      $ + 5H
05FF 020000      R     LJMP    ?C0128
                                           ; SOURCE LINE # 596
0602 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0605 74FF              MOV     A,#0FFH
0607 F0                MOVX    @DPTR,A
0608 A3                INC     DPTR
0609 7400        R     MOV     A,#HIGH ?SC_486
060B F0                MOVX    @DPTR,A
060C A3                INC     DPTR
060D 7400        R     MOV     A,#LOW ?SC_486
060F F0                MOVX    @DPTR,A
0610 900000      R     MOV     DPTR,#i
0613 E0                MOVX    A,@DPTR
0614 FE                MOV     R6,A
0615 A3                INC     DPTR
0616 E0                MOVX    A,@DPTR
0617 FF                MOV     R7,A
0618 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
061B EE                MOV     A,R6
061C F0                MOVX    @DPTR,A
061D A3                INC     DPTR
061E EF                MOV     A,R7
061F F0                MOVX    @DPTR,A
0620 2400        E     ADD     A,#LOW IMU_connected
0622 F582              MOV     DPL,A
0624 7400        E     MOV     A,#HIGH IMU_connected
0626 3E                ADDC    A,R6
0627 F583              MOV     DPH,A
0629 E0                MOVX    A,@DPTR
062A FF                MOV     R7,A
062B 900000      E     MOV     DPTR,#?_sprintf?BYTE+08H
062E E4                CLR     A
062F F0                MOVX    @DPTR,A
0630 A3                INC     DPTR
0631 EF                MOV     A,R7
0632 F0                MOVX    @DPTR,A
0633 7B01              MOV     R3,#01H
0635 7A00        R     MOV     R2,#HIGH str
0637 7900        R     MOV     R1,#LOW str
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 61  

0639 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 597
063C 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
063F 7401              MOV     A,#01H
0641 F0                MOVX    @DPTR,A
0642 A3                INC     DPTR
0643 7400        R     MOV     A,#HIGH str
0645 F0                MOVX    @DPTR,A
0646 A3                INC     DPTR
0647 7400        R     MOV     A,#LOW str
0649 F0                MOVX    @DPTR,A
064A 900000      R     MOV     DPTR,#info_string
064D E0                MOVX    A,@DPTR
064E FB                MOV     R3,A
064F A3                INC     DPTR
0650 E0                MOVX    A,@DPTR
0651 FA                MOV     R2,A
0652 A3                INC     DPTR
0653 E0                MOVX    A,@DPTR
0654 F9                MOV     R1,A
0655 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 599
0658 900000      R     MOV     DPTR,#i
065B E0                MOVX    A,@DPTR
065C FE                MOV     R6,A
065D A3                INC     DPTR
065E E0                MOVX    A,@DPTR
065F FF                MOV     R7,A
0660 2400        E     ADD     A,#LOW IMU_connected
0662 F582              MOV     DPL,A
0664 7400        E     MOV     A,#HIGH IMU_connected
0666 3E                ADDC    A,R6
0667 F583              MOV     DPH,A
0669 E0                MOVX    A,@DPTR
066A 75F003            MOV     B,#03H
066D A4                MUL     AB
066E 2400        E     ADD     A,#LOW IMU_conf
0670 F582              MOV     DPL,A
0672 E4                CLR     A
0673 3400        E     ADDC    A,#HIGH IMU_conf
0675 F583              MOV     DPH,A
0677 E0                MOVX    A,@DPTR
0678 7003              JNZ     $ + 5H
067A 020000      R     LJMP    ?C0130
                                           ; SOURCE LINE # 600
067D 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0680 74FF              MOV     A,#0FFH
0682 F0                MOVX    @DPTR,A
0683 A3                INC     DPTR
0684 7400        R     MOV     A,#HIGH ?SC_580
0686 F0                MOVX    @DPTR,A
0687 A3                INC     DPTR
0688 7400        R     MOV     A,#LOW ?SC_580
068A F0                MOVX    @DPTR,A
068B 900000      E     MOV     DPTR,#g_imu+01H
068E 75F013            MOV     B,#013H
0691 EF                MOV     A,R7
0692 120000      E     LCALL   ?C?OFFXADD
0695 EE                MOV     A,R6
0696 75F013            MOV     B,#013H
0699 A4                MUL     AB
069A 2583              ADD     A,DPH
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 62  

069C F583              MOV     DPH,A
069E E0                MOVX    A,@DPTR
069F FD                MOV     R5,A
06A0 A3                INC     DPTR
06A1 E0                MOVX    A,@DPTR
06A2 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
06A5 CD                XCH     A,R5
06A6 F0                MOVX    @DPTR,A
06A7 A3                INC     DPTR
06A8 ED                MOV     A,R5
06A9 F0                MOVX    @DPTR,A
06AA 900000      E     MOV     DPTR,#g_imu+03H
06AD 75F013            MOV     B,#013H
06B0 EF                MOV     A,R7
06B1 120000      E     LCALL   ?C?OFFXADD
06B4 EE                MOV     A,R6
06B5 75F013            MOV     B,#013H
06B8 A4                MUL     AB
06B9 2583              ADD     A,DPH
06BB F583              MOV     DPH,A
06BD E0                MOVX    A,@DPTR
06BE FF                MOV     R7,A
06BF A3                INC     DPTR
06C0 E0                MOVX    A,@DPTR
06C1 900000      E     MOV     DPTR,#?_sprintf?BYTE+08H
06C4 CF                XCH     A,R7
06C5 F0                MOVX    @DPTR,A
06C6 A3                INC     DPTR
06C7 EF                MOV     A,R7
06C8 F0                MOVX    @DPTR,A
06C9 900000      R     MOV     DPTR,#i
06CC E0                MOVX    A,@DPTR
06CD A3                INC     DPTR
06CE E0                MOVX    A,@DPTR
06CF 900000      E     MOV     DPTR,#g_imu+05H
06D2 75F013            MOV     B,#013H
06D5 120000      E     LCALL   ?C?OFFXADD
06D8 EE                MOV     A,R6
06D9 75F013            MOV     B,#013H
06DC A4                MUL     AB
06DD 2583              ADD     A,DPH
06DF F583              MOV     DPH,A
06E1 E0                MOVX    A,@DPTR
06E2 FF                MOV     R7,A
06E3 A3                INC     DPTR
06E4 E0                MOVX    A,@DPTR
06E5 900000      E     MOV     DPTR,#?_sprintf?BYTE+0AH
06E8 CF                XCH     A,R7
06E9 F0                MOVX    @DPTR,A
06EA A3                INC     DPTR
06EB EF                MOV     A,R7
06EC F0                MOVX    @DPTR,A
06ED 7B01              MOV     R3,#01H
06EF 7A00        R     MOV     R2,#HIGH str
06F1 7900        R     MOV     R1,#LOW str
06F3 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 601
06F6 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
06F9 7401              MOV     A,#01H
06FB F0                MOVX    @DPTR,A
06FC A3                INC     DPTR
06FD 7400        R     MOV     A,#HIGH str
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 63  

06FF F0                MOVX    @DPTR,A
0700 A3                INC     DPTR
0701 7400        R     MOV     A,#LOW str
0703 F0                MOVX    @DPTR,A
0704 900000      R     MOV     DPTR,#info_string
0707 E0                MOVX    A,@DPTR
0708 FB                MOV     R3,A
0709 A3                INC     DPTR
070A E0                MOVX    A,@DPTR
070B FA                MOV     R2,A
070C A3                INC     DPTR
070D E0                MOVX    A,@DPTR
070E F9                MOV     R1,A
070F 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 602
0712         ?C0130:
                                           ; SOURCE LINE # 604
0712 900000      R     MOV     DPTR,#i
0715 E0                MOVX    A,@DPTR
0716 FE                MOV     R6,A
0717 A3                INC     DPTR
0718 E0                MOVX    A,@DPTR
0719 FF                MOV     R7,A
071A 2400        E     ADD     A,#LOW IMU_connected
071C F582              MOV     DPL,A
071E 7400        E     MOV     A,#HIGH IMU_connected
0720 3E                ADDC    A,R6
0721 F583              MOV     DPH,A
0723 E0                MOVX    A,@DPTR
0724 75F003            MOV     B,#03H
0727 A4                MUL     AB
0728 2400        E     ADD     A,#LOW IMU_conf+01H
072A F582              MOV     DPL,A
072C E4                CLR     A
072D 3400        E     ADDC    A,#HIGH IMU_conf+01H
072F F583              MOV     DPH,A
0731 E0                MOVX    A,@DPTR
0732 7003              JNZ     $ + 5H
0734 020000      R     LJMP    ?C0131
                                           ; SOURCE LINE # 605
0737 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
073A 74FF              MOV     A,#0FFH
073C F0                MOVX    @DPTR,A
073D A3                INC     DPTR
073E 7400        R     MOV     A,#HIGH ?SC_597
0740 F0                MOVX    @DPTR,A
0741 A3                INC     DPTR
0742 7400        R     MOV     A,#LOW ?SC_597
0744 F0                MOVX    @DPTR,A
0745 900000      E     MOV     DPTR,#g_imu+07H
0748 75F013            MOV     B,#013H
074B EF                MOV     A,R7
074C 120000      E     LCALL   ?C?OFFXADD
074F EE                MOV     A,R6
0750 75F013            MOV     B,#013H
0753 A4                MUL     AB
0754 2583              ADD     A,DPH
0756 F583              MOV     DPH,A
0758 E0                MOVX    A,@DPTR
0759 FD                MOV     R5,A
075A A3                INC     DPTR
075B E0                MOVX    A,@DPTR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 64  

075C 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
075F CD                XCH     A,R5
0760 F0                MOVX    @DPTR,A
0761 A3                INC     DPTR
0762 ED                MOV     A,R5
0763 F0                MOVX    @DPTR,A
0764 900000      E     MOV     DPTR,#g_imu+09H
0767 75F013            MOV     B,#013H
076A EF                MOV     A,R7
076B 120000      E     LCALL   ?C?OFFXADD
076E EE                MOV     A,R6
076F 75F013            MOV     B,#013H
0772 A4                MUL     AB
0773 2583              ADD     A,DPH
0775 F583              MOV     DPH,A
0777 E0                MOVX    A,@DPTR
0778 FF                MOV     R7,A
0779 A3                INC     DPTR
077A E0                MOVX    A,@DPTR
077B 900000      E     MOV     DPTR,#?_sprintf?BYTE+08H
077E CF                XCH     A,R7
077F F0                MOVX    @DPTR,A
0780 A3                INC     DPTR
0781 EF                MOV     A,R7
0782 F0                MOVX    @DPTR,A
0783 900000      R     MOV     DPTR,#i
0786 E0                MOVX    A,@DPTR
0787 A3                INC     DPTR
0788 E0                MOVX    A,@DPTR
0789 900000      E     MOV     DPTR,#g_imu+0BH
078C 75F013            MOV     B,#013H
078F 120000      E     LCALL   ?C?OFFXADD
0792 EE                MOV     A,R6
0793 75F013            MOV     B,#013H
0796 A4                MUL     AB
0797 2583              ADD     A,DPH
0799 F583              MOV     DPH,A
079B E0                MOVX    A,@DPTR
079C FF                MOV     R7,A
079D A3                INC     DPTR
079E E0                MOVX    A,@DPTR
079F 900000      E     MOV     DPTR,#?_sprintf?BYTE+0AH
07A2 CF                XCH     A,R7
07A3 F0                MOVX    @DPTR,A
07A4 A3                INC     DPTR
07A5 EF                MOV     A,R7
07A6 F0                MOVX    @DPTR,A
07A7 7B01              MOV     R3,#01H
07A9 7A00        R     MOV     R2,#HIGH str
07AB 7900        R     MOV     R1,#LOW str
07AD 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 606
07B0 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
07B3 7401              MOV     A,#01H
07B5 F0                MOVX    @DPTR,A
07B6 A3                INC     DPTR
07B7 7400        R     MOV     A,#HIGH str
07B9 F0                MOVX    @DPTR,A
07BA A3                INC     DPTR
07BB 7400        R     MOV     A,#LOW str
07BD F0                MOVX    @DPTR,A
07BE 900000      R     MOV     DPTR,#info_string
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 65  

07C1 E0                MOVX    A,@DPTR
07C2 FB                MOV     R3,A
07C3 A3                INC     DPTR
07C4 E0                MOVX    A,@DPTR
07C5 FA                MOV     R2,A
07C6 A3                INC     DPTR
07C7 E0                MOVX    A,@DPTR
07C8 F9                MOV     R1,A
07C9 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 607
07CC         ?C0131:
                                           ; SOURCE LINE # 609
07CC 900000      R     MOV     DPTR,#i
07CF E0                MOVX    A,@DPTR
07D0 FE                MOV     R6,A
07D1 A3                INC     DPTR
07D2 E0                MOVX    A,@DPTR
07D3 FF                MOV     R7,A
07D4 2400        E     ADD     A,#LOW IMU_connected
07D6 F582              MOV     DPL,A
07D8 7400        E     MOV     A,#HIGH IMU_connected
07DA 3E                ADDC    A,R6
07DB F583              MOV     DPH,A
07DD E0                MOVX    A,@DPTR
07DE 75F003            MOV     B,#03H
07E1 A4                MUL     AB
07E2 2400        E     ADD     A,#LOW IMU_conf+02H
07E4 F582              MOV     DPL,A
07E6 E4                CLR     A
07E7 3400        E     ADDC    A,#HIGH IMU_conf+02H
07E9 F583              MOV     DPH,A
07EB E0                MOVX    A,@DPTR
07EC 7003              JNZ     $ + 5H
07EE 020000      R     LJMP    ?C0129
                                           ; SOURCE LINE # 610
07F1 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
07F4 74FF              MOV     A,#0FFH
07F6 F0                MOVX    @DPTR,A
07F7 A3                INC     DPTR
07F8 7400        R     MOV     A,#HIGH ?SC_615
07FA F0                MOVX    @DPTR,A
07FB A3                INC     DPTR
07FC 7400        R     MOV     A,#LOW ?SC_615
07FE F0                MOVX    @DPTR,A
07FF 900000      E     MOV     DPTR,#g_imu+0DH
0802 75F013            MOV     B,#013H
0805 EF                MOV     A,R7
0806 120000      E     LCALL   ?C?OFFXADD
0809 EE                MOV     A,R6
080A 75F013            MOV     B,#013H
080D A4                MUL     AB
080E 2583              ADD     A,DPH
0810 F583              MOV     DPH,A
0812 E0                MOVX    A,@DPTR
0813 FD                MOV     R5,A
0814 A3                INC     DPTR
0815 E0                MOVX    A,@DPTR
0816 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0819 CD                XCH     A,R5
081A F0                MOVX    @DPTR,A
081B A3                INC     DPTR
081C ED                MOV     A,R5
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 66  

081D F0                MOVX    @DPTR,A
081E 900000      E     MOV     DPTR,#g_imu+0FH
0821 75F013            MOV     B,#013H
0824 EF                MOV     A,R7
0825 120000      E     LCALL   ?C?OFFXADD
0828 EE                MOV     A,R6
0829 75F013            MOV     B,#013H
082C A4                MUL     AB
082D 2583              ADD     A,DPH
082F F583              MOV     DPH,A
0831 E0                MOVX    A,@DPTR
0832 FF                MOV     R7,A
0833 A3                INC     DPTR
0834 E0                MOVX    A,@DPTR
0835 900000      E     MOV     DPTR,#?_sprintf?BYTE+08H
0838 CF                XCH     A,R7
0839 F0                MOVX    @DPTR,A
083A A3                INC     DPTR
083B EF                MOV     A,R7
083C F0                MOVX    @DPTR,A
083D 900000      R     MOV     DPTR,#i
0840 E0                MOVX    A,@DPTR
0841 A3                INC     DPTR
0842 E0                MOVX    A,@DPTR
0843 900000      E     MOV     DPTR,#g_imu+011H
0846 75F013            MOV     B,#013H
0849 120000      E     LCALL   ?C?OFFXADD
084C EE                MOV     A,R6
084D 75F013            MOV     B,#013H
0850 A4                MUL     AB
0851 2583              ADD     A,DPH
0853 F583              MOV     DPH,A
0855 E0                MOVX    A,@DPTR
0856 FF                MOV     R7,A
0857 A3                INC     DPTR
0858 E0                MOVX    A,@DPTR
0859 900000      E     MOV     DPTR,#?_sprintf?BYTE+0AH
085C CF                XCH     A,R7
085D F0                MOVX    @DPTR,A
085E A3                INC     DPTR
085F EF                MOV     A,R7
0860 F0                MOVX    @DPTR,A
0861 7B01              MOV     R3,#01H
0863 7A00        R     MOV     R2,#HIGH str
0865 7900        R     MOV     R1,#LOW str
0867 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 611
086A 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
086D 7401              MOV     A,#01H
086F F0                MOVX    @DPTR,A
0870 A3                INC     DPTR
0871 7400        R     MOV     A,#HIGH str
0873 F0                MOVX    @DPTR,A
0874 A3                INC     DPTR
0875 7400        R     MOV     A,#LOW str
0877 F0                MOVX    @DPTR,A
0878 900000      R     MOV     DPTR,#info_string
087B E0                MOVX    A,@DPTR
087C FB                MOV     R3,A
087D A3                INC     DPTR
087E E0                MOVX    A,@DPTR
087F FA                MOV     R2,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 67  

0880 A3                INC     DPTR
0881 E0                MOVX    A,@DPTR
0882 F9                MOV     R1,A
0883 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 612
                                           ; SOURCE LINE # 614
0886         ?C0129:
0886 900000      R     MOV     DPTR,#i+01H
0889 E0                MOVX    A,@DPTR
088A 04                INC     A
088B F0                MOVX    @DPTR,A
088C 7006              JNZ     ?C0223
088E 900000      R     MOV     DPTR,#i
0891 E0                MOVX    A,@DPTR
0892 04                INC     A
0893 F0                MOVX    @DPTR,A
0894         ?C0223:
0894 020000      R     LJMP    ?C0127
0897         ?C0128:
                                           ; SOURCE LINE # 616
0897 900000      E     MOV     DPTR,#?_strcat?BYTE+03H
089A 74FF              MOV     A,#0FFH
089C F0                MOVX    @DPTR,A
089D A3                INC     DPTR
089E 7400        R     MOV     A,#HIGH ?SC_122
08A0 F0                MOVX    @DPTR,A
08A1 A3                INC     DPTR
08A2 7400        R     MOV     A,#LOW ?SC_122
08A4 F0                MOVX    @DPTR,A
08A5 900000      R     MOV     DPTR,#info_string
08A8 E0                MOVX    A,@DPTR
08A9 FB                MOV     R3,A
08AA A3                INC     DPTR
08AB E0                MOVX    A,@DPTR
08AC FA                MOV     R2,A
08AD A3                INC     DPTR
08AE E0                MOVX    A,@DPTR
08AF F9                MOV     R1,A
08B0 120000      E     LCALL   _strcat
                                           ; SOURCE LINE # 617
                                           ; SOURCE LINE # 618
08B3         ?C0133:
08B3 22                RET     
             ; FUNCTION _infoPrepare (END)

             ; FUNCTION _commWrite (BEGIN)
                                           ; SOURCE LINE # 624
0000 900000      R     MOV     DPTR,#packet_data
0003 EB                MOV     A,R3
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EA                MOV     A,R2
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 E9                MOV     A,R1
000A F0                MOVX    @DPTR,A
000B A3                INC     DPTR
000C EC                MOV     A,R4
000D F0                MOVX    @DPTR,A
000E A3                INC     DPTR
000F ED                MOV     A,R5
0010 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 68  

                                           ; SOURCE LINE # 625
                                           ; SOURCE LINE # 629
0011 7F3A              MOV     R7,#03AH
0013 120000      E     LCALL   _UART_RS485_PutChar
                                           ; SOURCE LINE # 630
0016 7F3A              MOV     R7,#03AH
0018 120000      E     LCALL   _UART_RS485_PutChar
                                           ; SOURCE LINE # 633
001B 900000      E     MOV     DPTR,#g_mem+01H
001E E0                MOVX    A,@DPTR
001F FF                MOV     R7,A
0020 120000      E     LCALL   _UART_RS485_PutChar
                                           ; SOURCE LINE # 636
0023 900000      R     MOV     DPTR,#packet_lenght
0026 E0                MOVX    A,@DPTR
0027 A3                INC     DPTR
0028 E0                MOVX    A,@DPTR
0029 FF                MOV     R7,A
002A 120000      E     LCALL   _UART_RS485_PutChar
                                           ; SOURCE LINE # 639
002D E4                CLR     A
002E F500        R     MOV     index,A
0030 F500        R     MOV     index+01H,A
0032         ?C0134:
0032 D3                SETB    C
0033 900000      R     MOV     DPTR,#packet_lenght+01H
0036 E0                MOVX    A,@DPTR
0037 9500        R     SUBB    A,index+01H
0039 900000      R     MOV     DPTR,#packet_lenght
003C E0                MOVX    A,@DPTR
003D 9500        R     SUBB    A,index
003F 4022              JC      ?C0135
                                           ; SOURCE LINE # 640
0041 900000      R     MOV     DPTR,#packet_data
0044 E0                MOVX    A,@DPTR
0045 FB                MOV     R3,A
0046 A3                INC     DPTR
0047 E0                MOVX    A,@DPTR
0048 FA                MOV     R2,A
0049 A3                INC     DPTR
004A E0                MOVX    A,@DPTR
004B 2500        R     ADD     A,index+01H
004D F9                MOV     R1,A
004E EA                MOV     A,R2
004F 3500        R     ADDC    A,index
0051 FA                MOV     R2,A
0052 120000      E     LCALL   ?C?CLDPTR
0055 FF                MOV     R7,A
0056 120000      E     LCALL   _UART_RS485_PutChar
0059 0500        R     INC     index+01H
005B E500        R     MOV     A,index+01H
005D 7002              JNZ     ?C0224
005F 0500        R     INC     index
0061         ?C0224:
0061 80CF              SJMP    ?C0134
0063         ?C0135:
                                           ; SOURCE LINE # 642
0063 E4                CLR     A
0064 F500        R     MOV     index,A
0066 F500        R     MOV     index+01H,A
0068         ?C0137:
                                           ; SOURCE LINE # 644
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 69  

0068 120000      E     LCALL   UART_RS485_ReadTxStatus
006B EF                MOV     A,R7
006C 20E013            JB      ACC.0,?C0138
006F 0500        R     INC     index+01H
0071 E500        R     MOV     A,index+01H
0073 AE00        R     MOV     R6,index
0075 7002              JNZ     ?C0225
0077 0500        R     INC     index
0079         ?C0225:
0079 14                DEC     A
007A D3                SETB    C
007B 94E8              SUBB    A,#0E8H
007D EE                MOV     A,R6
007E 9403              SUBB    A,#03H
0080 40E6              JC      ?C0137
0082         ?C0138:
                                           ; SOURCE LINE # 646
0082 7F01              MOV     R7,#01H
0084 120000      E     LCALL   _RS485_CTS_Write
                                           ; SOURCE LINE # 647
0087 E4                CLR     A
0088 FF                MOV     R7,A
0089 120000      E     LCALL   _RS485_CTS_Write
                                           ; SOURCE LINE # 648
008C 22                RET     
             ; FUNCTION _commWrite (END)

             ; FUNCTION _LCRChecksum (BEGIN)
                                           ; SOURCE LINE # 657
0000 900000      R     MOV     DPTR,#data_array
0003 EB                MOV     A,R3
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EA                MOV     A,R2
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 E9                MOV     A,R1
000A F0                MOVX    @DPTR,A
;---- Variable 'data_length' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 660
000B E4                CLR     A
000C F500        R     MOV     checksum,A
                                           ; SOURCE LINE # 662
000E F500        R     MOV     i,A
0010         ?C0140:
0010 E500        R     MOV     A,i
0012 C3                CLR     C
0013 9D                SUBB    A,R5
0014 5019              JNC     ?C0141
                                           ; SOURCE LINE # 663
0016 900000      R     MOV     DPTR,#data_array
0019 E0                MOVX    A,@DPTR
001A FB                MOV     R3,A
001B A3                INC     DPTR
001C E0                MOVX    A,@DPTR
001D FA                MOV     R2,A
001E A3                INC     DPTR
001F E0                MOVX    A,@DPTR
0020 2500        R     ADD     A,i
0022 F9                MOV     R1,A
0023 E4                CLR     A
0024 3A                ADDC    A,R2
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 70  

0025 FA                MOV     R2,A
0026 120000      E     LCALL   ?C?CLDPTR
0029 6200        R     XRL     checksum,A
002B 0500        R     INC     i
002D 80E1              SJMP    ?C0140
002F         ?C0141:
                                           ; SOURCE LINE # 665
002F AF00        R     MOV     R7,checksum
                                           ; SOURCE LINE # 666
0031         ?C0143:
0031 22                RET     
             ; FUNCTION _LCRChecksum (END)

             ; FUNCTION _sendAcknowledgment (BEGIN)
                                           ; SOURCE LINE # 672
;---- Variable 'value' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 673
;---- Variable 'packet_lenght' assigned to Register 'R4/R5' ----
0000 7D02              MOV     R5,#02H
0002 7C00              MOV     R4,#00H
                                           ; SOURCE LINE # 676
0004 900000      R     MOV     DPTR,#packet_data
0007 EF                MOV     A,R7
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 677
0009 A3                INC     DPTR
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 679
000B 7B01              MOV     R3,#01H
000D 7A00        R     MOV     R2,#HIGH packet_data
000F 7900        R     MOV     R1,#LOW packet_data
0011 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 680
0014 22                RET     
             ; FUNCTION _sendAcknowledgment (END)

             ; FUNCTION _memStore (BEGIN)
                                           ; SOURCE LINE # 691
0000 900000      R     MOV     DPTR,#displacement
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 692
                                           ; SOURCE LINE # 696
0008 900000      R     MOV     DPTR,#ret_val
000B 7401              MOV     A,#01H
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 699
000E 120000      E     LCALL   ISR_RS485_RX_Disable
                                           ; SOURCE LINE # 703
0011 120000      E     LCALL   CySetTemp
                                           ; SOURCE LINE # 705
0014 7800        E     MOV     R0,#LOW c_mem
0016 7C00        E     MOV     R4,#HIGH c_mem
0018 7D01              MOV     R5,#01H
001A 7B01              MOV     R3,#01H
001C 7A00        E     MOV     R2,#HIGH g_mem
001E 7900        E     MOV     R1,#LOW g_mem
0020 7E00              MOV     R6,#00H
0022 7F09              MOV     R7,#09H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 71  

0024 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 707
0027 900000      R     MOV     DPTR,#pages
002A E4                CLR     A
002B F0                MOVX    @DPTR,A
002C A3                INC     DPTR
002D 04                INC     A
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 709
002F E4                CLR     A
0030 900000      R     MOV     DPTR,#i
0033 F0                MOVX    @DPTR,A
0034 A3                INC     DPTR
0035 F0                MOVX    @DPTR,A
0036         ?C0145:
0036 900000      R     MOV     DPTR,#pages
0039 E0                MOVX    A,@DPTR
003A FE                MOV     R6,A
003B A3                INC     DPTR
003C E0                MOVX    A,@DPTR
003D FF                MOV     R7,A
003E 900000      R     MOV     DPTR,#i
0041 E0                MOVX    A,@DPTR
0042 FC                MOV     R4,A
0043 A3                INC     DPTR
0044 E0                MOVX    A,@DPTR
0045 FD                MOV     R5,A
0046 C3                CLR     C
0047 9F                SUBB    A,R7
0048 EE                MOV     A,R6
0049 6480              XRL     A,#080H
004B F8                MOV     R0,A
004C EC                MOV     A,R4
004D 6480              XRL     A,#080H
004F 98                SUBB    A,R0
0050 503F              JNC     ?C0146
                                           ; SOURCE LINE # 710
0052 ED                MOV     A,R5
0053 C4                SWAP    A
0054 F8                MOV     R0,A
0055 540F              ANL     A,#0FH
0057 C8                XCH     A,R0
0058 68                XRL     A,R0
0059 FF                MOV     R7,A
005A EC                MOV     A,R4
005B C4                SWAP    A
005C 54F0              ANL     A,#0F0H
005E 48                ORL     A,R0
005F FE                MOV     R6,A
0060 7B01              MOV     R3,#01H
0062 7400        E     MOV     A,#LOW g_mem
0064 2F                ADD     A,R7
0065 F9                MOV     R1,A
0066 7400        E     MOV     A,#HIGH g_mem
0068 3E                ADDC    A,R6
0069 FA                MOV     R2,A
006A 900000      R     MOV     DPTR,#displacement
006D E0                MOVX    A,@DPTR
006E A3                INC     DPTR
006F E0                MOVX    A,@DPTR
0070 FF                MOV     R7,A
0071 ED                MOV     A,R5
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 72  

0072 2F                ADD     A,R7
0073 FD                MOV     R5,A
0074 120000      E     LCALL   _EEPROM_Write
;---- Variable 'writeStatus' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 711
0077 EF                MOV     A,R7
0078 6007              JZ      ?C0147
                                           ; SOURCE LINE # 712
007A E4                CLR     A
007B 900000      R     MOV     DPTR,#ret_val
007E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 713
007F 8010              SJMP    ?C0146
                                           ; SOURCE LINE # 714
                                           ; SOURCE LINE # 715
0081         ?C0147:
0081 900000      R     MOV     DPTR,#i+01H
0084 E0                MOVX    A,@DPTR
0085 04                INC     A
0086 F0                MOVX    @DPTR,A
0087 7006              JNZ     ?C0226
0089 900000      R     MOV     DPTR,#i
008C E0                MOVX    A,@DPTR
008D 04                INC     A
008E F0                MOVX    @DPTR,A
008F         ?C0226:
008F 80A5              SJMP    ?C0145
0091         ?C0146:
                                           ; SOURCE LINE # 717
0091 7800        E     MOV     R0,#LOW g_mem
0093 7C00        E     MOV     R4,#HIGH g_mem
0095 7D01              MOV     R5,#01H
0097 7B01              MOV     R3,#01H
0099 7A00        E     MOV     R2,#HIGH c_mem
009B 7900        E     MOV     R1,#LOW c_mem
009D 7E00              MOV     R6,#00H
009F 7F09              MOV     R7,#09H
00A1 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 720
00A4 120000      E     LCALL   ISR_RS485_RX_Enable
                                           ; SOURCE LINE # 722
00A7 900000      R     MOV     DPTR,#ret_val
00AA E0                MOVX    A,@DPTR
00AB FF                MOV     R7,A
                                           ; SOURCE LINE # 723
00AC         ?C0149:
00AC 22                RET     
             ; FUNCTION _memStore (END)

             ; FUNCTION memRecall (BEGIN)
                                           ; SOURCE LINE # 734
                                           ; SOURCE LINE # 735
                                           ; SOURCE LINE # 738
;---- Variable 'i' assigned to Register 'R6/R7' ----
0000 E4                CLR     A
0001 FF                MOV     R7,A
0002 FE                MOV     R6,A
0003         ?C0150:
0003 C3                CLR     C
0004 EF                MOV     A,R7
0005 9409              SUBB    A,#09H
0007 EE                MOV     A,R6
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 73  

0008 9400              SUBB    A,#00H
000A 5023              JNC     ?C0151
                                           ; SOURCE LINE # 739
000C 900000      R     MOV     DPTR,#EEPROM_ADDR
000F E0                MOVX    A,@DPTR
0010 FC                MOV     R4,A
0011 A3                INC     DPTR
0012 E0                MOVX    A,@DPTR
0013 2F                ADD     A,R7
0014 F582              MOV     DPL,A
0016 EC                MOV     A,R4
0017 3E                ADDC    A,R6
0018 F583              MOV     DPH,A
001A E0                MOVX    A,@DPTR
001B FD                MOV     R5,A
001C 7400        E     MOV     A,#LOW g_mem
001E 2F                ADD     A,R7
001F F582              MOV     DPL,A
0021 7400        E     MOV     A,#HIGH g_mem
0023 3E                ADDC    A,R6
0024 F583              MOV     DPH,A
0026 ED                MOV     A,R5
0027 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 740
0028 0F                INC     R7
0029 EF                MOV     A,R7
002A 7001              JNZ     ?C0227
002C 0E                INC     R6
002D         ?C0227:
002D 80D4              SJMP    ?C0150
002F         ?C0151:
                                           ; SOURCE LINE # 743
002F 900000      E     MOV     DPTR,#g_mem
0032 E0                MOVX    A,@DPTR
0033 7004              JNZ     ?C0153
                                           ; SOURCE LINE # 744
0035 120000      R     LCALL   memRestore
                                           ; SOURCE LINE # 745
0038 22                RET     
0039         ?C0153:
                                           ; SOURCE LINE # 746
0039 7800        E     MOV     R0,#LOW c_mem
003B 7C00        E     MOV     R4,#HIGH c_mem
003D 7D01              MOV     R5,#01H
003F 7B01              MOV     R3,#01H
0041 7A00        E     MOV     R2,#HIGH g_mem
0043 7900        E     MOV     R1,#LOW g_mem
0045 7E00              MOV     R6,#00H
0047 7F09              MOV     R7,#09H
0049 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 747
                                           ; SOURCE LINE # 748
004C         ?C0155:
004C 22                RET     
             ; FUNCTION memRecall (END)

             ; FUNCTION memRestore (BEGIN)
                                           ; SOURCE LINE # 759
                                           ; SOURCE LINE # 762
;---- Variable 'i' assigned to Register 'R6/R7' ----
0000 E4                CLR     A
0001 FF                MOV     R7,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 74  

0002 FE                MOV     R6,A
0003         ?C0156:
0003 C3                CLR     C
0004 EF                MOV     A,R7
0005 9409              SUBB    A,#09H
0007 EE                MOV     A,R6
0008 9400              SUBB    A,#00H
000A 502A              JNC     ?C0157
                                           ; SOURCE LINE # 763
000C EF                MOV     A,R7
000D 2480              ADD     A,#080H
000F FD                MOV     R5,A
0010 E4                CLR     A
0011 3E                ADDC    A,R6
0012 FC                MOV     R4,A
0013 900000      R     MOV     DPTR,#EEPROM_ADDR
0016 E0                MOVX    A,@DPTR
0017 FA                MOV     R2,A
0018 A3                INC     DPTR
0019 E0                MOVX    A,@DPTR
001A 2D                ADD     A,R5
001B F582              MOV     DPL,A
001D EA                MOV     A,R2
001E 3C                ADDC    A,R4
001F F583              MOV     DPH,A
0021 E0                MOVX    A,@DPTR
0022 FD                MOV     R5,A
0023 7400        E     MOV     A,#LOW g_mem
0025 2F                ADD     A,R7
0026 F582              MOV     DPL,A
0028 7400        E     MOV     A,#HIGH g_mem
002A 3E                ADDC    A,R6
002B F583              MOV     DPH,A
002D ED                MOV     A,R5
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 764
002F 0F                INC     R7
0030 EF                MOV     A,R7
0031 7001              JNZ     ?C0228
0033 0E                INC     R6
0034         ?C0228:
0034 80CD              SJMP    ?C0156
0036         ?C0157:
                                           ; SOURCE LINE # 767
0036 900000      E     MOV     DPTR,#g_mem
0039 E0                MOVX    A,@DPTR
003A 7004              JNZ     ?C0159
                                           ; SOURCE LINE # 768
003C 120000      R     LCALL   memInit
003F 22                RET     
                                           ; SOURCE LINE # 769
0040         ?C0159:
                                           ; SOURCE LINE # 770
0040 E4                CLR     A
0041 FF                MOV     R7,A
0042 FE                MOV     R6,A
0043 120000      R     LCALL   _memStore
                                           ; SOURCE LINE # 771
                                           ; SOURCE LINE # 772
0046         ?C0160:
0046 22                RET     
             ; FUNCTION memRestore (END)
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 75  


             ; FUNCTION memInit (BEGIN)
                                           ; SOURCE LINE # 782
                                           ; SOURCE LINE # 783
                                           ; SOURCE LINE # 787
0000 900000      E     MOV     DPTR,#g_mem+01H
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 790
0006 E4                CLR     A
0007 900000      E     MOV     DPTR,#g_mem+04H
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 792
000B A3                INC     DPTR
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 794
000D A3                INC     DPTR
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 797
000F 900000      E     MOV     DPTR,#g_mem
0012 04                INC     A
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 800
0014 E4                CLR     A
0015 FF                MOV     R7,A
0016 FE                MOV     R6,A
0017 120000      R     LCALL   _memStore
001A EF                MOV     A,R7
001B 600E              JZ      ?C0162
001D 7F08              MOV     R7,#08H
001F 7E00              MOV     R6,#00H
0021 120000      R     LCALL   _memStore
0024 EF                MOV     A,R7
0025 6004              JZ      ?C0162
0027 7F01              MOV     R7,#01H
0029 8002              SJMP    ?C0163
002B         ?C0162:
002B 7F00              MOV     R7,#00H
002D         ?C0163:
                                           ; SOURCE LINE # 801
002D         ?C0164:
002D 22                RET     
             ; FUNCTION memInit (END)

             ; FUNCTION cmd_get_measurements (BEGIN)
                                           ; SOURCE LINE # 810
                                           ; SOURCE LINE # 812
0000 22                RET     
             ; FUNCTION cmd_get_measurements (END)

             ; FUNCTION cmd_set_inputs (BEGIN)
                                           ; SOURCE LINE # 814
                                           ; SOURCE LINE # 816
0000 22                RET     
             ; FUNCTION cmd_set_inputs (END)

             ; FUNCTION cmd_activate (BEGIN)
                                           ; SOURCE LINE # 818
                                           ; SOURCE LINE # 820
0000 22                RET     
             ; FUNCTION cmd_activate (END)

C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 76  

             ; FUNCTION cmd_get_activate (BEGIN)
                                           ; SOURCE LINE # 822
                                           ; SOURCE LINE # 824
0000 22                RET     
             ; FUNCTION cmd_get_activate (END)

             ; FUNCTION cmd_get_curr_and_meas (BEGIN)
                                           ; SOURCE LINE # 826
                                           ; SOURCE LINE # 828
0000 22                RET     
             ; FUNCTION cmd_get_curr_and_meas (END)

             ; FUNCTION cmd_get_currents (BEGIN)
                                           ; SOURCE LINE # 830
                                           ; SOURCE LINE # 832
0000 22                RET     
             ; FUNCTION cmd_get_currents (END)

             ; FUNCTION cmd_set_baudrate (BEGIN)
                                           ; SOURCE LINE # 834
                                           ; SOURCE LINE # 837
0000 900000      E     MOV     DPTR,#g_rx+01H
0003 E0                MOVX    A,@DPTR
0004 900000      E     MOV     DPTR,#c_mem+02H
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 839
0008 24F3              ADD     A,#0F3H
000A 700A              JNZ     ?C0173
                                           ; SOURCE LINE # 840
000C         ?C0172:
                                           ; SOURCE LINE # 841
000C 7D01              MOV     R5,#01H
000E 7F0C              MOV     R7,#0CH
0010 7E00              MOV     R6,#00H
0012 120000      E     LCALL   _CLOCK_UART_SetDividerRegister
                                           ; SOURCE LINE # 842
0015 22                RET     
                                           ; SOURCE LINE # 843
0016         ?C0173:
                                           ; SOURCE LINE # 844
0016 7D01              MOV     R5,#01H
0018 7F02              MOV     R7,#02H
001A 7E00              MOV     R6,#00H
001C 120000      E     LCALL   _CLOCK_UART_SetDividerRegister
                                           ; SOURCE LINE # 845
                                           ; SOURCE LINE # 846
001F         ?C0174:
001F 22                RET     
             ; FUNCTION cmd_set_baudrate (END)

             ; FUNCTION cmd_ping (BEGIN)
                                           ; SOURCE LINE # 848
                                           ; SOURCE LINE # 853
0000 E4                CLR     A
0001 900000      R     MOV     DPTR,#packet_data
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 856
0005 A3                INC     DPTR
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 859
0007 7B01              MOV     R3,#01H
0009 7A00        R     MOV     R2,#HIGH packet_data
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 77  

000B 7900        R     MOV     R1,#LOW packet_data
000D 7D02              MOV     R5,#02H
000F FC                MOV     R4,A
0010 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 860
0013 22                RET     
             ; FUNCTION cmd_ping (END)

             ; FUNCTION cmd_set_watchdog (BEGIN)
                                           ; SOURCE LINE # 862
                                           ; SOURCE LINE # 864
0000 900000      E     MOV     DPTR,#g_rx+01H
0003 E0                MOVX    A,@DPTR
0004 D3                SETB    C
0005 9400              SUBB    A,#00H
0007 500B              JNC     ?C0176
                                           ; SOURCE LINE # 866
0009 7F01              MOV     R7,#01H
000B 120000      E     LCALL   _WATCHDOG_ENABLER_Write
                                           ; SOURCE LINE # 867
000E E4                CLR     A
000F 900000      E     MOV     DPTR,#g_mem+03H
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 868
0013 22                RET     
0014         ?C0176:
                                           ; SOURCE LINE # 869
                                           ; SOURCE LINE # 871
0014 900000      E     MOV     DPTR,#g_rx+01H
0017 E0                MOVX    A,@DPTR
0018 D3                SETB    C
0019 94FA              SUBB    A,#0FAH
001B 4003              JC      ?C0178
                                           ; SOURCE LINE # 872
001D 74FA              MOV     A,#0FAH
001F F0                MOVX    @DPTR,A
0020         ?C0178:
                                           ; SOURCE LINE # 877
0020 900000      E     MOV     DPTR,#g_rx+01H
0023 E0                MOVX    A,@DPTR
0024 FF                MOV     R7,A
0025 7E00              MOV     R6,#00H
0027 7C01              MOV     R4,#01H
0029 7DF4              MOV     R5,#0F4H
002B 120000      E     LCALL   ?C?LIMUL
002E 780A              MOV     R0,#0AH
0030 120000      E     LCALL   ?C?ULSHR
0033 900000      E     MOV     DPTR,#g_mem+03H
0036 EF                MOV     A,R7
0037 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 878
0038 120000      E     LCALL   _WATCHDOG_COUNTER_WritePeriod
                                           ; SOURCE LINE # 879
003B E4                CLR     A
003C FF                MOV     R7,A
003D 120000      E     LCALL   _WATCHDOG_ENABLER_Write
                                           ; SOURCE LINE # 880
                                           ; SOURCE LINE # 881
0040         ?C0179:
0040 22                RET     
             ; FUNCTION cmd_set_watchdog (END)

C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 78  

             ; FUNCTION cmd_get_inputs (BEGIN)
                                           ; SOURCE LINE # 883
                                           ; SOURCE LINE # 885
0000 22                RET     
             ; FUNCTION cmd_get_inputs (END)

             ; FUNCTION cmd_store_params (BEGIN)
                                           ; SOURCE LINE # 887
                                           ; SOURCE LINE # 889
0000 E4                CLR     A
0001 FF                MOV     R7,A
0002 FE                MOV     R6,A
0003 120000      R     LCALL   _memStore
0006 EF                MOV     A,R7
0007 6006              JZ      ?C0181
                                           ; SOURCE LINE # 890
0009 7F01              MOV     R7,#01H
000B 120000      R     LCALL   _sendAcknowledgment
000E 22                RET     
000F         ?C0181:
                                           ; SOURCE LINE # 892
000F E4                CLR     A
0010 FF                MOV     R7,A
0011 120000      R     LCALL   _sendAcknowledgment
                                           ; SOURCE LINE # 893
0014         ?C0183:
0014 22                RET     
             ; FUNCTION cmd_store_params (END)

             ; FUNCTION cmd_get_emg (BEGIN)
                                           ; SOURCE LINE # 895
                                           ; SOURCE LINE # 897
0000 22                RET     
             ; FUNCTION cmd_get_emg (END)

             ; FUNCTION cmd_get_n_imu (BEGIN)
                                           ; SOURCE LINE # 899
                                           ; SOURCE LINE # 905
0000 900000      R     MOV     DPTR,#packet_data
0003 7493              MOV     A,#093H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 908
0006 900000      E     MOV     DPTR,#N_IMU_Connected
0009 E0                MOVX    A,@DPTR
000A 900000      R     MOV     DPTR,#packet_data+01H
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 911
000E 7B01              MOV     R3,#01H
0010 7A00        R     MOV     R2,#HIGH packet_data
0012 7900        R     MOV     R1,#LOW packet_data
0014 7D02              MOV     R5,#02H
0016 120000      R     LCALL   _LCRChecksum
0019 900000      R     MOV     DPTR,#packet_data+02H
001C EF                MOV     A,R7
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 914
001E 7B01              MOV     R3,#01H
0020 7A00        R     MOV     R2,#HIGH packet_data
0022 7900        R     MOV     R1,#LOW packet_data
0024 0D                INC     R5
0025 7C00              MOV     R4,#00H
0027 120000      R     LCALL   _commWrite
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 79  

                                           ; SOURCE LINE # 915
002A 22                RET     
             ; FUNCTION cmd_get_n_imu (END)

             ; FUNCTION cmd_get_mag_param (BEGIN)
                                           ; SOURCE LINE # 918
                                           ; SOURCE LINE # 921
0000 E4                CLR     A
0001 F500        R     MOV     k_imu,A
                                           ; SOURCE LINE # 923
0003 900000      E     MOV     DPTR,#N_IMU_Connected
0006 E0                MOVX    A,@DPTR
0007 25E0              ADD     A,ACC
0009 25E0              ADD     A,ACC
000B 2402              ADD     A,#02H
;---- Variable 'sz' assigned to Register 'R6' ----
000D FE                MOV     R6,A
                                           ; SOURCE LINE # 929
000E 900000      R     MOV     DPTR,#packet_data
0011 7494              MOV     A,#094H
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 931
0014 E4                CLR     A
0015 F500        R     MOV     k_imu,A
0017         ?C0186:
0017 900000      E     MOV     DPTR,#N_IMU_Connected
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C E500        R     MOV     A,k_imu
001E C3                CLR     C
001F 9F                SUBB    A,R7
0020 4003              JC      $ + 5H
0022 020000      R     LJMP    ?C0187
                                           ; SOURCE LINE # 932
                                           ; SOURCE LINE # 933
0025 7400        E     MOV     A,#LOW IMU_connected
0027 2500        R     ADD     A,k_imu
0029 F582              MOV     DPL,A
002B E4                CLR     A
002C 3400        E     ADDC    A,#HIGH IMU_connected
002E F583              MOV     DPH,A
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 E500        R     MOV     A,k_imu
0034 25E0              ADD     A,ACC
0036 25E0              ADD     A,ACC
0038 2400        R     ADD     A,#LOW packet_data+01H
003A F582              MOV     DPL,A
003C E4                CLR     A
003D 3400        R     ADDC    A,#HIGH packet_data+01H
003F F583              MOV     DPH,A
0041 EF                MOV     A,R7
0042 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 934
0043 7400        E     MOV     A,#LOW IMU_connected
0045 2500        R     ADD     A,k_imu
0047 F582              MOV     DPL,A
0049 E4                CLR     A
004A 3400        E     ADDC    A,#HIGH IMU_connected
004C F583              MOV     DPH,A
004E E0                MOVX    A,@DPTR
004F 75F003            MOV     B,#03H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 80  

0052 A4                MUL     AB
0053 2400        E     ADD     A,#LOW MagCal
0055 F582              MOV     DPL,A
0057 E4                CLR     A
0058 3400        E     ADDC    A,#HIGH MagCal
005A F583              MOV     DPH,A
005C E0                MOVX    A,@DPTR
005D FF                MOV     R7,A
005E E500        R     MOV     A,k_imu
0060 25E0              ADD     A,ACC
0062 25E0              ADD     A,ACC
0064 2400        R     ADD     A,#LOW packet_data+02H
0066 F582              MOV     DPL,A
0068 E4                CLR     A
0069 3400        R     ADDC    A,#HIGH packet_data+02H
006B F583              MOV     DPH,A
006D EF                MOV     A,R7
006E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 935
006F 7400        E     MOV     A,#LOW IMU_connected
0071 2500        R     ADD     A,k_imu
0073 F582              MOV     DPL,A
0075 E4                CLR     A
0076 3400        E     ADDC    A,#HIGH IMU_connected
0078 F583              MOV     DPH,A
007A E0                MOVX    A,@DPTR
007B 75F003            MOV     B,#03H
007E A4                MUL     AB
007F 2400        E     ADD     A,#LOW MagCal+01H
0081 F582              MOV     DPL,A
0083 E4                CLR     A
0084 3400        E     ADDC    A,#HIGH MagCal+01H
0086 F583              MOV     DPH,A
0088 E0                MOVX    A,@DPTR
0089 FF                MOV     R7,A
008A E500        R     MOV     A,k_imu
008C 25E0              ADD     A,ACC
008E 25E0              ADD     A,ACC
0090 2400        R     ADD     A,#LOW packet_data+03H
0092 F582              MOV     DPL,A
0094 E4                CLR     A
0095 3400        R     ADDC    A,#HIGH packet_data+03H
0097 F583              MOV     DPH,A
0099 EF                MOV     A,R7
009A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 936
009B 7400        E     MOV     A,#LOW IMU_connected
009D 2500        R     ADD     A,k_imu
009F F582              MOV     DPL,A
00A1 E4                CLR     A
00A2 3400        E     ADDC    A,#HIGH IMU_connected
00A4 F583              MOV     DPH,A
00A6 E0                MOVX    A,@DPTR
00A7 75F003            MOV     B,#03H
00AA A4                MUL     AB
00AB 2400        E     ADD     A,#LOW MagCal+02H
00AD F582              MOV     DPL,A
00AF E4                CLR     A
00B0 3400        E     ADDC    A,#HIGH MagCal+02H
00B2 F583              MOV     DPH,A
00B4 E0                MOVX    A,@DPTR
00B5 FF                MOV     R7,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 81  

00B6 E500        R     MOV     A,k_imu
00B8 25E0              ADD     A,ACC
00BA 25E0              ADD     A,ACC
00BC 2400        R     ADD     A,#LOW packet_data+04H
00BE F582              MOV     DPL,A
00C0 E4                CLR     A
00C1 3400        R     ADDC    A,#HIGH packet_data+04H
00C3 F583              MOV     DPH,A
00C5 EF                MOV     A,R7
00C6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 937
00C7 0500        R     INC     k_imu
00C9 020000      R     LJMP    ?C0186
00CC         ?C0187:
                                           ; SOURCE LINE # 940
00CC 7B01              MOV     R3,#01H
00CE 7A00        R     MOV     R2,#HIGH packet_data
00D0 7900        R     MOV     R1,#LOW packet_data
00D2 EE                MOV     A,R6
00D3 14                DEC     A
00D4 FD                MOV     R5,A
00D5 120000      R     LCALL   _LCRChecksum
00D8 7400        R     MOV     A,#LOW packet_data+0FFFFH
00DA 2E                ADD     A,R6
00DB F582              MOV     DPL,A
00DD E4                CLR     A
00DE 3400        R     ADDC    A,#HIGH packet_data+0FFFFH
00E0 F583              MOV     DPH,A
00E2 EF                MOV     A,R7
00E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 941
00E4 7B01              MOV     R3,#01H
00E6 7A00        R     MOV     R2,#HIGH packet_data
00E8 7900        R     MOV     R1,#LOW packet_data
00EA EE                MOV     A,R6
00EB FD                MOV     R5,A
00EC 7C00              MOV     R4,#00H
00EE 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 943
00F1 22                RET     
             ; FUNCTION cmd_get_mag_param (END)

             ; FUNCTION cmd_get_imu_readings (BEGIN)
                                           ; SOURCE LINE # 945
                                           ; SOURCE LINE # 949
0000 900000      E     MOV     DPTR,#imu_send_flag
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 950
0006 22                RET     
             ; FUNCTION cmd_get_imu_readings (END)

             ; FUNCTION cmd_set_imu_mode (BEGIN)
                                           ; SOURCE LINE # 952
                                           ; SOURCE LINE # 953
;---- Variable 'k_imu' assigned to Register 'R7' ----
0000 E4                CLR     A
0001 FF                MOV     R7,A
                                           ; SOURCE LINE # 956
0002 900000      E     MOV     DPTR,#g_rx+01H
0005 E0                MOVX    A,@DPTR
0006 FE                MOV     R6,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 82  

;---- Variable 'id' assigned to Register 'R6' ----
                                           ; SOURCE LINE # 957
0007 A3                INC     DPTR
0008 E0                MOVX    A,@DPTR
0009 FD                MOV     R5,A
;---- Variable 'flags' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 959
000A 5404              ANL     A,#04H
000C FC                MOV     R4,A
000D 13                RRC     A
000E 13                RRC     A
000F 543F              ANL     A,#03FH
0011 FC                MOV     R4,A
0012 EE                MOV     A,R6
0013 75F003            MOV     B,#03H
0016 A4                MUL     AB
0017 2400        E     ADD     A,#LOW IMU_conf
0019 F582              MOV     DPL,A
001B E4                CLR     A
001C 3400        E     ADDC    A,#HIGH IMU_conf
001E F583              MOV     DPH,A
0020 EC                MOV     A,R4
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 960
0022 ED                MOV     A,R5
0023 5402              ANL     A,#02H
0025 FC                MOV     R4,A
0026 C3                CLR     C
0027 13                RRC     A
0028 FC                MOV     R4,A
0029 EE                MOV     A,R6
002A 75F003            MOV     B,#03H
002D A4                MUL     AB
002E 2400        E     ADD     A,#LOW IMU_conf+01H
0030 F582              MOV     DPL,A
0032 E4                CLR     A
0033 3400        E     ADDC    A,#HIGH IMU_conf+01H
0035 F583              MOV     DPH,A
0037 EC                MOV     A,R4
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 961
0039 ED                MOV     A,R5
003A 5401              ANL     A,#01H
003C FD                MOV     R5,A
003D EE                MOV     A,R6
003E 75F003            MOV     B,#03H
0041 A4                MUL     AB
0042 2400        E     ADD     A,#LOW IMU_conf+02H
0044 F582              MOV     DPL,A
0046 E4                CLR     A
0047 3400        E     ADDC    A,#HIGH IMU_conf+02H
0049 F583              MOV     DPH,A
004B ED                MOV     A,R5
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 963
004D 900000      E     MOV     DPTR,#imus_data_size
0050 E4                CLR     A
0051 F0                MOVX    @DPTR,A
0052 A3                INC     DPTR
0053 04                INC     A
0054 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 965
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 83  

0055 E4                CLR     A
0056         ?C0191:
0056 900000      E     MOV     DPTR,#N_IMU_Connected
0059 E0                MOVX    A,@DPTR
005A FE                MOV     R6,A
005B EF                MOV     A,R7
005C C3                CLR     C
005D 9E                SUBB    A,R6
005E 4003              JC      $ + 5H
0060 020000      R     LJMP    ?C0192
                                           ; SOURCE LINE # 966
                                           ; SOURCE LINE # 967
0063 7400        E     MOV     A,#LOW IMU_connected
0065 2F                ADD     A,R7
0066 F582              MOV     DPL,A
0068 E4                CLR     A
0069 3400        E     ADDC    A,#HIGH IMU_connected
006B F583              MOV     DPH,A
006D E0                MOVX    A,@DPTR
006E FE                MOV     R6,A
006F 75F003            MOV     B,#03H
0072 A4                MUL     AB
0073 2400        E     ADD     A,#LOW IMU_conf+01H
0075 F582              MOV     DPL,A
0077 E4                CLR     A
0078 3400        E     ADDC    A,#HIGH IMU_conf+01H
007A F583              MOV     DPH,A
007C E0                MOVX    A,@DPTR
007D 75F006            MOV     B,#06H
0080 A4                MUL     AB
0081 FD                MOV     R5,A
0082 EE                MOV     A,R6
0083 75F003            MOV     B,#03H
0086 A4                MUL     AB
0087 2400        E     ADD     A,#LOW IMU_conf
0089 F582              MOV     DPL,A
008B E4                CLR     A
008C 3400        E     ADDC    A,#HIGH IMU_conf
008E F583              MOV     DPH,A
0090 E0                MOVX    A,@DPTR
0091 75F006            MOV     B,#06H
0094 A4                MUL     AB
0095 2D                ADD     A,R5
0096 FE                MOV     R6,A
0097 7400        E     MOV     A,#LOW IMU_connected
0099 2F                ADD     A,R7
009A F582              MOV     DPL,A
009C E4                CLR     A
009D 3400        E     ADDC    A,#HIGH IMU_connected
009F F583              MOV     DPH,A
00A1 E0                MOVX    A,@DPTR
00A2 FD                MOV     R5,A
00A3 75F003            MOV     B,#03H
00A6 A4                MUL     AB
00A7 2400        E     ADD     A,#LOW IMU_conf+02H
00A9 F582              MOV     DPL,A
00AB E4                CLR     A
00AC 3400        E     ADDC    A,#HIGH IMU_conf+02H
00AE F583              MOV     DPH,A
00B0 E0                MOVX    A,@DPTR
00B1 75F006            MOV     B,#06H
00B4 A4                MUL     AB
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 84  

00B5 2E                ADD     A,R6
00B6 2402              ADD     A,#02H
00B8 FB                MOV     R3,A
00B9 ED                MOV     A,R5
00BA 25E0              ADD     A,ACC
00BC 2400        E     ADD     A,#LOW single_imu_size
00BE F582              MOV     DPL,A
00C0 E4                CLR     A
00C1 3400        E     ADDC    A,#HIGH single_imu_size
00C3 F583              MOV     DPH,A
00C5 E4                CLR     A
00C6 F0                MOVX    @DPTR,A
00C7 A3                INC     DPTR
00C8 EB                MOV     A,R3
00C9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 968
00CA 7400        E     MOV     A,#LOW IMU_connected
00CC 2F                ADD     A,R7
00CD F582              MOV     DPL,A
00CF E4                CLR     A
00D0 3400        E     ADDC    A,#HIGH IMU_connected
00D2 F583              MOV     DPH,A
00D4 E0                MOVX    A,@DPTR
00D5 25E0              ADD     A,ACC
00D7 2400        E     ADD     A,#LOW single_imu_size
00D9 F582              MOV     DPL,A
00DB E4                CLR     A
00DC 3400        E     ADDC    A,#HIGH single_imu_size
00DE F583              MOV     DPH,A
00E0 E0                MOVX    A,@DPTR
00E1 FC                MOV     R4,A
00E2 A3                INC     DPTR
00E3 E0                MOVX    A,@DPTR
00E4 FD                MOV     R5,A
00E5 900000      E     MOV     DPTR,#imus_data_size+01H
00E8 E0                MOVX    A,@DPTR
00E9 2D                ADD     A,R5
00EA F0                MOVX    @DPTR,A
00EB 900000      E     MOV     DPTR,#imus_data_size
00EE E0                MOVX    A,@DPTR
00EF 3C                ADDC    A,R4
00F0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 969
00F1 0F                INC     R7
00F2 020000      R     LJMP    ?C0191
00F5         ?C0192:
                                           ; SOURCE LINE # 970
00F5 900000      E     MOV     DPTR,#imus_data_size+01H
00F8 E0                MOVX    A,@DPTR
00F9 04                INC     A
00FA F0                MOVX    @DPTR,A
00FB 7006              JNZ     ?C0229
00FD 900000      E     MOV     DPTR,#imus_data_size
0100 E0                MOVX    A,@DPTR
0101 04                INC     A
0102 F0                MOVX    @DPTR,A
0103         ?C0229:
                                           ; SOURCE LINE # 971
0103 22                RET     
             ; FUNCTION cmd_set_imu_mode (END)

             ; FUNCTION cmd_get_imus_mode (BEGIN)
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 85  

                                           ; SOURCE LINE # 973
                                           ; SOURCE LINE # 975
0000 E4                CLR     A
0001 F500        R     MOV     k_imu,A
                                           ; SOURCE LINE # 977
0003 900000      E     MOV     DPTR,#N_IMU_Connected
0006 E0                MOVX    A,@DPTR
0007 25E0              ADD     A,ACC
0009 2402              ADD     A,#02H
;---- Variable 'sz' assigned to Register 'R6' ----
000B FE                MOV     R6,A
                                           ; SOURCE LINE # 983
000C 900000      R     MOV     DPTR,#packet_data
000F 7497              MOV     A,#097H
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 985
0012 E4                CLR     A
0013 F500        R     MOV     k_imu,A
0015         ?C0195:
0015 900000      E     MOV     DPTR,#N_IMU_Connected
0018 E0                MOVX    A,@DPTR
0019 FF                MOV     R7,A
001A E500        R     MOV     A,k_imu
001C C3                CLR     C
001D 9F                SUBB    A,R7
001E 4003              JC      $ + 5H
0020 020000      R     LJMP    ?C0196
                                           ; SOURCE LINE # 986
                                           ; SOURCE LINE # 987
0023 7400        E     MOV     A,#LOW IMU_connected
0025 2500        R     ADD     A,k_imu
0027 F582              MOV     DPL,A
0029 E4                CLR     A
002A 3400        E     ADDC    A,#HIGH IMU_connected
002C F583              MOV     DPH,A
002E E0                MOVX    A,@DPTR
002F FF                MOV     R7,A
0030 E500        R     MOV     A,k_imu
0032 25E0              ADD     A,ACC
0034 2400        R     ADD     A,#LOW packet_data+01H
0036 F582              MOV     DPL,A
0038 E4                CLR     A
0039 3400        R     ADDC    A,#HIGH packet_data+01H
003B F583              MOV     DPH,A
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 988
003F 7400        E     MOV     A,#LOW IMU_connected
0041 2500        R     ADD     A,k_imu
0043 F582              MOV     DPL,A
0045 E4                CLR     A
0046 3400        E     ADDC    A,#HIGH IMU_connected
0048 F583              MOV     DPH,A
004A E0                MOVX    A,@DPTR
004B FF                MOV     R7,A
004C 75F003            MOV     B,#03H
004F A4                MUL     AB
0050 2400        E     ADD     A,#LOW IMU_conf+01H
0052 F582              MOV     DPL,A
0054 E4                CLR     A
0055 3400        E     ADDC    A,#HIGH IMU_conf+01H
0057 F583              MOV     DPH,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 86  

0059 E0                MOVX    A,@DPTR
005A FD                MOV     R5,A
005B 25E0              ADD     A,ACC
005D FD                MOV     R5,A
005E EF                MOV     A,R7
005F 75F003            MOV     B,#03H
0062 A4                MUL     AB
0063 2400        E     ADD     A,#LOW IMU_conf
0065 F582              MOV     DPL,A
0067 E4                CLR     A
0068 3400        E     ADDC    A,#HIGH IMU_conf
006A F583              MOV     DPH,A
006C E0                MOVX    A,@DPTR
006D FF                MOV     R7,A
006E 25E0              ADD     A,ACC
0070 25E0              ADD     A,ACC
0072 4D                ORL     A,R5
0073 FF                MOV     R7,A
0074 7400        E     MOV     A,#LOW IMU_connected
0076 2500        R     ADD     A,k_imu
0078 F582              MOV     DPL,A
007A E4                CLR     A
007B 3400        E     ADDC    A,#HIGH IMU_connected
007D F583              MOV     DPH,A
007F E0                MOVX    A,@DPTR
0080 75F003            MOV     B,#03H
0083 A4                MUL     AB
0084 2400        E     ADD     A,#LOW IMU_conf+02H
0086 F582              MOV     DPL,A
0088 E4                CLR     A
0089 3400        E     ADDC    A,#HIGH IMU_conf+02H
008B F583              MOV     DPH,A
008D E0                MOVX    A,@DPTR
008E 4F                ORL     A,R7
008F FF                MOV     R7,A
0090 E500        R     MOV     A,k_imu
0092 25E0              ADD     A,ACC
0094 2400        R     ADD     A,#LOW packet_data+02H
0096 F582              MOV     DPL,A
0098 E4                CLR     A
0099 3400        R     ADDC    A,#HIGH packet_data+02H
009B F583              MOV     DPH,A
009D EF                MOV     A,R7
009E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 989
009F 0500        R     INC     k_imu
00A1 020000      R     LJMP    ?C0195
00A4         ?C0196:
                                           ; SOURCE LINE # 992
00A4 7B01              MOV     R3,#01H
00A6 7A00        R     MOV     R2,#HIGH packet_data
00A8 7900        R     MOV     R1,#LOW packet_data
00AA EE                MOV     A,R6
00AB 14                DEC     A
00AC FD                MOV     R5,A
00AD 120000      R     LCALL   _LCRChecksum
00B0 7400        R     MOV     A,#LOW packet_data+0FFFFH
00B2 2E                ADD     A,R6
00B3 F582              MOV     DPL,A
00B5 E4                CLR     A
00B6 3400        R     ADDC    A,#HIGH packet_data+0FFFFH
00B8 F583              MOV     DPH,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 87  

00BA EF                MOV     A,R7
00BB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 993
00BC 7B01              MOV     R3,#01H
00BE 7A00        R     MOV     R2,#HIGH packet_data
00C0 7900        R     MOV     R1,#LOW packet_data
00C2 EE                MOV     A,R6
00C3 FD                MOV     R5,A
00C4 7C00              MOV     R4,#00H
00C6 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 995
00C9 22                RET     
             ; FUNCTION cmd_get_imus_mode (END)

             ; FUNCTION cmd_get_imus_sfs (BEGIN)
                                           ; SOURCE LINE # 997
                                           ; SOURCE LINE # 1000
0000 900000      R     MOV     DPTR,#sz
0003 741A              MOV     A,#01AH
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1002
0006 E4                CLR     A
0007 FF                MOV     R7,A
0008 FE                MOV     R6,A
0009 FD                MOV     R5,A
000A FC                MOV     R4,A
000B A3                INC     DPTR
000C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1003
000F E4                CLR     A
0010 FF                MOV     R7,A
0011 FE                MOV     R6,A
0012 FD                MOV     R5,A
0013 FC                MOV     R4,A
0014 900000      R     MOV     DPTR,#gyro_sf_par
0017 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1004
001A E4                CLR     A
001B FF                MOV     R7,A
001C FE                MOV     R6,A
001D FD                MOV     R5,A
001E FC                MOV     R4,A
001F 900000      R     MOV     DPTR,#mag_sf_par
0022 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1006
0025 900000      E     MOV     DPTR,#rateAcc
0028 E0                MOVX    A,@DPTR
0029 FC                MOV     R4,A
002A E4                CLR     A
002B 120000      E     LCALL   ?C?FCASTC
002E 7BFD              MOV     R3,#0FDH
0030 7A00              MOV     R2,#00H
0032 7980              MOV     R1,#080H
0034 7838              MOV     R0,#038H
0036 120000      E     LCALL   ?C?FPMUL
0039 900000      R     MOV     DPTR,#acc_sf_par
003C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1007
003F 900000      E     MOV     DPTR,#g_mem+04H
0042 E0                MOVX    A,@DPTR
0043 14                DEC     A
0044 701F              JNZ     ?C0199
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 88  

                                           ; SOURCE LINE # 1008
                                           ; SOURCE LINE # 1009
                                           ; SOURCE LINE # 1010
0046         ?C0201:
                                           ; SOURCE LINE # 1011
0046 900000      R     MOV     DPTR,#acc_sf_par
0049 E0                MOVX    A,@DPTR
004A FC                MOV     R4,A
004B A3                INC     DPTR
004C E0                MOVX    A,@DPTR
004D FD                MOV     R5,A
004E A3                INC     DPTR
004F E0                MOVX    A,@DPTR
0050 FE                MOV     R6,A
0051 A3                INC     DPTR
0052 E0                MOVX    A,@DPTR
0053 FF                MOV     R7,A
0054 7BD7              MOV     R3,#0D7H
0056 7AA3              MOV     R2,#0A3H
0058 791C              MOV     R1,#01CH
005A 7841              MOV     R0,#041H
005C 120000      E     LCALL   ?C?FPMUL
005F 900000      R     MOV     DPTR,#acc_sf_par
0062 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1012
                                           ; SOURCE LINE # 1013
                                           ; SOURCE LINE # 1014
                                           ; SOURCE LINE # 1015
0065         ?C0199:
                                           ; SOURCE LINE # 1017
0065 900000      E     MOV     DPTR,#rateGyro
0068 E0                MOVX    A,@DPTR
0069 FC                MOV     R4,A
006A E4                CLR     A
006B 120000      E     LCALL   ?C?FCASTC
006E 7BF3              MOV     R3,#0F3H
0070 7A01              MOV     R2,#01H
0072 79FA              MOV     R1,#0FAH
0074 783B              MOV     R0,#03BH
0076 120000      E     LCALL   ?C?FPMUL
0079 900000      R     MOV     DPTR,#gyro_sf_par
007C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1018
007F 900000      E     MOV     DPTR,#g_mem+05H
0082 E0                MOVX    A,@DPTR
0083 14                DEC     A
0084 701F              JNZ     ?C0203
                                           ; SOURCE LINE # 1019
                                           ; SOURCE LINE # 1020
                                           ; SOURCE LINE # 1021
0086         ?C0205:
                                           ; SOURCE LINE # 1022
0086 900000      R     MOV     DPTR,#gyro_sf_par
0089 E0                MOVX    A,@DPTR
008A FC                MOV     R4,A
008B A3                INC     DPTR
008C E0                MOVX    A,@DPTR
008D FD                MOV     R5,A
008E A3                INC     DPTR
008F E0                MOVX    A,@DPTR
0090 FE                MOV     R6,A
0091 A3                INC     DPTR
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 89  

0092 E0                MOVX    A,@DPTR
0093 FF                MOV     R7,A
0094 7B35              MOV     R3,#035H
0096 7AFA              MOV     R2,#0FAH
0098 798E              MOV     R1,#08EH
009A 783C              MOV     R0,#03CH
009C 120000      E     LCALL   ?C?FPMUL
009F 900000      R     MOV     DPTR,#gyro_sf_par
00A2 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1023
                                           ; SOURCE LINE # 1024
                                           ; SOURCE LINE # 1025
                                           ; SOURCE LINE # 1026
00A5         ?C0203:
                                           ; SOURCE LINE # 1028
00A5 7F19              MOV     R7,#019H
00A7 7E04              MOV     R6,#04H
00A9 7D16              MOV     R5,#016H
00AB 7C3E              MOV     R4,#03EH
00AD 900000      R     MOV     DPTR,#mag_sf_par
00B0 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1029
00B3 900000      E     MOV     DPTR,#g_mem+06H
00B6 E0                MOVX    A,@DPTR
00B7 FF                MOV     R7,A
00B8 8000              SJMP    ?C0207
                                           ; SOURCE LINE # 1030
                                           ; SOURCE LINE # 1031
                                           ; SOURCE LINE # 1032
00BA         ?C0207:
                                           ; SOURCE LINE # 1034
00BA 900000      R     MOV     DPTR,#packet_data
00BD 7498              MOV     A,#098H
00BF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1037
00C0 900000      R     MOV     DPTR,#acc_sf_par
00C3 E0                MOVX    A,@DPTR
00C4 FC                MOV     R4,A
00C5 A3                INC     DPTR
00C6 E0                MOVX    A,@DPTR
00C7 FD                MOV     R5,A
00C8 A3                INC     DPTR
00C9 E0                MOVX    A,@DPTR
00CA FE                MOV     R6,A
00CB A3                INC     DPTR
00CC E0                MOVX    A,@DPTR
00CD FF                MOV     R7,A
00CE 900000      R     MOV     DPTR,#packet_data+01H
00D1 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1038
00D4 900000      R     MOV     DPTR,#gyro_sf_par
00D7 E0                MOVX    A,@DPTR
00D8 FC                MOV     R4,A
00D9 A3                INC     DPTR
00DA E0                MOVX    A,@DPTR
00DB FD                MOV     R5,A
00DC A3                INC     DPTR
00DD E0                MOVX    A,@DPTR
00DE FE                MOV     R6,A
00DF A3                INC     DPTR
00E0 E0                MOVX    A,@DPTR
00E1 FF                MOV     R7,A
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 90  

00E2 900000      R     MOV     DPTR,#packet_data+05H
00E5 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1039
00E8 900000      R     MOV     DPTR,#mag_sf_par
00EB E0                MOVX    A,@DPTR
00EC FC                MOV     R4,A
00ED A3                INC     DPTR
00EE E0                MOVX    A,@DPTR
00EF FD                MOV     R5,A
00F0 A3                INC     DPTR
00F1 E0                MOVX    A,@DPTR
00F2 FE                MOV     R6,A
00F3 A3                INC     DPTR
00F4 E0                MOVX    A,@DPTR
00F5 FF                MOV     R7,A
00F6 900000      R     MOV     DPTR,#packet_data+09H
00F9 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1042
00FC 900000      E     MOV     DPTR,#g_mem+04H
00FF E0                MOVX    A,@DPTR
0100 FC                MOV     R4,A
0101 E4                CLR     A
0102 120000      E     LCALL   ?C?FCASTC
0105 900000      R     MOV     DPTR,#packet_data+0DH
0108 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1043
010B 900000      E     MOV     DPTR,#g_mem+05H
010E E0                MOVX    A,@DPTR
010F FC                MOV     R4,A
0110 E4                CLR     A
0111 120000      E     LCALL   ?C?FCASTC
0114 900000      R     MOV     DPTR,#packet_data+011H
0117 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1044
011A 900000      E     MOV     DPTR,#g_mem+06H
011D E0                MOVX    A,@DPTR
011E FC                MOV     R4,A
011F E4                CLR     A
0120 120000      E     LCALL   ?C?FCASTC
0123 900000      R     MOV     DPTR,#packet_data+015H
0126 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1047
0129 7B01              MOV     R3,#01H
012B 7A00        R     MOV     R2,#HIGH packet_data
012D 7900        R     MOV     R1,#LOW packet_data
012F 900000      R     MOV     DPTR,#sz
0132 E0                MOVX    A,@DPTR
0133 14                DEC     A
0134 FD                MOV     R5,A
0135 120000      R     LCALL   _LCRChecksum
0138 900000      R     MOV     DPTR,#sz
013B E0                MOVX    A,@DPTR
013C FE                MOV     R6,A
013D 2400        R     ADD     A,#LOW packet_data+0FFFFH
013F F582              MOV     DPL,A
0141 E4                CLR     A
0142 3400        R     ADDC    A,#HIGH packet_data+0FFFFH
0144 F583              MOV     DPH,A
0146 EF                MOV     A,R7
0147 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1048
0148 7B01              MOV     R3,#01H
C51 COMPILER V9.51   COMMAND_PROCESSING                                                    09/27/2016 11:48:44 PAGE 91  

014A 7A00        R     MOV     R2,#HIGH packet_data
014C 7900        R     MOV     R1,#LOW packet_data
014E EE                MOV     A,R6
014F FD                MOV     R5,A
0150 7C00              MOV     R4,#00H
0152 120000      R     LCALL   _commWrite
                                           ; SOURCE LINE # 1050
0155 22                RET     
             ; FUNCTION cmd_get_imus_sfs (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   6003    ----
   CONSTANT SIZE    =   1872    ----
   XDATA SIZE       =   1102    2641
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
